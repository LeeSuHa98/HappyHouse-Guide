<?xml version="1.0"?>
<testsuites id="2021-05-31T10:18:28.503Z" name="Integration test for Free api" time="468" tests="1429" failures="0" skipped="156">
  <testsuite id="2021-05-31T10:18:28.535Z" name="free/bulk - /free/bulk/10_basic.yml" time="4" tests="7" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:28.535Z" name="Array of objects" time="1"/>
    <testcase id="2021-05-31T10:18:29.558Z" name="Empty _id" time="0"/>
    <testcase id="2021-05-31T10:18:29.950Z" name="Empty _id with op_type create" time="1"/>
    <testcase id="2021-05-31T10:18:30.504Z" name="empty action" time="0"/>
    <testcase id="2021-05-31T10:18:30.661Z" name="When setting require_alias flag per request" time="1"/>
    <testcase id="2021-05-31T10:18:31.183Z" name="When setting require_alias flag" time="1"/>
    <testcase id="2021-05-31T10:18:31.728Z" name="Return item-level error when no write index defined for an alias" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:32.214Z" name="free/bulk - /free/bulk/11_basic_with_types.yml" time="1" tests="4" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:32.214Z" name="Array of objects" time="1"/>
    <testcase id="2021-05-31T10:18:32.735Z" name="Empty _id" time="0"/>
    <testcase id="2021-05-31T10:18:33.168Z" name="Empty _id with op_type create" time="0"/>
    <testcase id="2021-05-31T10:18:33.556Z" name="empty action" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:33.711Z" name="free/bulk - /free/bulk/11_dynamic_templates.yml" time="1" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:33.711Z" name="Dynamic templates" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:34.497Z" name="free/bulk - /free/bulk/20_list_of_strings.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:34.497Z" name="List of strings" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:34.917Z" name="free/bulk - /free/bulk/21_list_of_strings_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:34.917Z" name="List of strings" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:35.282Z" name="free/bulk - /free/bulk/30_big_string.yml" time="1" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:35.282Z" name="One big string" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:35.796Z" name="free/bulk - /free/bulk/31_big_string_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:35.796Z" name="One big string" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:36.184Z" name="free/bulk - /free/bulk/40_source.yml" time="1" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:36.184Z" name="Source filtering" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:36.771Z" name="free/bulk - /free/bulk/41_source_with_types.yml" time="1" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:36.771Z" name="Source filtering" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:37.417Z" name="free/bulk - /free/bulk/50_refresh.yml" time="2" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:37.417Z" name="refresh=true immediately makes changes are visible in search" time="0"/>
    <testcase id="2021-05-31T10:18:37.787Z" name="refresh=empty string immediately makes changes are visible in search" time="0"/>
    <testcase id="2021-05-31T10:18:38.146Z" name="refresh=wait_for waits until changes are visible in search" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:39.398Z" name="free/bulk - /free/bulk/51_refresh_with_types.yml" time="2" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:39.398Z" name="refresh=true immediately makes changes are visible in search" time="0"/>
    <testcase id="2021-05-31T10:18:39.750Z" name="refresh=empty string immediately makes changes are visible in search" time="0"/>
    <testcase id="2021-05-31T10:18:40.116Z" name="refresh=wait_for waits until changes are visible in search" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:41.371Z" name="free/bulk - /free/bulk/60_deprecated.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:18:41.371Z" name="Deprecated parameters should fail in Bulk query" time="0">
      <skipped>{
  "version": " - 6.99.99",
  "reason": "some parameters are removed starting from 7.0, their equivalents without underscore are used instead",
  "features": [
    "warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:18:41.516Z" name="free/bulk - /free/bulk/70_mix_typeless_typeful.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:41.516Z" name="bulk without types on an index that has types" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:41.824Z" name="free/bulk - /free/bulk/80_cas.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:41.824Z" name="Compare And Swap Sequence Numbers" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:42.200Z" name="free/bulk - /free/bulk/81_cas_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:42.200Z" name="Compare And Swap Sequence Numbers" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:42.544Z" name="free/bulk - /free/bulk/90_pipeline.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:42.544Z" name="One request has pipeline and another not" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:42.921Z" name="free/cat.aliases - /free/cat.aliases/10_basic.yml" time="4" tests="15" failures="0" skipped="6">
    <testcase id="2021-05-31T10:18:42.921Z" name="Help" time="0"/>
    <testcase id="2021-05-31T10:18:43.081Z" name="Help (pre 7.4.0)" time="0">
      <skipped>{
  "version": "7.4.0 - ",
  "features": "node_selector",
  "reason": "is_write_index is shown in cat.aliases starting version 7.4.0"
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:18:43.230Z" name="Empty cluster" time="0"/>
    <testcase id="2021-05-31T10:18:43.373Z" name="Simple alias" time="0"/>
    <testcase id="2021-05-31T10:18:43.684Z" name="Simple alias (pre 7.4.0)" time="0">
      <skipped>{
  "version": "7.4.0 - ",
  "features": "node_selector",
  "reason": "is_write_index is shown in cat.aliases starting version 7.4.0"
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:18:43.824Z" name="Complex alias" time="0"/>
    <testcase id="2021-05-31T10:18:44.119Z" name="Complex alias (pre 7.4.0)" time="0">
      <skipped>{
  "version": "7.4.0 - ",
  "features": "node_selector",
  "reason": "is_write_index is shown in cat.aliases starting version 7.4.0"
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:18:44.251Z" name="Alias name" time="0"/>
    <testcase id="2021-05-31T10:18:44.563Z" name="Multiple alias names" time="1"/>
    <testcase id="2021-05-31T10:18:45.074Z" name="Column headers" time="0"/>
    <testcase id="2021-05-31T10:18:45.367Z" name="Column headers (pre 7.4.0)" time="0">
      <skipped>{
  "version": "7.4.0 - ",
  "features": "node_selector",
  "reason": "is_write_index is shown in cat.aliases starting version 7.4.0"
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:18:45.509Z" name="Select columns" time="0"/>
    <testcase id="2021-05-31T10:18:45.796Z" name="Alias against closed index" time="0">
      <skipped>{
  "version": " - 7.3.99",
  "reason": "is_write_index is shown in cat.aliases starting version 7.4.0",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:18:45.924Z" name="Alias against closed index (pre 7.4.0)" time="0">
      <skipped>{
  "version": "7.4.0 - ",
  "features": [
    "node_selector",
    "allowed_warnings"
  ],
  "reason": "is_write_index is shown in cat.aliases starting version 7.4.0"
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:18:46.062Z" name="Alias sorting" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:46.454Z" name="free/cat.aliases - /free/cat.aliases/20_headers.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:18:46.454Z" name="Simple alias with yaml body through Accept header" time="0">
      <skipped>{
  "features": [
    "headers",
    "yaml"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:18:46.593Z" name="free/cat.aliases - /free/cat.aliases/30_json.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:46.593Z" name="Simple alias with json body through format argument" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:46.893Z" name="free/cat.aliases - /free/cat.aliases/40_hidden.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:46.893Z" name="Test cat aliases output with a hidden index with a hidden alias" time="0"/>
    <testcase id="2021-05-31T10:18:47.185Z" name="Test cat aliases output with a hidden index with a visible alias" time="0"/>
    <testcase id="2021-05-31T10:18:47.473Z" name="Test cat aliases output with a visible index with a hidden alias" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:47.770Z" name="free/cat.allocation - /free/cat.allocation/10_basic.yml" time="1" tests="8" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:47.770Z" name="Help" time="0"/>
    <testcase id="2021-05-31T10:18:47.916Z" name="Empty cluster" time="0"/>
    <testcase id="2021-05-31T10:18:48.066Z" name="One index" time="0"/>
    <testcase id="2021-05-31T10:18:48.331Z" name="Node ID" time="0"/>
    <testcase id="2021-05-31T10:18:48.469Z" name="All Nodes" time="0"/>
    <testcase id="2021-05-31T10:18:48.605Z" name="Column headers" time="0"/>
    <testcase id="2021-05-31T10:18:48.741Z" name="Select columns" time="0"/>
    <testcase id="2021-05-31T10:18:48.885Z" name="Bytes" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:49.029Z" name="free/cat.count - /free/cat.count/10_basic.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:49.029Z" name="Test cat count help" time="0"/>
    <testcase id="2021-05-31T10:18:49.164Z" name="Test cat count output" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:49.656Z" name="free/cat.fielddata - /free/cat.fielddata/10_basic.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:49.656Z" name="Help" time="0"/>
    <testcase id="2021-05-31T10:18:49.805Z" name="Test cat fielddata output" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:50.143Z" name="free/cat.health - /free/cat.health/10_basic.yml" time="0" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:50.143Z" name="Help" time="0"/>
    <testcase id="2021-05-31T10:18:50.276Z" name="Empty cluster" time="0"/>
    <testcase id="2021-05-31T10:18:50.425Z" name="With ts parameter" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:50.575Z" name="free/cat.indices - /free/cat.indices/10_basic.yml" time="2" tests="8" failures="0" skipped="3">
    <testcase id="2021-05-31T10:18:50.575Z" name="Test cat indices output (no indices)" time="0"/>
    <testcase id="2021-05-31T10:18:50.727Z" name="Test cat indices output" time="0"/>
    <testcase id="2021-05-31T10:18:51.085Z" name="Test cat indices output for closed index (pre 7.2.0)" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2021-05-31T10:18:51.086Z" name="Test cat indices output for closed index" time="0">
      <skipped>{
  "version": " - 7.1.99",
  "reason": "closed indices are replicated starting version 7.2.0",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:18:51.208Z" name="Test cat indices using health status" time="0"/>
    <testcase id="2021-05-31T10:18:51.611Z" name="Test cat indices using wildcards" time="1"/>
    <testcase id="2021-05-31T10:18:52.119Z" name="Test cat indices sort" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:18:52.263Z" name="Test cat indices with invalid health parameter" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:52.568Z" name="free/cat.indices - /free/cat.indices/20_hidden.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:52.568Z" name="Test cat indices output for hidden index" time="0"/>
    <testcase id="2021-05-31T10:18:52.864Z" name="Test cat indices output for dot-hidden index and dot-prefixed pattern" time="0"/>
    <testcase id="2021-05-31T10:18:53.161Z" name="Test cat indices output with a hidden index with a visible alias" time="0"/>
    <testcase id="2021-05-31T10:18:53.459Z" name="Test cat indices output with a hidden index with a hidden alias" time="0"/>
    <testcase id="2021-05-31T10:18:53.753Z" name="Test cat indices output with a hidden index, dot-hidden alias and dot pattern" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:54.048Z" name="free/cat.nodeattrs - /free/cat.nodeattrs/10_basic.yml" time="3" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:54.048Z" name="Help" time="0"/>
    <testcase id="2021-05-31T10:18:54.168Z" name="Test cat nodes attrs output" time="3"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:57.139Z" name="free/cat.nodes - /free/cat.nodes/10_basic.yml" time="0" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:57.139Z" name="Test cat nodes output" time="0"/>
    <testcase id="2021-05-31T10:18:57.330Z" name="Additional disk information" time="0"/>
    <testcase id="2021-05-31T10:18:57.469Z" name="Test cat nodes output with full_id set" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:57.618Z" name="free/cat.plugins - /free/cat.plugins/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:57.618Z" name="Help" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:57.761Z" name="free/cat.recovery - /free/cat.recovery/10_basic.yml" time="0" tests="2" failures="0" skipped="1">
    <testcase id="2021-05-31T10:18:57.761Z" name="Test cat recovery output" time="0"/>
    <testcase id="2021-05-31T10:18:58.110Z" name="Test cat recovery output for closed index" time="0">
      <skipped>{
  "version": " - 7.1.99",
  "reason": "closed indices are replicated starting version 7.2.0",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:18:58.238Z" name="free/cat.repositories - /free/cat.repositories/10_basic.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:18:58.238Z" name="Help" time="0"/>
    <testcase id="2021-05-31T10:18:58.378Z" name="Test cat repositories output" time="0"/>
    <testcase id="2021-05-31T10:18:58.776Z" name="Test cat repositories sort" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:18:59.132Z" name="free/cat.segments - /free/cat.segments/10_basic.yml" time="2" tests="4" failures="0" skipped="1">
    <testcase id="2021-05-31T10:18:59.132Z" name="Help" time="0"/>
    <testcase id="2021-05-31T10:18:59.284Z" name="Test cat segments output" time="1"/>
    <testcase id="2021-05-31T10:18:59.994Z" name="Test cat segments on closed index behaviour" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:19:00.125Z" name="Test cat segments using wildcards" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:00.887Z" name="free/cat.shards - /free/cat.shards/10_basic.yml" time="2" tests="4" failures="0" skipped="1">
    <testcase id="2021-05-31T10:19:00.887Z" name="Help" time="0">
      <skipped>{
  "version": " - 7.99.99",
  "reason": "shard path stats were added in 8.0.0"
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:19:01.015Z" name="Test cat shards output" time="1"/>
    <testcase id="2021-05-31T10:19:01.664Z" name="Test cat shards using wildcards" time="1"/>
    <testcase id="2021-05-31T10:19:02.266Z" name="Test cat shards sort" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:02.761Z" name="free/cat.snapshots - /free/cat.snapshots/10_basic.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:02.761Z" name="Help" time="0"/>
    <testcase id="2021-05-31T10:19:02.910Z" name="Test cat snapshots output" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:03.960Z" name="free/cat.tasks - /free/cat.tasks/10_basic.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:03.960Z" name="Test cat tasks output" time="0"/>
    <testcase id="2021-05-31T10:19:04.145Z" name="Test cat tasks output with X-Opaque-Id" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:04.290Z" name="free/cat.templates - /free/cat.templates/10_basic.yml" time="2" tests="9" failures="0" skipped="4">
    <testcase id="2021-05-31T10:19:04.290Z" name="Help" time="0"/>
    <testcase id="2021-05-31T10:19:04.450Z" name="No templates" time="0">
      <skipped>{
  "features": [
    "default_shards, no_xpack"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:19:04.587Z" name="Normal templates" time="0"/>
    <testcase id="2021-05-31T10:19:04.985Z" name="Filtered templates" time="0"/>
    <testcase id="2021-05-31T10:19:05.320Z" name="Column headers" time="0"/>
    <testcase id="2021-05-31T10:19:05.569Z" name="Select columns" time="0"/>
    <testcase id="2021-05-31T10:19:05.813Z" name="Sort templates" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "format changed in 7.8 to accomodate V2 index templates",
  "features": [
    "default_shards, no_xpack"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:19:05.947Z" name="Multiple template" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "format changed in 7.8 to accomodate V2 index templates",
  "features": [
    "default_shards, no_xpack"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:19:06.085Z" name="Mixture of legacy and composable templates" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "format changed in 7.8 to accomodate V2 index templates",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:19:06.217Z" name="free/cat.thread_pool - /free/cat.thread_pool/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:06.217Z" name="Test cat thread_pool output" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:06.428Z" name="free/cluster.allocation_explain - /free/cluster.allocation_explain/10_basic.yml" time="1" tests="4" failures="0" skipped="1">
    <testcase id="2021-05-31T10:19:06.428Z" name="bad cluster shard allocation explanation request" time="0"/>
    <testcase id="2021-05-31T10:19:06.577Z" name="cluster shard allocation explanation test" time="0"/>
    <testcase id="2021-05-31T10:19:06.854Z" name="cluster shard allocation explanation test with empty request" time="0"/>
    <testcase id="2021-05-31T10:19:07.138Z" name="Cluster shard allocation explanation test with a closed index" time="0">
      <skipped>{
  "version": " - 7.1.99",
  "reason": "closed indices are replicated starting version 7.2.0",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:19:07.271Z" name="free/cluster.component_template - /free/cluster.component_template/10_basic.yml" time="0" tests="2" failures="0" skipped="1">
    <testcase id="2021-05-31T10:19:07.271Z" name="Basic CRUD" time="0"/>
    <testcase id="2021-05-31T10:19:07.630Z" name="Delete multiple templates" time="0">
      <skipped>{
  "version": " - 7.99.99",
  "reason": "not yet backported"
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:19:07.766Z" name="free/cluster.health - /free/cluster.health/10_basic.yml" time="2" tests="8" failures="0" skipped="2">
    <testcase id="2021-05-31T10:19:07.766Z" name="cluster health basic test" time="0"/>
    <testcase id="2021-05-31T10:19:07.922Z" name="cluster health basic test, one index" time="0"/>
    <testcase id="2021-05-31T10:19:08.221Z" name="cluster health basic test, one index with wait for active shards" time="0"/>
    <testcase id="2021-05-31T10:19:08.528Z" name="cluster health basic test, one index with wait for all active shards" time="0"/>
    <testcase id="2021-05-31T10:19:08.854Z" name="cluster health basic test, one index with wait for no initializing shards" time="0"/>
    <testcase id="2021-05-31T10:19:09.138Z" name="cluster health levels" time="0"/>
    <testcase id="2021-05-31T10:19:09.425Z" name="cluster health with closed index (pre 7.2.0)" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2021-05-31T10:19:09.425Z" name="cluster health with closed index" time="0">
      <skipped>{
  "version": " - 7.1.99",
  "reason": "closed indices are replicated starting version 7.2.0",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:19:09.570Z" name="free/cluster.health - /free/cluster.health/20_request_timeout.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:09.570Z" name="cluster health request timeout on waiting for nodes" time="0"/>
    <testcase id="2021-05-31T10:19:09.712Z" name="cluster health request timeout waiting for active shards" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:09.863Z" name="free/cluster.health - /free/cluster.health/30_indices_options.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:19:09.863Z" name="cluster health with expand_wildcards" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:19:09.864Z" name="free/cluster.pending_tasks - /free/cluster.pending_tasks/10_basic.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:09.864Z" name="Test pending tasks" time="0"/>
    <testcase id="2021-05-31T10:19:10.012Z" name="Test pending tasks with local flag" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:10.160Z" name="free/cluster.put_settings - /free/cluster.put_settings/10_basic.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:10.160Z" name="Test put and reset transient settings" time="0"/>
    <testcase id="2021-05-31T10:19:10.413Z" name="Test put and reset persistent settings" time="0"/>
    <testcase id="2021-05-31T10:19:10.663Z" name="Test get a default settings" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:10.831Z" name="free/cluster.remote_info - /free/cluster.remote_info/10_info.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:10.831Z" name="Get an empty remote info" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:10.977Z" name="free/cluster.reroute - /free/cluster.reroute/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:10.977Z" name="Basic sanity check" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:11.138Z" name="free/cluster.reroute - /free/cluster.reroute/11_explain.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:11.138Z" name="Explain API with empty command list" time="0"/>
    <testcase id="2021-05-31T10:19:11.450Z" name="Explain API for non-existent node &amp; shard" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:11.780Z" name="free/cluster.reroute - /free/cluster.reroute/20_response_filtering.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:11.780Z" name="Do not return metadata by default" time="0"/>
    <testcase id="2021-05-31T10:19:11.966Z" name="return metadata if requested" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:12.131Z" name="free/cluster.state - /free/cluster.state/10_basic.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:12.131Z" name="get cluster state" time="0"/>
    <testcase id="2021-05-31T10:19:12.313Z" name="get cluster state returns cluster_uuid at the top level" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:12.470Z" name="free/cluster.state - /free/cluster.state/20_filtering.yml" time="4" tests="10" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:12.470Z" name="Filtering the cluster state by blocks should return the blocks field even if the response is empty" time="0"/>
    <testcase id="2021-05-31T10:19:12.805Z" name="Filtering the cluster state by blocks should return the blocks" time="0"/>
    <testcase id="2021-05-31T10:19:13.201Z" name="Filtering the cluster state by nodes only should work" time="0"/>
    <testcase id="2021-05-31T10:19:13.522Z" name="Filtering the cluster state by metadata only should work" time="0"/>
    <testcase id="2021-05-31T10:19:13.846Z" name="Filtering the cluster state by routing table only should work" time="0"/>
    <testcase id="2021-05-31T10:19:14.182Z" name="Filtering the cluster state by routing nodes only should work" time="0"/>
    <testcase id="2021-05-31T10:19:14.509Z" name="Filtering the cluster state by indices should work in routing table and metadata" time="1"/>
    <testcase id="2021-05-31T10:19:15.021Z" name="Filtering the cluster state using _all for indices and metrics should work" time="0"/>
    <testcase id="2021-05-31T10:19:15.350Z" name="Filtering the cluster state by indices using wildcards should work in routing table and metadata" time="1"/>
    <testcase id="2021-05-31T10:19:15.973Z" name="Filtering the cluster state returns cluster_uuid at the top level regardless of metric filters" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:16.314Z" name="free/cluster.state - /free/cluster.state/30_expand_wildcards.yml" time="0" tests="3" failures="0" skipped="3">
    <testcase id="2021-05-31T10:19:16.314Z" name="Test expand_wildcards parameter on closed, open indices and both" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:19:16.315Z" name="Test ignore_unavailable parameter" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:19:16.315Z" name="Test allow_no_indices parameter" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:19:16.318Z" name="free/cluster.stats - /free/cluster.stats/10_basic.yml" time="1" tests="6" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:16.318Z" name="cluster stats test" time="0"/>
    <testcase id="2021-05-31T10:19:16.542Z" name="get cluster stats returns cluster_uuid at the top level" time="0"/>
    <testcase id="2021-05-31T10:19:16.680Z" name="get cluster stats returns discovery types" time="0"/>
    <testcase id="2021-05-31T10:19:16.830Z" name="get cluster stats returns packaging types" time="0"/>
    <testcase id="2021-05-31T10:19:16.983Z" name="get cluster stats stats without runtime fields" time="0"/>
    <testcase id="2021-05-31T10:19:17.263Z" name="Usage stats with script-less runtime fields" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:17.565Z" name="free/cluster.voting_config_exclusions - /free/cluster.voting_config_exclusions/10_basic.yml" time="1" tests="7" failures="0" skipped="2">
    <testcase id="2021-05-31T10:19:17.565Z" name="Get cluster state without voting config exclusions" time="0"/>
    <testcase id="2021-05-31T10:19:17.734Z" name="Add voting config exclusion by unknown node Id" time="0"/>
    <testcase id="2021-05-31T10:19:17.930Z" name="Add voting config exclusion by unknown node Ids" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "features": [
    "contains"
  ],
  "reason": "contains is a newly added assertion, and this tests the new voting config exclusions API introduced in 7.8.0"
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:19:18.115Z" name="Add voting config exclusion by unknown node name" time="0"/>
    <testcase id="2021-05-31T10:19:18.305Z" name="Add voting config exclusion by unknown node names" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "features": [
    "contains"
  ],
  "reason": "contains is a newly added assertion, and this tests the new voting config exclusions API introduced in 7.8.0"
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:19:18.484Z" name="Throw exception when adding voting config exclusion without specifying nodes" time="0"/>
    <testcase id="2021-05-31T10:19:18.653Z" name="Throw exception when adding voting config exclusion and specifying both node_ids and node_names" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:18.809Z" name="free/count - /free/count/10_basic.yml" time="1" tests="4" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:18.809Z" name="count with body" time="0"/>
    <testcase id="2021-05-31T10:19:19.160Z" name="count with empty body" time="0"/>
    <testcase id="2021-05-31T10:19:19.493Z" name="count body without query element" time="0"/>
    <testcase id="2021-05-31T10:19:19.829Z" name="test negative terminate_after throws IAE" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:20.170Z" name="free/count - /free/count/11_basic_with_types.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:20.170Z" name="count with body" time="0"/>
    <testcase id="2021-05-31T10:19:20.573Z" name="count with empty body" time="0"/>
    <testcase id="2021-05-31T10:19:20.902Z" name="count body without query element" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:21.230Z" name="free/count - /free/count/20_query_string.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:21.230Z" name="count with query_string parameters" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:21.616Z" name="free/create - /free/create/10_with_id.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:21.616Z" name="Create with ID" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:22.011Z" name="free/create - /free/create/11_with_id_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:22.011Z" name="Create with ID" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:22.375Z" name="free/create - /free/create/15_without_id.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:22.375Z" name="Create without ID" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:22.514Z" name="free/create - /free/create/15_without_id_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:22.514Z" name="Create without ID" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:22.647Z" name="free/create - /free/create/35_external_version.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:22.647Z" name="External version" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:22.789Z" name="free/create - /free/create/36_external_version_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:22.789Z" name="External version" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:22.926Z" name="free/create - /free/create/40_routing.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:22.926Z" name="Routing" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:23.363Z" name="free/create - /free/create/41_routing_with_types.yml" time="1" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:23.363Z" name="Routing" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:23.866Z" name="free/create - /free/create/60_refresh.yml" time="2" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:23.866Z" name="Refresh" time="0"/>
    <testcase id="2021-05-31T10:19:24.207Z" name="When refresh url parameter is an empty string that means &quot;refresh immediately&quot;" time="0"/>
    <testcase id="2021-05-31T10:19:24.508Z" name="refresh=wait_for waits until changes are visible in search" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:25.740Z" name="free/create - /free/create/61_refresh_with_types.yml" time="2" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:25.740Z" name="Refresh" time="0"/>
    <testcase id="2021-05-31T10:19:26.093Z" name="When refresh url parameter is an empty string that means &quot;refresh immediately&quot;" time="0"/>
    <testcase id="2021-05-31T10:19:26.389Z" name="refresh=wait_for waits until changes are visible in search" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:27.597Z" name="free/create - /free/create/70_nested.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:27.597Z" name="Indexing a doc with No. nested objects less or equal to index.mapping.nested_objects.limit should succeed" time="0"/>
    <testcase id="2021-05-31T10:19:27.928Z" name="Indexing a doc with No. nested objects more than index.mapping.nested_objects.limit should fail" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:28.188Z" name="free/create - /free/create/71_nested_with_types.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:28.188Z" name="Indexing a doc with No. nested objects less or equal to index.mapping.nested_objects.limit should succeed" time="0"/>
    <testcase id="2021-05-31T10:19:28.523Z" name="Indexing a doc with No. nested objects more than index.mapping.nested_objects.limit should fail" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:28.797Z" name="free/delete - /free/delete/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:28.797Z" name="Basic" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:29.205Z" name="free/delete - /free/delete/11_shard_header.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:29.205Z" name="Delete check shard header" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:29.574Z" name="free/delete - /free/delete/12_result.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:29.574Z" name="Delete result field" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:29.892Z" name="free/delete - /free/delete/13_basic_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:29.892Z" name="Basic" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:30.216Z" name="free/delete - /free/delete/14_shard_header_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:30.216Z" name="Delete check shard header" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:30.560Z" name="free/delete - /free/delete/15_result_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:30.560Z" name="Delete result field" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:30.913Z" name="free/delete - /free/delete/20_cas.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:30.913Z" name="Internal version" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:31.243Z" name="free/delete - /free/delete/21_cas_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:31.243Z" name="Internal version" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:31.589Z" name="free/delete - /free/delete/25_external_version.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:31.589Z" name="External version" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:32.010Z" name="free/delete - /free/delete/26_external_gte_version.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:32.010Z" name="External GTE version" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:32.392Z" name="free/delete - /free/delete/27_external_version_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:32.392Z" name="External version" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:32.695Z" name="free/delete - /free/delete/28_external_gte_version_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:32.695Z" name="External GTE version" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:33.027Z" name="free/delete - /free/delete/30_routing.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:33.027Z" name="Routing" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:33.515Z" name="free/delete - /free/delete/31_routing_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:33.515Z" name="Routing" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:33.924Z" name="free/delete - /free/delete/50_refresh.yml" time="2" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:33.924Z" name="Refresh" time="1"/>
    <testcase id="2021-05-31T10:19:34.448Z" name="When refresh url parameter is an empty string that means &quot;refresh immediately&quot;" time="0"/>
    <testcase id="2021-05-31T10:19:34.795Z" name="refresh=wait_for waits until changes are visible in search" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:36.015Z" name="free/delete - /free/delete/51_refresh_with_types.yml" time="2" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:36.015Z" name="Refresh" time="0"/>
    <testcase id="2021-05-31T10:19:36.479Z" name="When refresh url parameter is an empty string that means &quot;refresh immediately&quot;" time="0"/>
    <testcase id="2021-05-31T10:19:36.832Z" name="refresh=wait_for waits until changes are visible in search" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:38.066Z" name="free/delete - /free/delete/60_missing.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:38.066Z" name="Missing document with catch" time="0"/>
    <testcase id="2021-05-31T10:19:38.211Z" name="Missing document with ignore" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:38.350Z" name="free/delete - /free/delete/61_missing_with_types.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:38.350Z" name="Missing document with catch" time="0"/>
    <testcase id="2021-05-31T10:19:38.495Z" name="Missing document with ignore" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:38.630Z" name="free/delete - /free/delete/70_mix_typeless_typeful.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:38.630Z" name="DELETE with typeless API on an index that has types" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:38.928Z" name="free/exists - /free/exists/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:38.928Z" name="Basic" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:39.328Z" name="free/exists - /free/exists/11_basic_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:39.328Z" name="Basic" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:39.647Z" name="free/exists - /free/exists/40_routing.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:39.647Z" name="Routing" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:40.080Z" name="free/exists - /free/exists/41_routing_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:40.080Z" name="Routing" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:40.575Z" name="free/exists - /free/exists/60_realtime_refresh.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:40.575Z" name="Realtime Refresh" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:40.971Z" name="free/exists - /free/exists/61_realtime_refresh_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:40.971Z" name="Realtime Refresh" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:41.320Z" name="free/exists - /free/exists/70_defaults.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:41.320Z" name="Client-side default type" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:41.681Z" name="free/exists - /free/exists/71_defaults_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:41.681Z" name="Client-side default type" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:42.118Z" name="free/explain - /free/explain/10_basic.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:42.118Z" name="Basic explain" time="0"/>
    <testcase id="2021-05-31T10:19:42.492Z" name="Basic explain with alias" time="0"/>
    <testcase id="2021-05-31T10:19:42.823Z" name="Explain body without query element" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:43.154Z" name="free/explain - /free/explain/11_basic_with_types.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:43.154Z" name="Basic explain" time="0"/>
    <testcase id="2021-05-31T10:19:43.504Z" name="Basic explain with alias" time="0"/>
    <testcase id="2021-05-31T10:19:43.822Z" name="Explain body without query element" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:44.140Z" name="free/explain - /free/explain/20_source_filtering.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:44.140Z" name="Source filtering" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:44.478Z" name="free/explain - /free/explain/21_source_filtering_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:44.478Z" name="Source filtering" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:44.813Z" name="free/explain - /free/explain/30_query_string.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:44.813Z" name="explain with query_string parameters" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:45.157Z" name="free/explain - /free/explain/31_query_string_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:45.157Z" name="explain with query_string parameters" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:45.482Z" name="free/explain - /free/explain/40_mix_typeless_typeful.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:45.482Z" name="Explain with typeless API on an index that has types" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:45.836Z" name="free/features.get_features - /free/features.get_features/10_basic.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:19:45.836Z" name="Get Features" time="0">
      <skipped>{
  "features": "contains",
  "version": " - 7.99.99",
  "reason": "This API was added in 7.12.0"
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:19:45.978Z" name="free/features.reset_features - /free/features.reset_features/10_basic.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:19:45.978Z" name="Get Features" time="0">
      <skipped>{
  "features": "contains",
  "version": " - 7.99.99",
  "reason": "This API was added in 7.13.0"
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:19:46.113Z" name="free/field_caps - /free/field_caps/10_basic.yml" time="3" tests="7" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:46.113Z" name="Get simple field caps" time="0"/>
    <testcase id="2021-05-31T10:19:46.572Z" name="Get date_nanos field caps" time="1"/>
    <testcase id="2021-05-31T10:19:47.137Z" name="Get leaves field caps" time="0"/>
    <testcase id="2021-05-31T10:19:47.621Z" name="Get object and nested field caps" time="0"/>
    <testcase id="2021-05-31T10:19:48.113Z" name="Get prefix field caps" time="1"/>
    <testcase id="2021-05-31T10:19:48.658Z" name="Mix in non-existing field field caps" time="0"/>
    <testcase id="2021-05-31T10:19:49.100Z" name="Field caps with include_unmapped" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:49.568Z" name="free/field_caps - /free/field_caps/20_meta.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:49.568Z" name="Merge metadata across multiple indices" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:50.000Z" name="free/field_caps - /free/field_caps/30_filter.yml" time="1" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:50.000Z" name="Field caps with index filter" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:50.677Z" name="free/get - /free/get/100_mix_typeless_typeful.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:50.677Z" name="GET with typeless API on an index that has types" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:50.953Z" name="free/get - /free/get/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:50.953Z" name="Basic" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:51.276Z" name="free/get - /free/get/11_basic_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:51.276Z" name="Basic" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:51.601Z" name="free/get - /free/get/15_default_values.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:51.601Z" name="Default values" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:51.916Z" name="free/get - /free/get/16_default_values_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:51.916Z" name="Default values" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:52.299Z" name="free/get - /free/get/20_stored_fields.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:52.299Z" name="Stored fields" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:52.580Z" name="free/get - /free/get/21_stored_fields_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:52.580Z" name="Stored fields" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:52.914Z" name="free/get - /free/get/40_routing.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:52.914Z" name="Routing" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:53.329Z" name="free/get - /free/get/41_routing_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:53.329Z" name="Routing" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:53.747Z" name="free/get - /free/get/50_with_headers.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:19:53.747Z" name="REST test with headers" time="0">
      <skipped>{
  "features": [
    "headers",
    "yaml"
  ],
  "version": " - 6.99.99",
  "reason": "types are required in requests before 7.0.0"
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:19:53.887Z" name="free/get - /free/get/51_with_headers_with_types.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:19:53.887Z" name="REST test with headers" time="0">
      <skipped>{
  "features": [
    "headers",
    "yaml"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:19:54.027Z" name="free/get - /free/get/60_realtime_refresh.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:54.027Z" name="Realtime Refresh" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:54.374Z" name="free/get - /free/get/61_realtime_refresh_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:54.374Z" name="Realtime Refresh" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:54.600Z" name="free/get - /free/get/70_source_filtering.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:54.600Z" name="Source filtering" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:54.948Z" name="free/get - /free/get/71_source_filtering_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:54.948Z" name="Source filtering" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:55.280Z" name="free/get - /free/get/80_missing.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:55.280Z" name="Missing document with catch" time="0"/>
    <testcase id="2021-05-31T10:19:55.415Z" name="Missing document with ignore" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:55.557Z" name="free/get - /free/get/81_missing_with_types.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:55.557Z" name="Missing document with catch" time="0"/>
    <testcase id="2021-05-31T10:19:55.708Z" name="Missing document with ignore" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:55.851Z" name="free/get - /free/get/90_versions.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:55.851Z" name="Versions" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:56.197Z" name="free/get - /free/get/91_versions_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:56.197Z" name="Versions" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:56.523Z" name="free/get_source - /free/get_source/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:56.523Z" name="Basic" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:56.820Z" name="free/get_source - /free/get_source/11_basic_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:56.820Z" name="Basic with types" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:57.212Z" name="free/get_source - /free/get_source/15_default_values.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:57.212Z" name="Default values" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:57.553Z" name="free/get_source - /free/get_source/16_default_values_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:57.553Z" name="Default values" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:57.864Z" name="free/get_source - /free/get_source/40_routing.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:57.864Z" name="Routing" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:58.297Z" name="free/get_source - /free/get_source/41_routing_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:58.297Z" name="Routing" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:58.728Z" name="free/get_source - /free/get_source/60_realtime_refresh.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:58.728Z" name="Realtime" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:59.103Z" name="free/get_source - /free/get_source/61_realtime_refresh_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:59.103Z" name="Realtime" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:59.448Z" name="free/get_source - /free/get_source/70_source_filtering.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:59.448Z" name="Source filtering" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:19:59.774Z" name="free/get_source - /free/get_source/71_source_filtering_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:19:59.774Z" name="Source filtering" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:00.083Z" name="free/get_source - /free/get_source/80_missing.yml" time="0" tests="2" failures="0" skipped="2">
    <testcase id="2021-05-31T10:20:00.083Z" name="Missing document with catch" time="0">
      <skipped>{
  "features": [
    "warnings"
  ],
  "version": " - 6.99.99",
  "reason": "types are required in requests before 7.0.0"
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:00.212Z" name="Missing document with ignore" time="0">
      <skipped>{
  "features": [
    "warnings"
  ],
  "version": " - 6.99.99",
  "reason": "types are required in requests before 7.0.0"
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:20:00.338Z" name="free/get_source - /free/get_source/81_missing_with_types.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:00.338Z" name="Missing document with catch" time="0"/>
    <testcase id="2021-05-31T10:20:00.477Z" name="Missing document with ignore" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:00.613Z" name="free/get_source - /free/get_source/85_source_missing.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:00.613Z" name="Missing document source with catch" time="0"/>
    <testcase id="2021-05-31T10:20:00.934Z" name="Missing document source with ignore" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:01.241Z" name="free/get_source - /free/get_source/86_source_missing_with_types.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:01.241Z" name="Missing document source with catch" time="0"/>
    <testcase id="2021-05-31T10:20:01.537Z" name="Missing document source with ignore" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:01.898Z" name="free/index - /free/index/10_with_id.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:01.898Z" name="Index with ID" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:02.236Z" name="free/index - /free/index/11_with_id_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:02.236Z" name="Index with ID" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:02.548Z" name="free/index - /free/index/12_result.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:02.548Z" name="Index result field" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:02.847Z" name="free/index - /free/index/13_result_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:02.847Z" name="Index result field" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:03.152Z" name="free/index - /free/index/15_without_id.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:03.152Z" name="Index without ID" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:03.456Z" name="free/index - /free/index/16_without_id_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:03.456Z" name="Index without ID" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:03.763Z" name="free/index - /free/index/20_optype.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:03.763Z" name="Optype" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:04.061Z" name="free/index - /free/index/21_optype_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:04.061Z" name="Optype" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:04.346Z" name="free/index - /free/index/30_cas.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:04.346Z" name="Compare And Swap Sequence Numbers" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:04.649Z" name="free/index - /free/index/35_external_version.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:04.649Z" name="External version" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:04.981Z" name="free/index - /free/index/36_external_gte_version.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:04.981Z" name="External GTE version" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:05.281Z" name="free/index - /free/index/37_external_version_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:05.281Z" name="External version" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:05.661Z" name="free/index - /free/index/38_external_gte_version_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:05.661Z" name="External GTE version" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:05.965Z" name="free/index - /free/index/40_routing.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:05.965Z" name="Routing" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:06.367Z" name="free/index - /free/index/41_routing_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:06.367Z" name="Routing" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:06.763Z" name="free/index - /free/index/60_refresh.yml" time="2" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:06.763Z" name="Refresh" time="0"/>
    <testcase id="2021-05-31T10:20:07.110Z" name="When refresh url parameter is an empty string that means &quot;refresh immediately&quot;" time="0"/>
    <testcase id="2021-05-31T10:20:07.408Z" name="refresh=wait_for waits until changes are visible in search" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:08.620Z" name="free/index - /free/index/61_refresh_with_types.yml" time="2" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:08.620Z" name="Refresh" time="0"/>
    <testcase id="2021-05-31T10:20:08.948Z" name="When refresh url parameter is an empty string that means &quot;refresh immediately&quot;" time="0"/>
    <testcase id="2021-05-31T10:20:09.239Z" name="refresh=wait_for waits until changes are visible in search" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:10.448Z" name="free/index - /free/index/70_mix_typeless_typeful.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:10.448Z" name="Index with typeless API on an index that has types" time="0"/>
    <testcase id="2021-05-31T10:20:10.722Z" name="Index call that introduces new field mappings" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:11.026Z" name="free/index - /free/index/70_require_alias.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:11.026Z" name="Set require_alias flag" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:11.334Z" name="free/index - /free/index/80_date_nanos.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:11.334Z" name="date_nanos requires dates after 1970 and before 2262" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:11.644Z" name="free/indices.analyze - /free/indices.analyze/10_analyze.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:11.644Z" name="Basic test" time="0"/>
    <testcase id="2021-05-31T10:20:11.786Z" name="Index and field" time="0"/>
    <testcase id="2021-05-31T10:20:12.038Z" name="Array text" time="0"/>
    <testcase id="2021-05-31T10:20:12.183Z" name="Detail response with Analyzer" time="0"/>
    <testcase id="2021-05-31T10:20:12.323Z" name="Custom filter in request" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:12.463Z" name="free/indices.analyze - /free/indices.analyze/20_analyze_limit.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:12.463Z" name="_analyze with No. generated tokens less than or equal to index.analyze.max_token_count should succeed" time="0"/>
    <testcase id="2021-05-31T10:20:12.710Z" name="_analyze with No. generated tokens more than index.analyze.max_token_count should fail" time="0"/>
    <testcase id="2021-05-31T10:20:12.987Z" name="_analyze with explain with No. generated tokens more than index.analyze.max_token_count should fail" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:13.256Z" name="free/indices.blocks - /free/indices.blocks/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:13.256Z" name="Basic test for index blocks" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:13.635Z" name="free/indices.clear_cache - /free/indices.clear_cache/10_basic.yml" time="0" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:13.635Z" name="clear_cache test" time="0"/>
    <testcase id="2021-05-31T10:20:13.770Z" name="clear_cache with request set to false" time="0"/>
    <testcase id="2021-05-31T10:20:13.909Z" name="clear_cache with fielddata set to true" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:14.042Z" name="free/indices.clone - /free/indices.clone/10_basic.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:14.043Z" name="Clone index via API" time="1"/>
    <testcase id="2021-05-31T10:20:14.615Z" name="Create illegal clone indices" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:14.954Z" name="free/indices.clone - /free/indices.clone/20_source_mapping.yml" time="1" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:14.954Z" name="Clone index ignores target template mapping" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:15.499Z" name="free/indices.clone - /free/indices.clone/30_copy_settings.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:15.499Z" name="Copy settings during clone index" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:15.943Z" name="free/indices.create - /free/indices.create/10_basic.yml" time="2" tests="10" failures="0" skipped="1">
    <testcase id="2021-05-31T10:20:15.943Z" name="Create index with mappings" time="0"/>
    <testcase id="2021-05-31T10:20:16.203Z" name="Create index with settings" time="0"/>
    <testcase id="2021-05-31T10:20:16.480Z" name="Create index" time="0"/>
    <testcase id="2021-05-31T10:20:16.718Z" name="Create index with wait_for_active_shards set to all" time="0"/>
    <testcase id="2021-05-31T10:20:17.002Z" name="Create index with aliases" time="0"/>
    <testcase id="2021-05-31T10:20:17.277Z" name="Create index with write aliases" time="0"/>
    <testcase id="2021-05-31T10:20:17.520Z" name="Create index with invalid mappings" time="0"/>
    <testcase id="2021-05-31T10:20:17.668Z" name="Create index with explicit _doc type" time="0"/>
    <testcase id="2021-05-31T10:20:17.796Z" name="Create index without soft deletes" time="0">
      <skipped>{
  "version": " - 7.5.99",
  "reason": "indices without soft deletes are deprecated in 7.6",
  "features": [
    "warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:17.925Z" name="Create with alias containing date math" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:18.175Z" name="free/indices.create - /free/indices.create/11_basic_with_types.yml" time="2" tests="8" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:18.175Z" name="Create index with mappings" time="0"/>
    <testcase id="2021-05-31T10:20:18.465Z" name="Create index with settings" time="0"/>
    <testcase id="2021-05-31T10:20:18.719Z" name="Create index" time="0"/>
    <testcase id="2021-05-31T10:20:18.960Z" name="Create index with wait_for_active_shards set to all" time="0"/>
    <testcase id="2021-05-31T10:20:19.231Z" name="Create index with aliases" time="0"/>
    <testcase id="2021-05-31T10:20:19.470Z" name="Create index with write aliases" time="0"/>
    <testcase id="2021-05-31T10:20:19.716Z" name="Create index with no type mappings" time="0"/>
    <testcase id="2021-05-31T10:20:19.868Z" name="Create index with invalid mappings" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:20.033Z" name="free/indices.create - /free/indices.create/20_mix_typeless_typeful.yml" time="1" tests="4" failures="0" skipped="3">
    <testcase id="2021-05-31T10:20:20.033Z" name="Create a typeless index while there is a typed template" time="0">
      <skipped>{
  "version": " - 6.6.99",
  "reason": "Merging typeless/typed mappings/templates was added in 6.7",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:20.163Z" name="Create a typed index while there is a typeless template" time="0">
      <skipped>{
  "version": " - 6.6.99",
  "reason": "Merging typeless/typed mappings/templates was added in 6.7",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:20.284Z" name="Implicitly create a typed index while there is a typeless template" time="0"/>
    <testcase id="2021-05-31T10:20:20.625Z" name="Implicitly create a typeless index while there is a typed template" time="0">
      <skipped>{
  "version": " - 6.99.99",
  "reason": "needs typeless index operations to work on typed indices",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:20:20.760Z" name="free/indices.delete - /free/indices.delete/10_basic.yml" time="3" tests="8" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:20.760Z" name="Delete index against alias" time="0"/>
    <testcase id="2021-05-31T10:20:21.108Z" name="Delete index against alias - ignore unavailable" time="0"/>
    <testcase id="2021-05-31T10:20:21.431Z" name="Delete index against alias -  multiple indices" time="0"/>
    <testcase id="2021-05-31T10:20:21.774Z" name="Delete index against alias -  ignore unavailable - multiple indices" time="0"/>
    <testcase id="2021-05-31T10:20:22.149Z" name="Delete index against wildcard matching alias" time="0"/>
    <testcase id="2021-05-31T10:20:22.473Z" name="Delete index against wildcard matching alias - disallow no indices" time="0"/>
    <testcase id="2021-05-31T10:20:22.810Z" name="Delete index against wildcard matching alias - multiple indices" time="0"/>
    <testcase id="2021-05-31T10:20:23.188Z" name="Delete index against wildcard matching alias - disallow no indices - multiple indices" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:23.545Z" name="free/indices.delete - /free/indices.delete/20_destructive_wildcard.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:23.545Z" name="Delete nonexistent concrete index with wildcard expansion disallowed" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:23.730Z" name="free/indices.delete_alias - /free/indices.delete_alias/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:23.730Z" name="Basic test for delete alias" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:24.028Z" name="free/indices.delete_alias - /free/indices.delete_alias/all_path_options.yml" time="5" tests="10" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:24.028Z" name="check setup" time="0"/>
    <testcase id="2021-05-31T10:20:24.501Z" name="check delete with _all index" time="0"/>
    <testcase id="2021-05-31T10:20:24.971Z" name="check delete with * index" time="0"/>
    <testcase id="2021-05-31T10:20:25.432Z" name="check delete with index list" time="0"/>
    <testcase id="2021-05-31T10:20:25.904Z" name="check delete with prefix* index" time="1"/>
    <testcase id="2021-05-31T10:20:26.422Z" name="check delete with index list and * aliases" time="1"/>
    <testcase id="2021-05-31T10:20:26.922Z" name="check delete with index list and _all aliases" time="0"/>
    <testcase id="2021-05-31T10:20:27.401Z" name="check delete with index list and wildcard aliases" time="0"/>
    <testcase id="2021-05-31T10:20:27.888Z" name="check 404 on no matching alias" time="0"/>
    <testcase id="2021-05-31T10:20:28.360Z" name="check delete with blank index and blank alias" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:28.810Z" name="free/indices.exists - /free/indices.exists/10_basic.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:28.810Z" name="Test indices.exists" time="0"/>
    <testcase id="2021-05-31T10:20:29.256Z" name="Test indices.exists with local flag" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:29.398Z" name="free/indices.exists - /free/indices.exists/20_read_only_index.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:29.398Z" name="Test indices.exists on a read only index" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:29.753Z" name="free/indices.exists_alias - /free/indices.exists_alias/10_basic.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:29.753Z" name="Test indices.exists_alias" time="0"/>
    <testcase id="2021-05-31T10:20:30.071Z" name="Test indices.exists_alias with local flag" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:30.210Z" name="free/indices.exists_template - /free/indices.exists_template/10_basic.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:30.210Z" name="Test indices.exists_template" time="0"/>
    <testcase id="2021-05-31T10:20:30.462Z" name="Test indices.exists_template with local flag" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:30.612Z" name="free/indices.flush - /free/indices.flush/10_basic.yml" time="1" tests="3" failures="0" skipped="1">
    <testcase id="2021-05-31T10:20:30.612Z" name="Index synced flush rest test" time="0">
      <skipped>{
  "version": " - 7.5.99",
  "reason": "synced flush is deprecated in 7.6",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:30.745Z" name="Flush stats" time="0"/>
    <testcase id="2021-05-31T10:20:31.067Z" name="Flush parameters validation" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:31.322Z" name="free/indices.forcemerge - /free/indices.forcemerge/10_basic.yml" time="0" tests="2" failures="0" skipped="1">
    <testcase id="2021-05-31T10:20:31.322Z" name="Force merge index tests" time="0"/>
    <testcase id="2021-05-31T10:20:31.585Z" name="Check deprecation warning when incompatible only_expunge_deletes and max_num_segments values are both set" time="0">
      <skipped>{
  "version": " - 7.3.99",
  "reason": "deprecation warning about only_expunge_deletes and max_num_segments added in 7.4",
  "features": [
    "warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:20:31.720Z" name="free/indices.get - /free/indices.get/10_basic.yml" time="0" tests="12" failures="0" skipped="12">
    <testcase id="2021-05-31T10:20:31.720Z" name="Get index infos" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:31.720Z" name="Get index infos should work for wildcards" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:31.720Z" name="Get index infos with human settings should return index creation date and version in readable format" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:31.720Z" name="Get index infos by default shouldn't return index creation date and version in readable format" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:31.720Z" name="Missing index should throw an Error" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:31.720Z" name="Missing index should return empty object if ignore_unavailable" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:31.720Z" name="Should return empty object if allow_no_indices" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:31.721Z" name="Should throw error if allow_no_indices=false" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:31.721Z" name="Should return test_index_2 if expand_wildcards=open" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:31.721Z" name="Should return test_index_3 if expand_wildcards=closed" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:31.721Z" name="Should return test_index_2 and test_index_3 if expand_wildcards=open,closed" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:31.721Z" name="Should return an exception when querying invalid indices" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:20:31.722Z" name="free/indices.get - /free/indices.get/11_basic_with_types.yml" time="0" tests="2" failures="0" skipped="2">
    <testcase id="2021-05-31T10:20:31.722Z" name="Test include_type_name" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:31.722Z" name="Test include_type_name dafaults to false" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:20:31.726Z" name="free/indices.get_alias - /free/indices.get_alias/10_basic.yml" time="8" tests="23" failures="0" skipped="1">
    <testcase id="2021-05-31T10:20:31.726Z" name="Get all aliases via /_alias" time="1"/>
    <testcase id="2021-05-31T10:20:32.235Z" name="Get aliases via /_alias/_all" time="0"/>
    <testcase id="2021-05-31T10:20:32.668Z" name="Get aliases via /_alias/*" time="0"/>
    <testcase id="2021-05-31T10:20:33.073Z" name="Get all aliases via /{index}/_alias/" time="0"/>
    <testcase id="2021-05-31T10:20:33.417Z" name="Get aliases via /_all/_alias/" time="0"/>
    <testcase id="2021-05-31T10:20:33.862Z" name="Get aliases via /*/_alias/" time="0"/>
    <testcase id="2021-05-31T10:20:34.254Z" name="Get and index with no aliases via /{index}/_alias/" time="0"/>
    <testcase id="2021-05-31T10:20:34.656Z" name="Get specific alias via /{index}/_alias/{name}" time="0"/>
    <testcase id="2021-05-31T10:20:34.972Z" name="Get aliases via /{index}/_alias/_all" time="0"/>
    <testcase id="2021-05-31T10:20:35.302Z" name="Get aliases via /{index}/_alias/*" time="0"/>
    <testcase id="2021-05-31T10:20:35.630Z" name="Get aliases via /{index}/_alias/prefix*" time="0"/>
    <testcase id="2021-05-31T10:20:35.977Z" name="Get aliases via /{index}/_alias/name,name" time="0"/>
    <testcase id="2021-05-31T10:20:36.305Z" name="Get aliases via /_alias/{name}" time="0"/>
    <testcase id="2021-05-31T10:20:36.621Z" name="Get aliases via /_all/_alias/{name}" time="0"/>
    <testcase id="2021-05-31T10:20:36.969Z" name="Get aliases via /*/_alias/{name}" time="0"/>
    <testcase id="2021-05-31T10:20:37.269Z" name="Get aliases via /*suf/_alias/{name}" time="0"/>
    <testcase id="2021-05-31T10:20:37.592Z" name="Get aliases via /name,name/_alias/{name}" time="0"/>
    <testcase id="2021-05-31T10:20:37.923Z" name="Non-existent alias on an existing index returns 404" time="0"/>
    <testcase id="2021-05-31T10:20:38.223Z" name="Existent and non-existent alias returns 404 and the existing alias" time="0"/>
    <testcase id="2021-05-31T10:20:38.534Z" name="Existent and non-existent aliases returns 404 and the existing alias" time="0"/>
    <testcase id="2021-05-31T10:20:38.872Z" name="Getting alias on an non-existent index should return 404" time="0"/>
    <testcase id="2021-05-31T10:20:39.193Z" name="Get alias with local flag" time="0"/>
    <testcase id="2021-05-31T10:20:39.514Z" name="Get alias against closed indices" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:20:39.856Z" name="free/indices.get_alias - /free/indices.get_alias/20_empty.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:39.856Z" name="Check empty aliases when getting all aliases via /_alias" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:40.169Z" name="free/indices.get_alias - /free/indices.get_alias/30_wildcards.yml" time="2" tests="7" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:40.169Z" name="Get aliases wildcard and inclusion" time="0"/>
    <testcase id="2021-05-31T10:20:40.430Z" name="Get aliases wildcard and simple exclusion" time="0"/>
    <testcase id="2021-05-31T10:20:40.679Z" name="Get aliases and wildcard exclusion" time="0"/>
    <testcase id="2021-05-31T10:20:40.938Z" name="Non-existent exclusion alias before wildcard returns 404" time="0"/>
    <testcase id="2021-05-31T10:20:41.186Z" name="Missing exclusions does not fire 404" time="0"/>
    <testcase id="2021-05-31T10:20:41.426Z" name="Exclusion of non wildcarded aliases" time="0"/>
    <testcase id="2021-05-31T10:20:41.686Z" name="Wildcard exclusions does not trigger 404" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:41.930Z" name="free/indices.get_field_mapping - /free/indices.get_field_mapping/10_basic.yml" time="1" tests="5" failures="0" skipped="1">
    <testcase id="2021-05-31T10:20:41.930Z" name="Get field mapping with no index" time="0"/>
    <testcase id="2021-05-31T10:20:42.216Z" name="Get field mapping by index only" time="0"/>
    <testcase id="2021-05-31T10:20:42.471Z" name="Get field mapping by field, with another field that doesn't exist" time="0"/>
    <testcase id="2021-05-31T10:20:42.714Z" name="Get field mapping with include_defaults" time="0"/>
    <testcase id="2021-05-31T10:20:42.958Z" name="Get field mapping with local is deprecated" time="0">
      <skipped>{
  "features": [
    "warnings",
    "node_selector"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:20:43.227Z" name="free/indices.get_field_mapping - /free/indices.get_field_mapping/11_basic_with_types.yml" time="2" tests="6" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:43.227Z" name="Get field mapping with no index and type" time="0"/>
    <testcase id="2021-05-31T10:20:43.510Z" name="Get field mapping by index only" time="0"/>
    <testcase id="2021-05-31T10:20:43.770Z" name="Get field mapping by type &amp; field" time="0"/>
    <testcase id="2021-05-31T10:20:44.020Z" name="Get field mapping by type &amp; field, with another field that doesn't exist" time="0"/>
    <testcase id="2021-05-31T10:20:44.261Z" name="Get field mapping with include_defaults" time="0"/>
    <testcase id="2021-05-31T10:20:44.513Z" name="Get field mapping should work without index specifying type and fields" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:44.765Z" name="free/indices.get_field_mapping - /free/indices.get_field_mapping/20_missing_field.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:44.765Z" name="Return empty object if field doesn't exist, but type and index do" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:45.018Z" name="free/indices.get_field_mapping - /free/indices.get_field_mapping/21_missing_field_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:45.018Z" name="Return empty object if field doesn't exist, but type and index do" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:45.266Z" name="free/indices.get_field_mapping - /free/indices.get_field_mapping/30_missing_type.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:45.266Z" name="Raise 404 when type doesn't exist" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:45.516Z" name="free/indices.get_field_mapping - /free/indices.get_field_mapping/40_missing_index.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:45.516Z" name="Raise 404 when index doesn't exist" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:45.655Z" name="free/indices.get_field_mapping - /free/indices.get_field_mapping/50_field_wildcards.yml" time="2" tests="7" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:45.655Z" name="Get field mapping with * for fields" time="0"/>
    <testcase id="2021-05-31T10:20:45.980Z" name="Get field mapping with t* for fields" time="0"/>
    <testcase id="2021-05-31T10:20:46.307Z" name="Get field mapping with *t1 for fields" time="0"/>
    <testcase id="2021-05-31T10:20:46.651Z" name="Get field mapping with wildcarded relative names" time="0"/>
    <testcase id="2021-05-31T10:20:47.002Z" name="Get field mapping should work using '_all' for index" time="0"/>
    <testcase id="2021-05-31T10:20:47.352Z" name="Get field mapping should work using '*' for index" time="0"/>
    <testcase id="2021-05-31T10:20:47.670Z" name="Get field mapping should work using comma_separated values for indices" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:48.013Z" name="free/indices.get_field_mapping - /free/indices.get_field_mapping/51_field_wildcards_with_types.yml" time="2" tests="7" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:48.013Z" name="Get field mapping with * for fields" time="0"/>
    <testcase id="2021-05-31T10:20:48.347Z" name="Get field mapping with t* for fields" time="0"/>
    <testcase id="2021-05-31T10:20:48.672Z" name="Get field mapping with *t1 for fields" time="0"/>
    <testcase id="2021-05-31T10:20:49.000Z" name="Get field mapping with wildcarded relative names" time="0"/>
    <testcase id="2021-05-31T10:20:49.332Z" name="Get field mapping should work using '_all' for indices and types" time="0"/>
    <testcase id="2021-05-31T10:20:49.673Z" name="Get field mapping should work using '*' for indices and types" time="0"/>
    <testcase id="2021-05-31T10:20:49.998Z" name="Get field mapping should work using comma_separated values for indices and types" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:50.327Z" name="free/indices.get_field_mapping - /free/indices.get_field_mapping/60_mix_typeless_typeful.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:50.327Z" name="GET mapping with typeless API on an index that has types" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:50.609Z" name="free/indices.get_index_template - /free/indices.get_index_template/10_basic.yml" time="0" tests="3" failures="0" skipped="3">
    <testcase id="2021-05-31T10:20:50.609Z" name="Get index template" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "index template v2 API unavailable before 7.8",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:50.609Z" name="Get all index templates" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "index template v2 API unavailable before 7.8",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:50.609Z" name="Get index template with local flag" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "index template v2 API unavailable before 7.8",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:20:50.610Z" name="free/indices.get_index_template - /free/indices.get_index_template/20_get_missing.yml" time="1" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:50.610Z" name="Get missing template" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:51.333Z" name="free/indices.get_mapping - /free/indices.get_mapping/10_basic.yml" time="2" tests="7" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:51.333Z" name="Get /{index}/_mapping with empty mappings" time="1"/>
    <testcase id="2021-05-31T10:20:51.854Z" name="Get /_mapping" time="0"/>
    <testcase id="2021-05-31T10:20:52.174Z" name="Get /{index}/_mapping" time="0"/>
    <testcase id="2021-05-31T10:20:52.494Z" name="Get /_all/_mapping" time="0"/>
    <testcase id="2021-05-31T10:20:52.821Z" name="Get /*/_mapping" time="0"/>
    <testcase id="2021-05-31T10:20:53.136Z" name="Get /index,index/_mapping" time="0"/>
    <testcase id="2021-05-31T10:20:53.458Z" name="Get /index*/_mapping/" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:53.780Z" name="free/indices.get_mapping - /free/indices.get_mapping/11_basic_with_types.yml" time="4" tests="12" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:53.780Z" name="Get /{index}/_mapping with empty mappings" time="0"/>
    <testcase id="2021-05-31T10:20:54.218Z" name="Get /_mapping" time="0"/>
    <testcase id="2021-05-31T10:20:54.574Z" name="Get /{index}/_mapping" time="0"/>
    <testcase id="2021-05-31T10:20:54.904Z" name="Get /{index}/_mapping/_all" time="0"/>
    <testcase id="2021-05-31T10:20:55.232Z" name="Get /{index}/_mapping/*" time="0"/>
    <testcase id="2021-05-31T10:20:55.565Z" name="Get /{index}/_mapping/{type}" time="0"/>
    <testcase id="2021-05-31T10:20:55.897Z" name="Get /{index}/_mapping/{type*}" time="0"/>
    <testcase id="2021-05-31T10:20:56.233Z" name="Get /_mapping/{type}" time="0"/>
    <testcase id="2021-05-31T10:20:56.568Z" name="Get /_all/_mapping/{type}" time="0"/>
    <testcase id="2021-05-31T10:20:56.921Z" name="Get /*/_mapping/{type}" time="0"/>
    <testcase id="2021-05-31T10:20:57.248Z" name="Get /index,index/_mapping/{type}" time="0"/>
    <testcase id="2021-05-31T10:20:57.635Z" name="Get /index*/_mapping/{type}" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:57.968Z" name="free/indices.get_mapping - /free/indices.get_mapping/20_missing_type.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:57.968Z" name="Non-existent type returns 404" time="0"/>
    <testcase id="2021-05-31T10:20:58.221Z" name="No type matching pattern returns 404" time="0"/>
    <testcase id="2021-05-31T10:20:58.496Z" name="Existent and non-existent type returns 404 and the existing type" time="0"/>
    <testcase id="2021-05-31T10:20:58.745Z" name="Existent and non-existent types returns 404 and the existing type" time="0"/>
    <testcase id="2021-05-31T10:20:59.010Z" name="Type missing when no types exist" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:59.141Z" name="free/indices.get_mapping - /free/indices.get_mapping/30_missing_index.yml" time="1" tests="4" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:59.141Z" name="Raise 404 when index doesn't exist" time="0"/>
    <testcase id="2021-05-31T10:20:59.268Z" name="Index missing, no indexes" time="0"/>
    <testcase id="2021-05-31T10:20:59.393Z" name="Index missing, ignore_unavailable=true" time="0"/>
    <testcase id="2021-05-31T10:20:59.521Z" name="Index missing, ignore_unavailable=true, allow_no_indices=false" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:59.657Z" name="free/indices.get_mapping - /free/indices.get_mapping/40_aliases.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:59.657Z" name="Getting mapping for aliases should return the real index as key" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:20:59.924Z" name="free/indices.get_mapping - /free/indices.get_mapping/50_wildcard_expansion.yml" time="0" tests="7" failures="0" skipped="7">
    <testcase id="2021-05-31T10:20:59.924Z" name="Get test-* with defaults" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:59.924Z" name="Get test-* with wildcard_expansion=all" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:59.924Z" name="Get test-* with wildcard_expansion=open" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:59.924Z" name="Get test-* with wildcard_expansion=closed" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:59.924Z" name="Get test-* with wildcard_expansion=none" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:59.924Z" name="Get test-* with wildcard_expansion=none allow_no_indices=false" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:20:59.924Z" name="Get test-* with wildcard_expansion=open,closed" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:20:59.924Z" name="free/indices.get_mapping - /free/indices.get_mapping/60_empty.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:20:59.924Z" name="Check empty mapping when getting all mappings via /_mapping" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:00.243Z" name="free/indices.get_mapping - /free/indices.get_mapping/61_empty_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:00.243Z" name="Check empty mapping when getting all mappings via /_mapping" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:00.553Z" name="free/indices.get_mapping - /free/indices.get_mapping/70_mix_typeless_typeful.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:00.553Z" name="GET mapping with typeless API on an index that has types" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:00.797Z" name="free/indices.get_settings - /free/indices.get_settings/10_basic.yml" time="6" tests="13" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:00.797Z" name="Get /_settings" time="0"/>
    <testcase id="2021-05-31T10:21:01.210Z" name="Get /{index}/_settings" time="0"/>
    <testcase id="2021-05-31T10:21:01.609Z" name="Get /{index}/_settings/_all" time="0"/>
    <testcase id="2021-05-31T10:21:02.051Z" name="Get /{index}/_settings/*" time="0"/>
    <testcase id="2021-05-31T10:21:02.462Z" name="Get /{index}/_settings/{name}" time="0"/>
    <testcase id="2021-05-31T10:21:02.921Z" name="Get /{index}/_settings/{name,name}" time="0"/>
    <testcase id="2021-05-31T10:21:03.334Z" name="Get /{index}/_settings/{name*}" time="0"/>
    <testcase id="2021-05-31T10:21:03.759Z" name="Get /_settings/{name}" time="0"/>
    <testcase id="2021-05-31T10:21:04.196Z" name="Get /_all/_settings/{name}" time="0"/>
    <testcase id="2021-05-31T10:21:04.624Z" name="Get /*/_settings/{name}" time="0"/>
    <testcase id="2021-05-31T10:21:05.078Z" name="Get /index,index/_settings/{name}" time="0"/>
    <testcase id="2021-05-31T10:21:05.516Z" name="Get /index*/_settings/{name}" time="0"/>
    <testcase id="2021-05-31T10:21:05.942Z" name="Get /_settings with local flag" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:06.358Z" name="free/indices.get_settings - /free/indices.get_settings/20_aliases.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:06.358Z" name="Getting settings for aliases should return the real index as key" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:06.623Z" name="free/indices.get_settings - /free/indices.get_settings/30_defaults.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:06.623Z" name="Test retrieval of default settings" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:06.870Z" name="free/indices.get_template - /free/indices.get_template/10_basic.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:06.870Z" name="Get template" time="0"/>
    <testcase id="2021-05-31T10:21:07.086Z" name="Get template with no mappings" time="0"/>
    <testcase id="2021-05-31T10:21:07.370Z" name="Get all templates" time="0"/>
    <testcase id="2021-05-31T10:21:07.651Z" name="Get template with local flag" time="0"/>
    <testcase id="2021-05-31T10:21:07.862Z" name="Get template with flat settings and master timeout" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:08.075Z" name="free/indices.get_template - /free/indices.get_template/11_basic_with_types.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:08.075Z" name="Get template" time="0"/>
    <testcase id="2021-05-31T10:21:08.309Z" name="Get template with no mappings" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:08.630Z" name="free/indices.get_template - /free/indices.get_template/20_get_missing.yml" time="1" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:08.630Z" name="Get missing template" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:09.521Z" name="free/indices.open - /free/indices.open/10_basic.yml" time="1" tests="6" failures="0" skipped="5">
    <testcase id="2021-05-31T10:21:09.521Z" name="Basic test for index open/close" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:21:09.659Z" name="Open index with wait_for_active_shards set to all" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:21:09.785Z" name="Close index with wait_for_active_shards set to all" time="0"/>
    <testcase id="2021-05-31T10:21:10.228Z" name="Close index response with result per index" time="0">
      <skipped>{
  "version": " - 7.2.99",
  "reason": "close index response reports result per index starting version 7.3.0",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:21:10.355Z" name="?wait_for_active_shards=index-setting" time="0">
      <skipped>{
  "version": " - 7.11.99",
  "reason": "?wait_for_active_shards=index-setting support added in 7.12",
  "features": [
    "node_selector"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:21:10.479Z" name="?wait_for_active_shards default is deprecated" time="0">
      <skipped>{
  "version": " - 7.11.99",
  "reason": "required deprecation warning is only emitted in 7.12 and later",
  "features": [
    "warnings",
    "node_selector"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:21:10.609Z" name="free/indices.open - /free/indices.open/20_multiple_indices.yml" time="1" tests="3" failures="0" skipped="3">
    <testcase id="2021-05-31T10:21:10.609Z" name="All indices" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:21:11.069Z" name="Trailing wildcard" time="1">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:21:11.589Z" name="Only wildcard" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:21:12.069Z" name="free/indices.put_alias - /free/indices.put_alias/10_basic.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:12.069Z" name="Basic test for put alias" time="0"/>
    <testcase id="2021-05-31T10:21:12.346Z" name="Can't create alias with invalid characters" time="0"/>
    <testcase id="2021-05-31T10:21:12.587Z" name="Can't create alias with the same name as an index" time="0"/>
    <testcase id="2021-05-31T10:21:12.900Z" name="Can set is_write_index" time="0"/>
    <testcase id="2021-05-31T10:21:13.168Z" name="Can create filtered alias with a date_nanos range query" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:13.448Z" name="free/indices.put_alias - /free/indices.put_alias/all_path_options.yml" time="3" tests="7" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:13.448Z" name="put alias per index" time="0"/>
    <testcase id="2021-05-31T10:21:13.904Z" name="put alias in _all index" time="0"/>
    <testcase id="2021-05-31T10:21:14.329Z" name="put alias in * index" time="0"/>
    <testcase id="2021-05-31T10:21:14.758Z" name="put alias prefix* index" time="0"/>
    <testcase id="2021-05-31T10:21:15.210Z" name="put alias in list of indices" time="0"/>
    <testcase id="2021-05-31T10:21:15.672Z" name="put alias with blank index" time="0"/>
    <testcase id="2021-05-31T10:21:16.097Z" name="put alias with missing name" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:16.525Z" name="free/indices.put_index_template - /free/indices.put_index_template/10_basic.yml" time="1" tests="5" failures="0" skipped="4">
    <testcase id="2021-05-31T10:21:16.525Z" name="Put index template" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "index template v2 API unavailable before 7.8",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:21:16.659Z" name="Put multiple index templates" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "index template v2 API unavailable before 7.8",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:21:16.786Z" name="Put index template with 'create' flag" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "index template v2 API unavailable before 7.8",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:21:16.920Z" name="Put index template without index_patterns" time="0"/>
    <testcase id="2021-05-31T10:21:17.062Z" name="Delete multiple templates" time="0">
      <skipped>{
  "version": " - 7.99.99",
  "reason": "not yet backported",
  "features": "allowed_warnings"
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:21:17.191Z" name="free/indices.put_index_template - /free/indices.put_index_template/15_composition.yml" time="1" tests="5" failures="0" skipped="5">
    <testcase id="2021-05-31T10:21:17.191Z" name="Component and index template composition" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "index template v2 API unavailable before 7.8",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:21:17.338Z" name="Index template priority" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "index template v2 API unavailable before 7.8",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:21:17.466Z" name="Component template only composition" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "index template v2 API unavailable before 7.8",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:21:17.597Z" name="Index template without component templates" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "index template v2 API unavailable before 7.8",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:21:17.724Z" name="Index template mapping merging" time="0">
      <skipped>{
  "version": " - 7.8.99",
  "reason": "index template v2 mapping merging not available before 7.9",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:21:17.860Z" name="free/indices.put_mapping - /free/indices.put_mapping/10_basic.yml" time="1" tests="4" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:17.860Z" name="Test Create and update mapping" time="0"/>
    <testcase id="2021-05-31T10:21:18.197Z" name="Create index with invalid mappings" time="0"/>
    <testcase id="2021-05-31T10:21:18.463Z" name="Put mappings with explicit _doc type" time="0"/>
    <testcase id="2021-05-31T10:21:18.716Z" name="Update per-field metadata" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:19.024Z" name="free/indices.put_mapping - /free/indices.put_mapping/11_basic_with_types.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:19.024Z" name="Test Create and update mapping" time="0"/>
    <testcase id="2021-05-31T10:21:19.365Z" name="Create index with invalid mappings" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:19.621Z" name="free/indices.put_mapping - /free/indices.put_mapping/20_mix_typeless_typeful.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:19.621Z" name="PUT mapping with typeless API on an index that has types" time="0"/>
    <testcase id="2021-05-31T10:21:19.940Z" name="PUT mapping with _doc on an index that has types" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:20.200Z" name="free/indices.put_mapping - /free/indices.put_mapping/all_path_options.yml" time="3" tests="6" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:20.200Z" name="put one mapping per index" time="0"/>
    <testcase id="2021-05-31T10:21:20.695Z" name="put mapping in _all index" time="0"/>
    <testcase id="2021-05-31T10:21:21.144Z" name="put mapping in * index" time="0"/>
    <testcase id="2021-05-31T10:21:21.576Z" name="put mapping in prefix* index" time="0"/>
    <testcase id="2021-05-31T10:21:22.062Z" name="put mapping in list of indices" time="0"/>
    <testcase id="2021-05-31T10:21:22.548Z" name="post a mapping with default analyzer twice" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:22.998Z" name="free/indices.put_mapping - /free/indices.put_mapping/all_path_options_with_types.yml" time="5" tests="8" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:22.998Z" name="put one mapping per index" time="1"/>
    <testcase id="2021-05-31T10:21:23.504Z" name="put mapping in _all index" time="1"/>
    <testcase id="2021-05-31T10:21:24.017Z" name="put mapping in * index" time="1"/>
    <testcase id="2021-05-31T10:21:25.030Z" name="put mapping in prefix* index" time="1"/>
    <testcase id="2021-05-31T10:21:26.196Z" name="put mapping in list of indices" time="1"/>
    <testcase id="2021-05-31T10:21:26.787Z" name="put mapping with blank index" time="0"/>
    <testcase id="2021-05-31T10:21:27.264Z" name="put mapping with missing type" time="0"/>
    <testcase id="2021-05-31T10:21:27.692Z" name="post a mapping with default analyzer twice" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:28.166Z" name="free/indices.put_settings - /free/indices.put_settings/10_basic.yml" time="1" tests="4" failures="0" skipped="1">
    <testcase id="2021-05-31T10:21:28.166Z" name="Test indices settings" time="0"/>
    <testcase id="2021-05-31T10:21:28.483Z" name="Test indices settings ignore_unavailable" time="0"/>
    <testcase id="2021-05-31T10:21:28.798Z" name="Test indices settings allow_no_indices" time="0"/>
    <testcase id="2021-05-31T10:21:29.079Z" name="Test preserve_existing settings" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:21:29.355Z" name="free/indices.put_settings - /free/indices.put_settings/11_reset.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:29.355Z" name="Test reset index settings" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:29.687Z" name="free/indices.put_settings - /free/indices.put_settings/all_path_options.yml" time="3" tests="6" failures="0" skipped="1">
    <testcase id="2021-05-31T10:21:29.687Z" name="put settings per index" time="0"/>
    <testcase id="2021-05-31T10:21:30.176Z" name="put settings in _all index" time="0"/>
    <testcase id="2021-05-31T10:21:30.600Z" name="put settings in * index" time="0"/>
    <testcase id="2021-05-31T10:21:31.059Z" name="put settings in prefix* index" time="0"/>
    <testcase id="2021-05-31T10:21:31.506Z" name="put settings in list of indices" time="0">
      <skipped>{
  "version": "all",
  "reason": "list of indices not implemented yet"
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:21:31.980Z" name="put settings in blank index" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:32.408Z" name="free/indices.put_template - /free/indices.put_template/10_basic.yml" time="2" tests="8" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:32.408Z" name="Put template" time="0"/>
    <testcase id="2021-05-31T10:21:32.642Z" name="Put multiple template" time="0"/>
    <testcase id="2021-05-31T10:21:32.866Z" name="Put template with empty mappings" time="0"/>
    <testcase id="2021-05-31T10:21:33.090Z" name="Put template with aliases" time="0"/>
    <testcase id="2021-05-31T10:21:33.321Z" name="Put template create" time="0"/>
    <testcase id="2021-05-31T10:21:33.552Z" name="Test Put Versioned Template" time="0"/>
    <testcase id="2021-05-31T10:21:33.959Z" name="Put index template without index_patterns" time="0"/>
    <testcase id="2021-05-31T10:21:34.083Z" name="Put template with explicit _doc type" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:34.219Z" name="free/indices.put_template - /free/indices.put_template/11_basic_with_types.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:34.219Z" name="Put template" time="0"/>
    <testcase id="2021-05-31T10:21:34.448Z" name="Put multiple template" time="0"/>
    <testcase id="2021-05-31T10:21:34.664Z" name="Put template with empty mappings" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:34.884Z" name="free/indices.recovery - /free/indices.recovery/10_basic.yml" time="1" tests="5" failures="0" skipped="1">
    <testcase id="2021-05-31T10:21:34.884Z" name="Indices recovery test" time="0"/>
    <testcase id="2021-05-31T10:21:35.079Z" name="Indices recovery test for closed index" time="0">
      <skipped>{
  "version": " - 7.1.99",
  "reason": "closed indices are replicated starting version 7.2.0",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:21:35.208Z" name="Indices recovery test index name not matching" time="0"/>
    <testcase id="2021-05-31T10:21:35.490Z" name="Indices recovery test, wildcard not matching any index" time="0"/>
    <testcase id="2021-05-31T10:21:35.776Z" name="Indices recovery test with detailed parameter" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:36.064Z" name="free/indices.refresh - /free/indices.refresh/10_basic.yml" time="2" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:36.064Z" name="Indices refresh test _all" time="1"/>
    <testcase id="2021-05-31T10:21:36.602Z" name="Indices refresh test empty array" time="1"/>
    <testcase id="2021-05-31T10:21:37.259Z" name="Indices refresh test no-match wildcard" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:37.837Z" name="free/indices.resolve_index - /free/indices.resolve_index/10_basic_resolve_index.yml" time="0" tests="2" failures="0" skipped="2">
    <testcase id="2021-05-31T10:21:37.837Z" name="Resolve index with indices and aliases" time="0">
      <skipped>{
  "version": " - 7.8.99",
  "reason": "resolve index introduced in 7.9",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:21:37.837Z" name="Resolve index with hidden and closed indices" time="0">
      <skipped>{
  "version": " - 7.8.99",
  "reason": "resolve index introduced in 7.9",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:21:37.840Z" name="free/indices.rollover - /free/indices.rollover/10_basic.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:37.840Z" name="Rollover index via API" time="1"/>
    <testcase id="2021-05-31T10:21:38.671Z" name="Rollover no condition matched" time="0"/>
    <testcase id="2021-05-31T10:21:38.931Z" name="Rollover with dry-run but target index exists" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:39.252Z" name="free/indices.rollover - /free/indices.rollover/20_max_doc_condition.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:39.252Z" name="Max docs rollover conditions matches only primary shards" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:39.631Z" name="free/indices.rollover - /free/indices.rollover/30_max_size_condition.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:39.631Z" name="Rollover with max_size condition" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:39.989Z" name="free/indices.rollover - /free/indices.rollover/35_max_primary_shard_size_condition.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:39.989Z" name="Rollover with max_primary_shard_size condition" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:40.370Z" name="free/indices.rollover - /free/indices.rollover/40_mapping.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:40.370Z" name="Typeless mapping" time="0"/>
    <testcase id="2021-05-31T10:21:40.758Z" name="Mappings with explicit _doc type" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:41.019Z" name="free/indices.rollover - /free/indices.rollover/41_mapping_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:41.019Z" name="Typeless mapping" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:41.436Z" name="free/indices.segments - /free/indices.segments/10_basic.yml" time="1" tests="3" failures="0" skipped="1">
    <testcase id="2021-05-31T10:21:41.436Z" name="no segments test" time="0"/>
    <testcase id="2021-05-31T10:21:41.581Z" name="basic segments test" time="0"/>
    <testcase id="2021-05-31T10:21:41.898Z" name="closed segments test" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:21:42.027Z" name="free/indices.shard_stores - /free/indices.shard_stores/10_basic.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:42.027Z" name="no indices test" time="0"/>
    <testcase id="2021-05-31T10:21:42.176Z" name="basic index test" time="0"/>
    <testcase id="2021-05-31T10:21:42.504Z" name="multiple indices test" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:42.988Z" name="free/indices.shrink - /free/indices.shrink/10_basic.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:21:42.988Z" name="Shrink index via API" time="0">
      <skipped>{
  "version": " - 6.9.99",
  "reason": "expects warnings that pre-7.0.0 will not send",
  "features": [
    "warnings",
    "arbitrary_key"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:21:43.109Z" name="free/indices.shrink - /free/indices.shrink/20_source_mapping.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:21:43.109Z" name="Shrink index ignores target template mapping" time="0">
      <skipped>{
  "version": " - 6.9.99",
  "reason": "expects warnings that pre-7.0.0 will not send",
  "features": [
    "warnings",
    "arbitrary_key"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:21:43.236Z" name="free/indices.shrink - /free/indices.shrink/30_copy_settings.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:21:43.236Z" name="Copy settings during shrink index" time="0">
      <skipped>{
  "version": " - 6.9.99",
  "reason": "expects warnings that pre-7.0.0 will not send",
  "features": [
    "warnings",
    "arbitrary_key"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:21:43.362Z" name="free/indices.simulate_index_template - /free/indices.simulate_index_template/10_basic.yml" time="0" tests="4" failures="0" skipped="4">
    <testcase id="2021-05-31T10:21:43.362Z" name="Simulate index template without new template in the body" time="0">
      <skipped>{
  "version": " - 7.8.99",
  "reason": "simulate index template API format changed in 7.9 to drop _doc",
  "features": [
    "default_shards"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:21:43.488Z" name="Simulate index template specifying a new template" time="0">
      <skipped>{
  "version": " - 7.8.99",
  "reason": "simulate index template API format changed in 7.9 to drop _doc",
  "features": [
    "default_shards"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:21:43.613Z" name="Simulate index template with index not matching any template" time="0">
      <skipped>{
  "version": " - 7.8.99",
  "reason": "simulate index template API format changed in 7.9 to drop _doc",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:21:43.739Z" name="Simulate index matches overlapping legacy and composable templates" time="0">
      <skipped>{
  "version": " - 7.8.99",
  "reason": "simulate index template API format changed in 7.9 to drop _doc",
  "features": [
    "allowed_warnings",
    "default_shards"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:21:43.864Z" name="free/indices.simulate_template - /free/indices.simulate_template/10_basic.yml" time="1" tests="4" failures="0" skipped="4">
    <testcase id="2021-05-31T10:21:43.864Z" name="Simulate template without a template in the body" time="0">
      <skipped>{
  "version": " - 7.8.99",
  "reason": "only available in 7.9+",
  "features": [
    "default_shards"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:21:43.991Z" name="Simulate index template specifying a new template" time="0">
      <skipped>{
  "version": " - 7.8.99",
  "reason": "only available in 7.9+",
  "features": [
    "default_shards"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:21:44.130Z" name="Simulate template matches overlapping legacy and composable templates" time="0">
      <skipped>{
  "version": " - 7.8.99",
  "reason": "only available in 7.9+",
  "features": [
    "allowed_warnings",
    "default_shards"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:21:44.256Z" name="Simulate replacing a template with a newer version" time="0">
      <skipped>{
  "version": " - 7.99.99",
  "reason": "not yet backported",
  "features": [
    "allowed_warnings",
    "default_shards"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:21:44.384Z" name="free/indices.sort - /free/indices.sort/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:44.384Z" name="Index Sort" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:44.815Z" name="free/indices.split - /free/indices.split/10_basic.yml" time="2" tests="3" failures="0" skipped="2">
    <testcase id="2021-05-31T10:21:44.815Z" name="Split index via API" time="0">
      <skipped>{
  "version": " - 6.9.99",
  "reason": "pre-7.0.0 will send warnings",
  "features": [
    "warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:21:45.169Z" name="Split from 1 to N" time="1"/>
    <testcase id="2021-05-31T10:21:45.957Z" name="Create illegal split indices" time="0">
      <skipped>{
  "version": " - 6.9.99",
  "reason": "pre-7.0.0 will send warnings",
  "features": [
    "warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:21:46.398Z" name="free/indices.split - /free/indices.split/20_source_mapping.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:21:46.398Z" name="Split index ignores target template mapping" time="0">
      <skipped>{
  "version": " - 6.9.99",
  "reason": "pre-7.0.0 will send warnings",
  "features": [
    "warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:21:46.529Z" name="free/indices.split - /free/indices.split/30_copy_settings.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:21:46.529Z" name="Copy settings during split index" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:21:46.529Z" name="free/indices.stats - /free/indices.stats/10_index.yml" time="4" tests="8" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:46.529Z" name="Index - blank" time="1"/>
    <testcase id="2021-05-31T10:21:47.046Z" name="Index - all" time="1"/>
    <testcase id="2021-05-31T10:21:47.572Z" name="Index - star" time="1"/>
    <testcase id="2021-05-31T10:21:48.118Z" name="Index - star, no match" time="1"/>
    <testcase id="2021-05-31T10:21:48.620Z" name="Index - one index" time="1"/>
    <testcase id="2021-05-31T10:21:49.144Z" name="Index - multi-index" time="1"/>
    <testcase id="2021-05-31T10:21:49.669Z" name="Index - pattern" time="1"/>
    <testcase id="2021-05-31T10:21:50.169Z" name="Indices stats unrecognized parameter" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:50.666Z" name="free/indices.stats - /free/indices.stats/11_metric.yml" time="4" tests="9" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:50.666Z" name="Metric - blank" time="0"/>
    <testcase id="2021-05-31T10:21:51.051Z" name="Metric - _all" time="0"/>
    <testcase id="2021-05-31T10:21:51.444Z" name="Metric - one" time="0"/>
    <testcase id="2021-05-31T10:21:51.849Z" name="Metric - multi" time="0"/>
    <testcase id="2021-05-31T10:21:52.260Z" name="Metric - recovery" time="0"/>
    <testcase id="2021-05-31T10:21:52.655Z" name="Metric - _all include_segment_file_sizes" time="0"/>
    <testcase id="2021-05-31T10:21:53.054Z" name="Metric - segments include_segment_file_sizes" time="0"/>
    <testcase id="2021-05-31T10:21:53.442Z" name="Metric - _all include_unloaded_segments" time="0"/>
    <testcase id="2021-05-31T10:21:53.837Z" name="Metric - segments include_unloaded_segments" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:54.241Z" name="free/indices.stats - /free/indices.stats/12_level.yml" time="2" tests="4" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:54.241Z" name="Level - blank" time="0"/>
    <testcase id="2021-05-31T10:21:54.627Z" name="Level - indices" time="0"/>
    <testcase id="2021-05-31T10:21:55.004Z" name="Level - cluster" time="0"/>
    <testcase id="2021-05-31T10:21:55.383Z" name="Level - shards" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:21:55.770Z" name="free/indices.stats - /free/indices.stats/13_fields.yml" time="8" tests="23" failures="0" skipped="0">
    <testcase id="2021-05-31T10:21:55.770Z" name="Fields - blank" time="0"/>
    <testcase id="2021-05-31T10:21:56.188Z" name="Fields - one" time="0"/>
    <testcase id="2021-05-31T10:21:56.526Z" name="Fields - multi" time="0"/>
    <testcase id="2021-05-31T10:21:56.856Z" name="Fields - star" time="0"/>
    <testcase id="2021-05-31T10:21:57.190Z" name="Fields - pattern" time="0"/>
    <testcase id="2021-05-31T10:21:57.511Z" name="Fields - _all metric" time="0"/>
    <testcase id="2021-05-31T10:21:57.843Z" name="Fields - fielddata metric" time="0"/>
    <testcase id="2021-05-31T10:21:58.168Z" name="Fields - completion metric" time="0"/>
    <testcase id="2021-05-31T10:21:58.488Z" name="Fields - multi metric" time="0"/>
    <testcase id="2021-05-31T10:21:58.814Z" name="Fielddata fields - one" time="0"/>
    <testcase id="2021-05-31T10:21:59.165Z" name="Fielddata fields - multi" time="0"/>
    <testcase id="2021-05-31T10:21:59.485Z" name="Fielddata fields - star" time="0"/>
    <testcase id="2021-05-31T10:21:59.840Z" name="Fielddata fields - pattern" time="0"/>
    <testcase id="2021-05-31T10:22:00.173Z" name="Fielddata fields - all metric" time="0"/>
    <testcase id="2021-05-31T10:22:00.508Z" name="Fielddata fields - one metric" time="0"/>
    <testcase id="2021-05-31T10:22:00.836Z" name="Fielddata fields - multi metric" time="0"/>
    <testcase id="2021-05-31T10:22:01.156Z" name="Completion fields - one" time="0"/>
    <testcase id="2021-05-31T10:22:01.481Z" name="Completion fields - multi" time="0"/>
    <testcase id="2021-05-31T10:22:01.830Z" name="Completion fields - star" time="0"/>
    <testcase id="2021-05-31T10:22:02.164Z" name="Completion - pattern" time="0"/>
    <testcase id="2021-05-31T10:22:02.507Z" name="Completion - all metric" time="0"/>
    <testcase id="2021-05-31T10:22:02.839Z" name="Completion - one metric" time="0"/>
    <testcase id="2021-05-31T10:22:03.171Z" name="Completion - multi metric" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:03.492Z" name="free/indices.stats - /free/indices.stats/14_groups.yml" time="2" tests="8" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:03.492Z" name="Groups - blank" time="0"/>
    <testcase id="2021-05-31T10:22:03.799Z" name="Groups - one" time="0"/>
    <testcase id="2021-05-31T10:22:04.087Z" name="Groups - multi" time="0"/>
    <testcase id="2021-05-31T10:22:04.373Z" name="Groups - star" time="0"/>
    <testcase id="2021-05-31T10:22:04.657Z" name="Groups - pattern" time="0"/>
    <testcase id="2021-05-31T10:22:04.940Z" name="Groups - _all metric" time="0"/>
    <testcase id="2021-05-31T10:22:05.228Z" name="Groups - search metric" time="0"/>
    <testcase id="2021-05-31T10:22:05.519Z" name="Groups - multi metric" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:05.799Z" name="free/indices.stats - /free/indices.stats/15_types.yml" time="3" tests="8" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:05.799Z" name="Types - blank" time="0"/>
    <testcase id="2021-05-31T10:22:06.208Z" name="Types - one" time="0"/>
    <testcase id="2021-05-31T10:22:06.619Z" name="Types - multi" time="0"/>
    <testcase id="2021-05-31T10:22:07.024Z" name="Types - star" time="0"/>
    <testcase id="2021-05-31T10:22:07.432Z" name="Types - pattern" time="0"/>
    <testcase id="2021-05-31T10:22:07.837Z" name="Types - _all metric" time="0"/>
    <testcase id="2021-05-31T10:22:08.209Z" name="Types - indexing metric" time="0"/>
    <testcase id="2021-05-31T10:22:08.590Z" name="Types - multi metric" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:08.990Z" name="free/indices.stats - /free/indices.stats/20_translog.yml" time="1" tests="6" failures="0" skipped="3">
    <testcase id="2021-05-31T10:22:08.990Z" name="Translog retention without soft_deletes" time="0">
      <skipped>{
  "version": " - 7.5.99",
  "reason": "indices without soft deletes are deprecated in 7.6",
  "features": [
    "warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:22:09.117Z" name="Translog retention with soft_deletes" time="0"/>
    <testcase id="2021-05-31T10:22:09.442Z" name="Translog retention settings are deprecated" time="0">
      <skipped>{
  "version": " - 7.6.99",
  "reason": "translog retention settings are deprecated in 7.6",
  "features": [
    "warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:22:09.565Z" name="Translog last modified age stats" time="0"/>
    <testcase id="2021-05-31T10:22:09.833Z" name="Translog stats on closed indices without soft-deletes" time="0">
      <skipped>{
  "version": " - 7.5.99",
  "reason": "indices without soft deletes are deprecated in 7.6",
  "features": [
    "warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:22:09.954Z" name="Translog stats on closed indices with soft-deletes" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:10.366Z" name="free/indices.stats - /free/indices.stats/30_segments.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:10.366Z" name="Segment Stats" time="0"/>
    <testcase id="2021-05-31T10:22:10.808Z" name="Indices Stats API with extended files stats" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:11.130Z" name="free/indices.stats - /free/indices.stats/40_updates_on_refresh.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:11.130Z" name="Completion stats" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:11.504Z" name="free/indices.update_aliases - /free/indices.update_aliases/10_basic.yml" time="1" tests="4" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:11.504Z" name="Basic test for aliases" time="0"/>
    <testcase id="2021-05-31T10:22:11.751Z" name="Basic test for multiple aliases" time="0"/>
    <testcase id="2021-05-31T10:22:12.017Z" name="Remove alias" time="0"/>
    <testcase id="2021-05-31T10:22:12.329Z" name="Aliases with date math" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:12.579Z" name="free/indices.update_aliases - /free/indices.update_aliases/20_routing.yml" time="2" tests="7" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:12.579Z" name="Routing" time="0"/>
    <testcase id="2021-05-31T10:22:12.861Z" name="Index Routing" time="0"/>
    <testcase id="2021-05-31T10:22:13.115Z" name="Search Routing" time="0"/>
    <testcase id="2021-05-31T10:22:13.374Z" name="Index, Default Routing" time="0"/>
    <testcase id="2021-05-31T10:22:13.630Z" name="Search, Default Routing" time="0"/>
    <testcase id="2021-05-31T10:22:13.884Z" name="Index, Search, Default Routing" time="0"/>
    <testcase id="2021-05-31T10:22:14.158Z" name="Numeric Routing" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:14.413Z" name="free/indices.update_aliases - /free/indices.update_aliases/30_remove_index_and_replace_with_alias.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:14.413Z" name="Remove an index and replace it with an alias" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:14.765Z" name="free/indices.update_aliases - /free/indices.update_aliases/40_must_exist.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:14.765Z" name="Remove alias with must_exist" time="0"/>
    <testcase id="2021-05-31T10:22:15.048Z" name="Alias must_exist only on remove" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:15.293Z" name="free/indices.upgrade - /free/indices.upgrade/10_basic.yml" time="1" tests="5" failures="0" skipped="5">
    <testcase id="2021-05-31T10:22:15.293Z" name="Basic test for upgrade indices" time="0">
      <skipped>{
  "version": " - 7.10.99",
  "reason": "_upgrade api is deprecated since 7.11.0",
  "features": [
    "warnings",
    "node_selector"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:22:15.419Z" name="Upgrade indices ignore unavailable" time="0">
      <skipped>{
  "version": " - 7.10.99",
  "reason": "_upgrade api is deprecated since 7.11.0",
  "features": [
    "warnings",
    "node_selector"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:22:15.548Z" name="Upgrade indices allow no indices" time="0">
      <skipped>{
  "version": " - 7.10.99",
  "reason": "_upgrade api is deprecated since 7.11.0",
  "features": [
    "warnings",
    "node_selector"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:22:15.662Z" name="Upgrade indices disallow no indices" time="0">
      <skipped>{
  "version": " - 7.10.99",
  "reason": "_upgrade api is deprecated since 7.11.0",
  "features": [
    "warnings",
    "node_selector"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:22:15.777Z" name="Upgrade indices disallow unavailable" time="0">
      <skipped>{
  "version": " - 7.10.99",
  "reason": "_upgrade api is deprecated since 7.11.0",
  "features": [
    "warnings",
    "node_selector"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:22:15.899Z" name="free/indices.upgrade - /free/indices.upgrade/20_deprecated.yml" time="1" tests="5" failures="0" skipped="5">
    <testcase id="2021-05-31T10:22:15.899Z" name="Basic test for upgrade indices &lt; 7.11.0" time="0">
      <skipped>{
  "version": "7.11.0 - ",
  "reason": "_upgrade api has deprecation header since 7.11.0",
  "features": "node_selector"
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:22:16.024Z" name="Upgrade indices ignore unavailable &lt; 7.11.0" time="0">
      <skipped>{
  "version": "7.11.0 - ",
  "reason": "_upgrade api has deprecation header since 7.11.0",
  "features": "node_selector"
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:22:16.149Z" name="Upgrade indices allow no indices &lt; 7.11.0" time="0">
      <skipped>{
  "version": "7.11.0 - ",
  "reason": "_upgrade api has deprecation header since 7.11.0",
  "features": "node_selector"
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:22:16.267Z" name="Upgrade indices disallow no indices &lt; 7.11.0" time="0">
      <skipped>{
  "version": "7.11.0 - ",
  "reason": "_upgrade api has deprecation header since 7.11.0",
  "features": "node_selector"
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:22:16.391Z" name="Upgrade indices disallow unavailable &lt; 7.11.0" time="0">
      <skipped>{
  "version": "7.11.0 - ",
  "reason": "_upgrade api has deprecation header since 7.11.0",
  "features": "node_selector"
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:22:16.518Z" name="free/indices.validate_query - /free/indices.validate_query/10_basic.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:16.518Z" name="Validate query api" time="0"/>
    <testcase id="2021-05-31T10:22:16.809Z" name="Validate body without query element" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:17.082Z" name="free/indices.validate_query - /free/indices.validate_query/20_query_string.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:17.082Z" name="validate_query with query_string parameters" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:17.348Z" name="free/info - /free/info/10_info.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:17.348Z" name="Info" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:17.478Z" name="free/info - /free/info/20_lucene_version.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:17.478Z" name="Lucene Version" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:17.618Z" name="free/ingest - /free/ingest/10_basic.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:17.618Z" name="Test basic pipeline crud" time="0"/>
    <testcase id="2021-05-31T10:22:17.797Z" name="Test Put Versioned Pipeline" time="0"/>
    <testcase id="2021-05-31T10:22:18.060Z" name="Test Get All Pipelines" time="0"/>
    <testcase id="2021-05-31T10:22:18.233Z" name="Test invalid config" time="0"/>
    <testcase id="2021-05-31T10:22:18.369Z" name="Test Get Summarized Pipelines" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:18.538Z" name="free/mget - /free/mget/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:18.538Z" name="Basic multi-get" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:18.910Z" name="free/mget - /free/mget/11_default_index_type.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:18.910Z" name="Default index/type" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:19.286Z" name="free/mget - /free/mget/12_non_existent_index.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:19.286Z" name="Non-existent index" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:19.578Z" name="free/mget - /free/mget/13_missing_metadata.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:19.578Z" name="Missing metadata" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:19.894Z" name="free/mget - /free/mget/14_alias_to_multiple_indices.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:19.894Z" name="Multi Get with alias that resolves to multiple indices" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:20.330Z" name="free/mget - /free/mget/15_ids.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:20.330Z" name="IDs" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:20.634Z" name="free/mget - /free/mget/16_basic_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:20.634Z" name="Basic multi-get" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:20.990Z" name="free/mget - /free/mget/17_default_index.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:20.990Z" name="Default index/type" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:21.382Z" name="free/mget - /free/mget/18_non_existent_index_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:21.382Z" name="Non-existent index" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:21.725Z" name="free/mget - /free/mget/19_missing_metadata_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:21.725Z" name="Missing metadata" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:22.018Z" name="free/mget - /free/mget/20_stored_fields.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:22.018Z" name="Stored fields" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:22.284Z" name="free/mget - /free/mget/21_alias_to_multiple_indices_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:22.284Z" name="Multi Get with alias that resolves to multiple indices" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:22.703Z" name="free/mget - /free/mget/22_ids_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:22.703Z" name="IDs" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:23.000Z" name="free/mget - /free/mget/23_stored_fields_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:23.000Z" name="Stored fields" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:23.331Z" name="free/mget - /free/mget/40_routing.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:23.331Z" name="Routing" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:23.713Z" name="free/mget - /free/mget/41_routing_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:23.713Z" name="Routing" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:24.133Z" name="free/mget - /free/mget/60_realtime_refresh.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:24.133Z" name="Realtime Refresh" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:24.458Z" name="free/mget - /free/mget/61_realtime_refresh_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:24.458Z" name="Realtime Refresh" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:24.760Z" name="free/mget - /free/mget/70_source_filtering.yml" time="2" tests="8" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:24.760Z" name="Source filtering -  true/false" time="0"/>
    <testcase id="2021-05-31T10:22:25.048Z" name="Source filtering -  include field" time="0"/>
    <testcase id="2021-05-31T10:22:25.333Z" name="Source filtering -  include nested field" time="0"/>
    <testcase id="2021-05-31T10:22:25.616Z" name="Source filtering -  exclude field" time="0"/>
    <testcase id="2021-05-31T10:22:25.898Z" name="Source filtering -  ids and true/false" time="0"/>
    <testcase id="2021-05-31T10:22:26.185Z" name="Source filtering -  ids and include field" time="0"/>
    <testcase id="2021-05-31T10:22:26.465Z" name="Source filtering -  ids and include nested field" time="0"/>
    <testcase id="2021-05-31T10:22:26.747Z" name="Source filtering -  ids and exclude field" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:27.043Z" name="free/mget - /free/mget/71_source_filtering_with_types.yml" time="2" tests="8" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:27.043Z" name="Source filtering -  true/false" time="0"/>
    <testcase id="2021-05-31T10:22:27.317Z" name="Source filtering -  include field" time="0"/>
    <testcase id="2021-05-31T10:22:27.601Z" name="Source filtering -  include nested field" time="0"/>
    <testcase id="2021-05-31T10:22:27.883Z" name="Source filtering -  exclude field" time="0"/>
    <testcase id="2021-05-31T10:22:28.176Z" name="Source filtering -  ids and true/false" time="0"/>
    <testcase id="2021-05-31T10:22:28.470Z" name="Source filtering -  ids and include field" time="0"/>
    <testcase id="2021-05-31T10:22:28.753Z" name="Source filtering -  ids and include nested field" time="0"/>
    <testcase id="2021-05-31T10:22:29.045Z" name="Source filtering -  ids and exclude field" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:29.359Z" name="free/mget - /free/mget/80_deprecated.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:22:29.359Z" name="Deprecated parameters should fail in Multi Get query" time="0">
      <skipped>{
  "version": " - 6.99.99",
  "reason": "_version, _routing are removed starting from 7.0, their equivalents without underscore are used instead",
  "features": [
    "warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:22:29.480Z" name="free/mget - /free/mget/80_deprecated_with_types.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:22:29.480Z" name="Deprecated parameters should fail in Multi Get query" time="0">
      <skipped>{
  "version": " - 6.99.99",
  "reason": "_version, _routing are removed starting from 7.0, their equivalents without underscore are used instead",
  "features": [
    "warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:22:29.605Z" name="free/mlt - /free/mlt/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:29.605Z" name="Basic mlt" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:29.909Z" name="free/mlt - /free/mlt/20_docs.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:29.909Z" name="Basic mlt query with docs" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:30.260Z" name="free/mlt - /free/mlt/30_unlike.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:30.260Z" name="Basic mlt query with unlike" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:30.585Z" name="free/msearch - /free/msearch/10_basic.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:30.585Z" name="Basic multi-search" time="0"/>
    <testcase id="2021-05-31T10:22:30.986Z" name="Least impact smoke test" time="0"/>
    <testcase id="2021-05-31T10:22:31.400Z" name="Search with new response format" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:31.842Z" name="free/msearch - /free/msearch/11_status.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:31.842Z" name="Check Status" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:32.071Z" name="free/msearch - /free/msearch/12_basic_with_types.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:32.071Z" name="Basic multi-search" time="0"/>
    <testcase id="2021-05-31T10:22:32.493Z" name="Least impact smoke test" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:32.889Z" name="free/msearch - /free/msearch/20_typed_keys.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:32.889Z" name="Multisearch test with typed_keys parameter" time="0"/>
    <testcase id="2021-05-31T10:22:33.355Z" name="Multisearch test with typed_keys parameter for sampler and significant terms" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:33.849Z" name="free/mtermvectors - /free/mtermvectors/10_basic.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:33.849Z" name="Basic tests for multi termvector get" time="0"/>
    <testcase id="2021-05-31T10:22:34.145Z" name="Tests index not found error in item" time="0"/>
    <testcase id="2021-05-31T10:22:34.401Z" name="Tests catching other exceptions per item" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:34.759Z" name="free/mtermvectors - /free/mtermvectors/11_basic_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:34.759Z" name="Basic tests for multi termvector get" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:35.066Z" name="free/mtermvectors - /free/mtermvectors/20_deprecated.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:22:35.066Z" name="Deprecated camel case and _ parameters should fail in Term Vectors query" time="0">
      <skipped>{
  "version": " - 6.99.99",
  "reason": "camel case and _ parameters (e.g. versionType, _version_type) should fail from 7.0",
  "features": [
    "warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:22:35.186Z" name="free/mtermvectors - /free/mtermvectors/21_deprecated_with_types.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:22:35.186Z" name="Deprecated camel case and _ parameters should fail in Term Vectors query" time="0">
      <skipped>{
  "version": " - 6.99.99",
  "reason": "camel case and _ parameters (e.g. versionType, _version_type) should fail from 7.0",
  "features": [
    "warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:22:35.308Z" name="free/mtermvectors - /free/mtermvectors/30_mix_typeless_typeful.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:35.308Z" name="mtermvectors without types on an index that has types" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:35.574Z" name="free/nodes.info - /free/nodes.info/10_basic.yml" time="0" tests="2" failures="0" skipped="1">
    <testcase id="2021-05-31T10:22:35.574Z" name="node_info test" time="0"/>
    <testcase id="2021-05-31T10:22:35.709Z" name="node_info role test" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "node roles were not sorted before 7.8.0",
  "features": [
    "no_xpack"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:22:35.829Z" name="free/nodes.info - /free/nodes.info/20_transport.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:35.829Z" name="node_info test profile is empty" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:35.964Z" name="free/nodes.info - /free/nodes.info/30_settings.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:35.964Z" name="node_info test flat_settings" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:36.109Z" name="free/nodes.info - /free/nodes.info/40_aggs.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:36.109Z" name="node_info test aggregations" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:36.247Z" name="free/nodes.reload_secure_settings - /free/nodes.reload_secure_settings/10_basic.yml" time="0" tests="2" failures="0" skipped="1">
    <testcase id="2021-05-31T10:22:36.247Z" name="node_reload_secure_settings test wrong password" time="0"/>
    <testcase id="2021-05-31T10:22:36.393Z" name="node_reload_secure_settings test correct(empty) password" time="0">
      <skipped>{
  "features": [
    "fips_140"
  ],
  "reason": "In FIPS 140 mode, we use a password protected elasticsearch keystore"
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:22:36.511Z" name="free/nodes.stats - /free/nodes.stats/10_basic.yml" time="0" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:36.511Z" name="Nodes stats" time="0"/>
    <testcase id="2021-05-31T10:22:36.647Z" name="Nodes stats level" time="0"/>
    <testcase id="2021-05-31T10:22:36.787Z" name="Nodes stats unrecognized parameter" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:36.923Z" name="free/nodes.stats - /free/nodes.stats/11_indices_metrics.yml" time="2" tests="11" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:36.923Z" name="Metric - blank" time="0"/>
    <testcase id="2021-05-31T10:22:37.082Z" name="Metric - _all" time="0"/>
    <testcase id="2021-05-31T10:22:37.228Z" name="Metric - indices _all" time="0"/>
    <testcase id="2021-05-31T10:22:37.371Z" name="Metric - one" time="0"/>
    <testcase id="2021-05-31T10:22:37.514Z" name="Metric - multi" time="0"/>
    <testcase id="2021-05-31T10:22:37.657Z" name="Metric - recovery" time="0"/>
    <testcase id="2021-05-31T10:22:37.798Z" name="Metric - _all include_segment_file_sizes" time="0"/>
    <testcase id="2021-05-31T10:22:37.941Z" name="Metric - segments include_segment_file_sizes" time="0"/>
    <testcase id="2021-05-31T10:22:38.083Z" name="Metric - segments include_unloaded_segments" time="0"/>
    <testcase id="2021-05-31T10:22:38.227Z" name="Metric - _all include_unloaded_segments" time="0"/>
    <testcase id="2021-05-31T10:22:38.363Z" name="Metric - http" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:38.505Z" name="free/nodes.stats - /free/nodes.stats/20_response_filtering.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:38.505Z" name="Nodes Stats with response filtering" time="0"/>
    <testcase id="2021-05-31T10:22:38.694Z" name="Nodes Stats filtered using both includes and excludes filters" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:38.847Z" name="free/nodes.stats - /free/nodes.stats/30_discovery.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:22:38.847Z" name="Discovery stats" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:22:38.848Z" name="free/nodes.stats - /free/nodes.stats/40_store_stats.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:38.848Z" name="Store stats" time="0"/>
    <testcase id="2021-05-31T10:22:38.999Z" name="Store stats bwc" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:39.153Z" name="free/nodes.stats - /free/nodes.stats/50_indexing_pressure.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:39.153Z" name="Indexing pressure stats" time="0"/>
    <testcase id="2021-05-31T10:22:39.296Z" name="Indexing pressure memory limit" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:39.428Z" name="free/nodes.stats - /free/nodes.stats/60_transport_stats.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:39.428Z" name="Transport stats" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:39.573Z" name="free/ping - /free/ping/10_ping.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:39.573Z" name="Ping" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:39.714Z" name="free/range - /free/range/10_basic.yml" time="2" tests="7" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:39.714Z" name="Integer range" time="0"/>
    <testcase id="2021-05-31T10:22:40.040Z" name="Long range" time="0"/>
    <testcase id="2021-05-31T10:22:40.347Z" name="Float range" time="0"/>
    <testcase id="2021-05-31T10:22:40.664Z" name="Double range" time="0"/>
    <testcase id="2021-05-31T10:22:41.048Z" name="IP range" time="0"/>
    <testcase id="2021-05-31T10:22:41.362Z" name="Date range" time="0"/>
    <testcase id="2021-05-31T10:22:41.659Z" name="Date range rounding" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:41.975Z" name="free/scripts - /free/scripts/20_get_script_context.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:41.975Z" name="Action to get all contexts" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:42.121Z" name="free/scripts - /free/scripts/25_get_script_languages.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:42.121Z" name="Action to get script languages" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:42.266Z" name="free/scroll - /free/scroll/10_basic.yml" time="2" tests="7" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:42.266Z" name="Basic scroll" time="0"/>
    <testcase id="2021-05-31T10:22:42.605Z" name="Basic scroll with 1 shard" time="0"/>
    <testcase id="2021-05-31T10:22:42.922Z" name="Body params override query string" time="0"/>
    <testcase id="2021-05-31T10:22:43.233Z" name="Scroll cannot used the request cache" time="0"/>
    <testcase id="2021-05-31T10:22:43.476Z" name="Scroll with size 0" time="0"/>
    <testcase id="2021-05-31T10:22:43.720Z" name="Scroll max_score is null" time="0"/>
    <testcase id="2021-05-31T10:22:44.011Z" name="Scroll with new response format" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:44.303Z" name="free/scroll - /free/scroll/11_clear.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:44.303Z" name="Clear scroll" time="0"/>
    <testcase id="2021-05-31T10:22:44.598Z" name="Body params with array param override query string" time="0"/>
    <testcase id="2021-05-31T10:22:44.893Z" name="Body params with string param scroll id override query string" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:45.188Z" name="free/scroll - /free/scroll/12_slices.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:45.188Z" name="Sliced scroll" time="0"/>
    <testcase id="2021-05-31T10:22:45.611Z" name="Sliced scroll with invalid arguments" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:46.079Z" name="free/scroll - /free/scroll/20_keep_alive.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:46.079Z" name="Max keep alive" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:46.471Z" name="free/search - /free/search/100_stored_fields.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:46.471Z" name="Stored fields" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:46.866Z" name="free/search - /free/search/10_source_filtering.yml" time="8" tests="20" failures="0" skipped="1">
    <testcase id="2021-05-31T10:22:46.866Z" name="_source: true" time="0"/>
    <testcase id="2021-05-31T10:22:47.238Z" name="_source: false" time="0"/>
    <testcase id="2021-05-31T10:22:47.623Z" name="no filtering" time="0"/>
    <testcase id="2021-05-31T10:22:47.999Z" name="_source in body" time="0"/>
    <testcase id="2021-05-31T10:22:48.402Z" name="_source_includes and _source in body" time="0"/>
    <testcase id="2021-05-31T10:22:48.817Z" name="_source_includes" time="0"/>
    <testcase id="2021-05-31T10:22:49.199Z" name="_source_excludes" time="0"/>
    <testcase id="2021-05-31T10:22:49.607Z" name="_source field1 field2" time="0"/>
    <testcase id="2021-05-31T10:22:50.013Z" name="_source.include field1 field2" time="0"/>
    <testcase id="2021-05-31T10:22:50.404Z" name="_source includes and excludes" time="0"/>
    <testcase id="2021-05-31T10:22:50.822Z" name="_source include on bigint" time="0"/>
    <testcase id="2021-05-31T10:22:51.218Z" name="_source filtering on bigint" time="0"/>
    <testcase id="2021-05-31T10:22:51.597Z" name="fields in body" time="0"/>
    <testcase id="2021-05-31T10:22:52.035Z" name="fields in body with source" time="1"/>
    <testcase id="2021-05-31T10:22:52.761Z" name="docvalue_fields" time="0"/>
    <testcase id="2021-05-31T10:22:53.071Z" name="multiple docvalue_fields" time="0"/>
    <testcase id="2021-05-31T10:22:53.354Z" name="docvalue_fields as url param" time="0"/>
    <testcase id="2021-05-31T10:22:53.639Z" name="docvalue_fields with default format" time="0">
      <skipped>{
  "version": " - 6.99.99",
  "reason": "Only triggers warnings on 7.0+",
  "features": [
    "warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:22:53.915Z" name="docvalue_fields with explicit format" time="0"/>
    <testcase id="2021-05-31T10:22:54.205Z" name="docvalue_fields - double" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:54.493Z" name="free/search - /free/search/110_field_collapsing.yml" time="5" tests="13" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:54.493Z" name="field collapsing" time="0"/>
    <testcase id="2021-05-31T10:22:54.899Z" name="field collapsing and from" time="0"/>
    <testcase id="2021-05-31T10:22:55.380Z" name="field collapsing and inner_hits" time="0"/>
    <testcase id="2021-05-31T10:22:55.848Z" name="field collapsing, inner_hits, and fields" time="0"/>
    <testcase id="2021-05-31T10:22:56.271Z" name="field collapsing, inner_hits and maxConcurrentGroupRequests" time="0"/>
    <testcase id="2021-05-31T10:22:56.723Z" name="field collapsing and scroll" time="0"/>
    <testcase id="2021-05-31T10:22:57.071Z" name="field collapsing and search_after" time="0"/>
    <testcase id="2021-05-31T10:22:57.329Z" name="field collapsing and rescore" time="0"/>
    <testcase id="2021-05-31T10:22:57.610Z" name="no hits and inner_hits" time="0"/>
    <testcase id="2021-05-31T10:22:57.894Z" name="no hits and inner_hits max_score null" time="0"/>
    <testcase id="2021-05-31T10:22:58.159Z" name="field collapsing and multiple inner_hits" time="0"/>
    <testcase id="2021-05-31T10:22:58.434Z" name="field collapsing on a field alias" time="0"/>
    <testcase id="2021-05-31T10:22:58.915Z" name="field collapsing, inner_hits and seq_no" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:59.197Z" name="free/search - /free/search/115_multiple_field_collapsing.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:59.197Z" name="two levels fields collapsing" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:22:59.441Z" name="free/search - /free/search/120_batch_reduce_size.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:22:59.441Z" name="batched_reduce_size lower limit" time="0"/>
    <testcase id="2021-05-31T10:22:59.719Z" name="batched_reduce_size 2 with 5 shards" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:23:00.076Z" name="free/search - /free/search/140_pre_filter_search_shards.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:23:00.076Z" name="pre_filter_shard_size with invalid parameter" time="1"/>
    <testcase id="2021-05-31T10:23:00.864Z" name="pre_filter_shard_size with shards that have no hit" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:23:01.405Z" name="free/search - /free/search/150_rewrite_on_coordinator.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:23:01.405Z" name="Ensure that we fetch the document only once" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:23:01.555Z" name="free/search - /free/search/160_exists_query.yml" time="40" tests="71" failures="0" skipped="0">
    <testcase id="2021-05-31T10:23:01.555Z" name="Test exists query on mapped binary field" time="1"/>
    <testcase id="2021-05-31T10:23:02.332Z" name="Test exists query on mapped boolean field" time="1"/>
    <testcase id="2021-05-31T10:23:02.889Z" name="Test exists query on mapped date field" time="1"/>
    <testcase id="2021-05-31T10:23:03.460Z" name="Test exists query on mapped geo_point field" time="1"/>
    <testcase id="2021-05-31T10:23:04.033Z" name="Test exists query on mapped ip field" time="1"/>
    <testcase id="2021-05-31T10:23:04.593Z" name="Test exists query on mapped keyword field" time="1"/>
    <testcase id="2021-05-31T10:23:05.119Z" name="Test exists query on mapped byte field" time="1"/>
    <testcase id="2021-05-31T10:23:05.690Z" name="Test exists query on mapped double field" time="1"/>
    <testcase id="2021-05-31T10:23:06.307Z" name="Test exists query on mapped float field" time="1"/>
    <testcase id="2021-05-31T10:23:06.886Z" name="Test exists query on mapped half_float field" time="1"/>
    <testcase id="2021-05-31T10:23:07.485Z" name="Test exists query on mapped integer field" time="1"/>
    <testcase id="2021-05-31T10:23:08.052Z" name="Test exists query on mapped long field" time="1"/>
    <testcase id="2021-05-31T10:23:08.635Z" name="Test exists query on mapped short field" time="1"/>
    <testcase id="2021-05-31T10:23:09.209Z" name="Test exists query on mapped object field" time="1"/>
    <testcase id="2021-05-31T10:23:09.760Z" name="Test exists query on mapped object inner field" time="1"/>
    <testcase id="2021-05-31T10:23:10.342Z" name="Test exists query on mapped text field" time="1"/>
    <testcase id="2021-05-31T10:23:10.949Z" name="Test exists query on _id field" time="1"/>
    <testcase id="2021-05-31T10:23:11.537Z" name="Test exists query on _index field" time="1"/>
    <testcase id="2021-05-31T10:23:12.083Z" name="Test exists query on _type field" time="1"/>
    <testcase id="2021-05-31T10:23:12.697Z" name="Test exists query on _routing field" time="1"/>
    <testcase id="2021-05-31T10:23:13.294Z" name="Test exists query on _seq_no field" time="1"/>
    <testcase id="2021-05-31T10:23:13.882Z" name="Test exists query on _source field" time="1"/>
    <testcase id="2021-05-31T10:23:14.443Z" name="Test exists query on _version field" time="1"/>
    <testcase id="2021-05-31T10:23:15.035Z" name="Test exists query on unmapped binary field" time="1"/>
    <testcase id="2021-05-31T10:23:15.594Z" name="Test exists query on unmapped boolean field" time="1"/>
    <testcase id="2021-05-31T10:23:16.138Z" name="Test exists query on unmapped date field" time="1"/>
    <testcase id="2021-05-31T10:23:16.673Z" name="Test exists query on unmapped geo_point field" time="1"/>
    <testcase id="2021-05-31T10:23:17.227Z" name="Test exists query on unmapped ip field" time="1"/>
    <testcase id="2021-05-31T10:23:17.778Z" name="Test exists query on unmapped keyword field" time="1"/>
    <testcase id="2021-05-31T10:23:18.346Z" name="Test exists query on unmapped byte field" time="1"/>
    <testcase id="2021-05-31T10:23:18.921Z" name="Test exists query on unmapped double field" time="1"/>
    <testcase id="2021-05-31T10:23:19.470Z" name="Test exists query on unmapped float field" time="1"/>
    <testcase id="2021-05-31T10:23:20.026Z" name="Test exists query on unmapped half_float field" time="1"/>
    <testcase id="2021-05-31T10:23:20.605Z" name="Test exists query on unmapped integer field" time="1"/>
    <testcase id="2021-05-31T10:23:21.183Z" name="Test exists query on unmapped long field" time="1"/>
    <testcase id="2021-05-31T10:23:21.747Z" name="Test exists query on unmapped short field" time="1"/>
    <testcase id="2021-05-31T10:23:22.289Z" name="Test exists query on unmapped object field" time="1"/>
    <testcase id="2021-05-31T10:23:22.855Z" name="Test exists query on unmapped object inner field" time="1"/>
    <testcase id="2021-05-31T10:23:23.399Z" name="Test exists query on unmapped text field" time="1"/>
    <testcase id="2021-05-31T10:23:23.961Z" name="Test exists query on binary field in empty index" time="1"/>
    <testcase id="2021-05-31T10:23:24.563Z" name="Test exists query on boolean field in empty index" time="1"/>
    <testcase id="2021-05-31T10:23:25.089Z" name="Test exists query on date field in empty index" time="1"/>
    <testcase id="2021-05-31T10:23:25.613Z" name="Test exists query on geo_point field in empty index" time="1"/>
    <testcase id="2021-05-31T10:23:26.155Z" name="Test exists query on ip field in empty index" time="1"/>
    <testcase id="2021-05-31T10:23:26.716Z" name="Test exists query on keyword field in empty index" time="1"/>
    <testcase id="2021-05-31T10:23:27.263Z" name="Test exists query on byte field in empty index" time="1"/>
    <testcase id="2021-05-31T10:23:27.800Z" name="Test exists query on double field in empty index" time="1"/>
    <testcase id="2021-05-31T10:23:28.347Z" name="Test exists query on float field in empty index" time="1"/>
    <testcase id="2021-05-31T10:23:28.890Z" name="Test exists query on half_float field in empty index" time="1"/>
    <testcase id="2021-05-31T10:23:29.433Z" name="Test exists query on integer field in empty index" time="1"/>
    <testcase id="2021-05-31T10:23:29.975Z" name="Test exists query on long field in empty index" time="1"/>
    <testcase id="2021-05-31T10:23:30.500Z" name="Test exists query on short field in empty index" time="1"/>
    <testcase id="2021-05-31T10:23:31.024Z" name="Test exists query on object field in empty index" time="1"/>
    <testcase id="2021-05-31T10:23:31.554Z" name="Test exists query on object inner field in empty index" time="1"/>
    <testcase id="2021-05-31T10:23:32.134Z" name="Test exists query on text field in empty index" time="1"/>
    <testcase id="2021-05-31T10:23:32.696Z" name="Test exists query on mapped binary field with no doc values" time="1"/>
    <testcase id="2021-05-31T10:23:33.257Z" name="Test exists query on mapped boolean field with no doc values" time="1"/>
    <testcase id="2021-05-31T10:23:33.808Z" name="Test exists query on mapped date field with no doc values" time="1"/>
    <testcase id="2021-05-31T10:23:34.366Z" name="Test exists query on mapped geo_point field with no doc values" time="1"/>
    <testcase id="2021-05-31T10:23:34.910Z" name="Test exists query on mapped ip field with no doc values" time="1"/>
    <testcase id="2021-05-31T10:23:35.516Z" name="Test exists query on mapped keyword field with no doc values" time="1"/>
    <testcase id="2021-05-31T10:23:36.083Z" name="Test exists query on mapped byte field with no doc values" time="1"/>
    <testcase id="2021-05-31T10:23:36.652Z" name="Test exists query on mapped double field with no doc values" time="1"/>
    <testcase id="2021-05-31T10:23:37.213Z" name="Test exists query on mapped float field with no doc values" time="1"/>
    <testcase id="2021-05-31T10:23:37.769Z" name="Test exists query on mapped half_float field with no doc values" time="1"/>
    <testcase id="2021-05-31T10:23:38.343Z" name="Test exists query on mapped integer field with no doc values" time="1"/>
    <testcase id="2021-05-31T10:23:38.908Z" name="Test exists query on mapped long field with no doc values" time="1"/>
    <testcase id="2021-05-31T10:23:39.489Z" name="Test exists query on mapped short field with no doc values" time="1"/>
    <testcase id="2021-05-31T10:23:40.040Z" name="Test exists query on mapped object field with no doc values" time="1"/>
    <testcase id="2021-05-31T10:23:40.596Z" name="Test exists query on mapped object inner field with no doc values" time="1"/>
    <testcase id="2021-05-31T10:23:41.157Z" name="Test exists query on mapped text field with no doc values" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:23:41.707Z" name="free/search - /free/search/170_terms_query.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:23:41.707Z" name="Terms Query with No.of terms exceeding index.max_terms_count should FAIL" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:23:42.003Z" name="free/search - /free/search/171_terms_query_with_types.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:23:42.003Z" name="Terms Query with No.of terms exceeding index.max_terms_count should FAIL" time="0">
      <skipped>{
  "version": " - 6.99.99",
  "reason": "index.max_terms_count setting has been added in 7.0.0",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:23:42.144Z" name="free/search - /free/search/180_locale_dependent_mapping.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:23:42.144Z" name="Test Index and Search locale dependent mappings / dates" time="0">
      <skipped>{
  "version": "all",
  "reason": "Awaits fix: https://github.com/elastic/elasticsearch/issues/49719"
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:23:42.281Z" name="free/search - /free/search/190_index_prefix_search.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:23:42.281Z" name="search with index prefixes" time="0"/>
    <testcase id="2021-05-31T10:23:42.581Z" name="search index prefixes with span_multi" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:23:42.885Z" name="free/search - /free/search/200_ignore_malformed.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2021-05-31T10:23:42.885Z" name="Exists on _ignored" time="0"/>
    <testcase id="2021-05-31T10:23:43.154Z" name="Search on _ignored with term" time="0"/>
    <testcase id="2021-05-31T10:23:43.434Z" name="Search on _ignored with terms" time="0"/>
    <testcase id="2021-05-31T10:23:43.708Z" name="_ignored is returned by default" time="0"/>
    <testcase id="2021-05-31T10:23:43.985Z" name="_ignored is still returned with explicit list of stored fields" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:23:44.248Z" name="free/search - /free/search/200_index_phrase_search.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:23:44.248Z" name="search with indexed phrases" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:23:44.653Z" name="free/search - /free/search/20_default_values.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:23:44.653Z" name="Basic search" time="0"/>
    <testcase id="2021-05-31T10:23:45.090Z" name="Search body without query element" time="0"/>
    <testcase id="2021-05-31T10:23:45.510Z" name="Search with new response format" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:23:45.936Z" name="free/search - /free/search/210_rescore_explain.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:23:45.936Z" name="Score should match explanation in rescore" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:23:46.257Z" name="free/search - /free/search/220_total_hits_object.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:23:46.257Z" name="hits.total as an object" time="0"/>
    <testcase id="2021-05-31T10:23:46.723Z" name="track_total_hits with rest_total_hits_as_int" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:23:47.161Z" name="free/search - /free/search/230_interval_query.yml" time="6" tests="22" failures="0" skipped="0">
    <testcase id="2021-05-31T10:23:47.161Z" name="Test ordered matching" time="0"/>
    <testcase id="2021-05-31T10:23:47.432Z" name="Test default unordered matching" time="0"/>
    <testcase id="2021-05-31T10:23:47.707Z" name="Test explicit unordered matching" time="0"/>
    <testcase id="2021-05-31T10:23:47.971Z" name="Test phrase matching" time="0"/>
    <testcase id="2021-05-31T10:23:48.234Z" name="Test unordered max_gaps matching" time="0"/>
    <testcase id="2021-05-31T10:23:48.496Z" name="Test ordered max_gaps matching" time="0"/>
    <testcase id="2021-05-31T10:23:48.778Z" name="Test ordered combination with disjunction" time="0"/>
    <testcase id="2021-05-31T10:23:49.050Z" name="Test ordered combination with max_gaps" time="0"/>
    <testcase id="2021-05-31T10:23:49.316Z" name="Test ordered combination" time="0"/>
    <testcase id="2021-05-31T10:23:49.581Z" name="Test unordered combination" time="0"/>
    <testcase id="2021-05-31T10:23:49.844Z" name="Test block combination" time="0"/>
    <testcase id="2021-05-31T10:23:50.106Z" name="Test containing" time="0"/>
    <testcase id="2021-05-31T10:23:50.374Z" name="Test not containing" time="0"/>
    <testcase id="2021-05-31T10:23:50.635Z" name="Test contained_by" time="0"/>
    <testcase id="2021-05-31T10:23:50.892Z" name="Test not_contained_by" time="0"/>
    <testcase id="2021-05-31T10:23:51.155Z" name="Test not_overlapping" time="0"/>
    <testcase id="2021-05-31T10:23:51.412Z" name="Test overlapping" time="0"/>
    <testcase id="2021-05-31T10:23:51.676Z" name="Test before" time="0"/>
    <testcase id="2021-05-31T10:23:51.934Z" name="Test after" time="0"/>
    <testcase id="2021-05-31T10:23:52.200Z" name="Test prefix" time="0"/>
    <testcase id="2021-05-31T10:23:52.462Z" name="Test wildcard" time="0"/>
    <testcase id="2021-05-31T10:23:52.722Z" name="Test fuzzy match" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:23:52.991Z" name="free/search - /free/search/240_date_nanos.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:23:52.991Z" name="test sorting against date_nanos only fields" time="0"/>
    <testcase id="2021-05-31T10:23:53.414Z" name="doc value fields are working as expected across date and date_nanos fields" time="0"/>
    <testcase id="2021-05-31T10:23:53.844Z" name="date histogram aggregation with date and date_nanos mapping" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:23:54.279Z" name="free/search - /free/search/250_distance_feature.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:23:54.279Z" name="test distance_feature query on date type" time="0"/>
    <testcase id="2021-05-31T10:23:54.561Z" name="test distance_feature query on date_nanos type" time="0"/>
    <testcase id="2021-05-31T10:23:54.832Z" name="test distance_feature query on geo_point type" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:23:55.134Z" name="free/search - /free/search/260_parameter_validation.yml" time="1" tests="3" failures="0" skipped="1">
    <testcase id="2021-05-31T10:23:55.134Z" name="test size=-1 is deprecated" time="0">
      <skipped>{
  "version": " - 7.12.99",
  "reason": "deprecation added in 7.13",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:23:55.555Z" name="test negative size throws IAE" time="0"/>
    <testcase id="2021-05-31T10:23:55.854Z" name="test negative terminate_after throws IAE" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:23:56.154Z" name="free/search - /free/search/300_sequence_numbers.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:23:56.154Z" name="sequence numbers are returned if requested from body" time="0"/>
    <testcase id="2021-05-31T10:23:56.478Z" name="sequence numbers are returned if requested from url" time="0"/>
    <testcase id="2021-05-31T10:23:56.771Z" name="sequence numbers are not returned if not requested" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:23:57.068Z" name="free/search - /free/search/30_limits.yml" time="2" tests="7" failures="0" skipped="0">
    <testcase id="2021-05-31T10:23:57.068Z" name="Request window limits without scroll" time="0"/>
    <testcase id="2021-05-31T10:23:57.365Z" name="Request with negative from value" time="0"/>
    <testcase id="2021-05-31T10:23:57.647Z" name="Request window limits with scroll" time="0"/>
    <testcase id="2021-05-31T10:23:57.937Z" name="Rescore window limits" time="0"/>
    <testcase id="2021-05-31T10:23:58.231Z" name="Docvalues_fields size limit" time="0"/>
    <testcase id="2021-05-31T10:23:58.530Z" name="Script_fields size limit" time="0"/>
    <testcase id="2021-05-31T10:23:58.816Z" name="Regexp length limit" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:23:59.108Z" name="free/search - /free/search/310_match_bool_prefix.yml" time="4" tests="16" failures="0" skipped="0">
    <testcase id="2021-05-31T10:23:59.108Z" name="scoring complete term" time="0"/>
    <testcase id="2021-05-31T10:23:59.376Z" name="scoring partial term" time="0"/>
    <testcase id="2021-05-31T10:23:59.641Z" name="minimum should match" time="0"/>
    <testcase id="2021-05-31T10:23:59.904Z" name="analyzer" time="0"/>
    <testcase id="2021-05-31T10:24:00.171Z" name="operator" time="0"/>
    <testcase id="2021-05-31T10:24:00.432Z" name="fuzziness" time="0"/>
    <testcase id="2021-05-31T10:24:00.702Z" name="multi_match single field complete term" time="0"/>
    <testcase id="2021-05-31T10:24:00.966Z" name="multi_match single field partial term" time="0"/>
    <testcase id="2021-05-31T10:24:01.271Z" name="multi_match multiple fields complete term" time="0"/>
    <testcase id="2021-05-31T10:24:01.538Z" name="multi_match multiple fields partial term" time="0"/>
    <testcase id="2021-05-31T10:24:01.861Z" name="multi_match multiple fields with analyzer" time="0"/>
    <testcase id="2021-05-31T10:24:02.130Z" name="multi_match multiple fields with minimum_should_match" time="0"/>
    <testcase id="2021-05-31T10:24:02.384Z" name="multi_match multiple fields with fuzziness" time="0"/>
    <testcase id="2021-05-31T10:24:02.653Z" name="multi_match multiple fields with boost" time="0"/>
    <testcase id="2021-05-31T10:24:02.922Z" name="multi_match multiple fields with slop throws exception" time="0"/>
    <testcase id="2021-05-31T10:24:03.189Z" name="multi_match multiple fields with cutoff_frequency throws exception" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:03.466Z" name="free/search - /free/search/320_disallow_queries.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:24:03.466Z" name="Test disallow expensive queries" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:03.847Z" name="free/search - /free/search/330_distributed_sort.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:24:03.847Z" name="test distributed sort can rewrite query to match no docs" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:04.275Z" name="free/search - /free/search/330_fetch_fields.yml" time="4" tests="17" failures="0" skipped="0">
    <testcase id="2021-05-31T10:24:04.275Z" name="Test basic field retrieval" time="0"/>
    <testcase id="2021-05-31T10:24:04.550Z" name="Test date formatting" time="0"/>
    <testcase id="2021-05-31T10:24:04.815Z" name="Test disable source" time="0"/>
    <testcase id="2021-05-31T10:24:05.071Z" name="Test ignore malformed" time="0"/>
    <testcase id="2021-05-31T10:24:05.333Z" name="Test disable _source loading" time="0"/>
    <testcase id="2021-05-31T10:24:05.587Z" name="Test search rewrite" time="0"/>
    <testcase id="2021-05-31T10:24:05.842Z" name="Test token count" time="0"/>
    <testcase id="2021-05-31T10:24:06.100Z" name="Test unmapped field" time="0"/>
    <testcase id="2021-05-31T10:24:06.365Z" name="Test unmapped fields inside disabled objects" time="0"/>
    <testcase id="2021-05-31T10:24:06.617Z" name="Test nested fields" time="0"/>
    <testcase id="2021-05-31T10:24:06.883Z" name="Test nested field inside object structure" time="0"/>
    <testcase id="2021-05-31T10:24:07.156Z" name="Test doubly nested fields" time="0"/>
    <testcase id="2021-05-31T10:24:07.450Z" name="Test nested fields with unmapped subfields" time="0"/>
    <testcase id="2021-05-31T10:24:07.698Z" name="Test nested fields with ignored subfields" time="0"/>
    <testcase id="2021-05-31T10:24:07.951Z" name="Test nested field with sibling field resolving to DocValueFetcher" time="0"/>
    <testcase id="2021-05-31T10:24:08.206Z" name="Test ignores malformed values while returning valid ones" time="0"/>
    <testcase id="2021-05-31T10:24:08.472Z" name="Test token_count inside nested field doesn't fail" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:08.727Z" name="free/search - /free/search/340_flattened.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2021-05-31T10:24:08.727Z" name="Test exists query on flattened object field" time="0"/>
    <testcase id="2021-05-31T10:24:08.989Z" name="Test query string query on flattened object field" time="0"/>
    <testcase id="2021-05-31T10:24:09.259Z" name="Test fields option on flattened object field" time="0"/>
    <testcase id="2021-05-31T10:24:09.515Z" name="Test fields option on flattened object field with include_unmapped" time="0"/>
    <testcase id="2021-05-31T10:24:09.771Z" name="Test fetching flattened subfields via fields option" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:10.034Z" name="free/search - /free/search/340_type_query.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:24:10.034Z" name="type query" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:10.467Z" name="free/search - /free/search/350_point_in_time.yml" time="1" tests="3" failures="0" skipped="1">
    <testcase id="2021-05-31T10:24:10.467Z" name="basic" time="0"/>
    <testcase id="2021-05-31T10:24:10.917Z" name="wildcard" time="0"/>
    <testcase id="2021-05-31T10:24:11.339Z" name="msearch" time="0">
      <skipped>{
  "version": " - 7.99.99",
  "reason": "After backport: 7.9.99 =&gt; point in time is introduced in 7.10"
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:24:11.765Z" name="free/search - /free/search/360_binary_field.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:24:11.766Z" name="binary" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:12.022Z" name="free/search - /free/search/360_combined_fields.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:24:12.022Z" name="Test combined_fields query" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:12.285Z" name="free/search - /free/search/40_indices_boost.yml" time="3" tests="6" failures="0" skipped="1">
    <testcase id="2021-05-31T10:24:12.285Z" name="Indices boost using object" time="0">
      <skipped>{
  "reason": "deprecation was added in 5.2.0",
  "features": [
    "warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:24:12.731Z" name="Indices boost using array" time="0"/>
    <testcase id="2021-05-31T10:24:13.172Z" name="Indices boost using array with alias" time="0"/>
    <testcase id="2021-05-31T10:24:13.631Z" name="Indices boost using array with wildcard" time="0"/>
    <testcase id="2021-05-31T10:24:14.084Z" name="Indices boost using array multiple match" time="0"/>
    <testcase id="2021-05-31T10:24:14.528Z" name="Indices boost for nonexistent index/alias" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:14.957Z" name="free/search - /free/search/60_query_string.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:24:14.957Z" name="search with query_string parameters" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:15.291Z" name="free/search - /free/search/70_response_filtering.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:24:15.291Z" name="Search with response filtering" time="0"/>
    <testcase id="2021-05-31T10:24:15.591Z" name="Search results filtered using both includes and excludes filters" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:15.918Z" name="free/search - /free/search/80_indices_options.yml" time="0" tests="3" failures="0" skipped="1">
    <testcase id="2021-05-31T10:24:15.918Z" name="Missing index date math with catch" time="0"/>
    <testcase id="2021-05-31T10:24:16.046Z" name="Missing index" time="0"/>
    <testcase id="2021-05-31T10:24:16.175Z" name="Closed index" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:24:16.302Z" name="free/search - /free/search/90_search_after.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2021-05-31T10:24:16.302Z" name="search with search_after parameter" time="0"/>
    <testcase id="2021-05-31T10:24:16.624Z" name="date" time="0"/>
    <testcase id="2021-05-31T10:24:16.884Z" name="date_nanos" time="0"/>
    <testcase id="2021-05-31T10:24:17.141Z" name="_shard_doc sort" time="0"/>
    <testcase id="2021-05-31T10:24:17.425Z" name="Format sort values" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:17.780Z" name="free/search - /free/search/issue4895.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:24:17.780Z" name="Test with _local preference placed in query body - should fail" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:18.073Z" name="free/search - /free/search/issue9606.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:24:18.073Z" name="Test search_type=query_and_fetch not supported from REST layer" time="0"/>
    <testcase id="2021-05-31T10:24:18.356Z" name="Test search_type=dfs_query_and_fetch not supported from REST layer" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:18.639Z" name="free/search.aggregation - /free/search.aggregation/100_avg_metric.yml" time="2" tests="7" failures="0" skipped="0">
    <testcase id="2021-05-31T10:24:18.640Z" name="Basic test" time="0"/>
    <testcase id="2021-05-31T10:24:18.917Z" name="Only aggs test" time="0"/>
    <testcase id="2021-05-31T10:24:19.189Z" name="Filtered test" time="0"/>
    <testcase id="2021-05-31T10:24:19.458Z" name="Missing field with missing param" time="0"/>
    <testcase id="2021-05-31T10:24:19.723Z" name="Missing field without missing param" time="0"/>
    <testcase id="2021-05-31T10:24:19.985Z" name="Metadata test" time="0"/>
    <testcase id="2021-05-31T10:24:20.257Z" name="Aggregating wrong datatype test" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:20.528Z" name="free/search.aggregation - /free/search.aggregation/10_histogram.yml" time="5" tests="13" failures="0" skipped="2">
    <testcase id="2021-05-31T10:24:20.528Z" name="Basic test" time="0"/>
    <testcase id="2021-05-31T10:24:20.800Z" name="Format test" time="0"/>
    <testcase id="2021-05-31T10:24:21.082Z" name="Deprecated _time order" time="0">
      <skipped>{
  "version": " - 7.1.99",
  "reason": "_time order deprecated in 6.0, replaced by _key. Calendar_interval added in 7.2",
  "features": [
    "warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:24:21.346Z" name="date_histogram" time="0"/>
    <testcase id="2021-05-31T10:24:21.766Z" name="date_histogram with offset" time="0">
      <skipped>{
  "version": "all",
  "reason": "AwaitsFix https://github.com/elastic/elasticsearch/issues/51525"
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:24:22.036Z" name="date_histogram on range" time="0"/>
    <testcase id="2021-05-31T10:24:22.468Z" name="date_histogram on range with offset" time="0"/>
    <testcase id="2021-05-31T10:24:22.902Z" name="date_histogram with pre-epoch daylight savings time transition" time="0"/>
    <testcase id="2021-05-31T10:24:23.213Z" name="histogram profiler" time="0"/>
    <testcase id="2021-05-31T10:24:23.593Z" name="date_histogram profiler" time="0"/>
    <testcase id="2021-05-31T10:24:23.965Z" name="histogram with hard bounds" time="0"/>
    <testcase id="2021-05-31T10:24:24.286Z" name="date_histogram with extended_bounds and offset and unmapped" time="0"/>
    <testcase id="2021-05-31T10:24:24.735Z" name="Tiny tiny tiny range" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:25.120Z" name="free/search.aggregation - /free/search.aggregation/110_max_metric.yml" time="2" tests="7" failures="0" skipped="0">
    <testcase id="2021-05-31T10:24:25.120Z" name="Basic test" time="0"/>
    <testcase id="2021-05-31T10:24:25.386Z" name="Only aggs test" time="0"/>
    <testcase id="2021-05-31T10:24:25.699Z" name="Filtered test" time="0"/>
    <testcase id="2021-05-31T10:24:26.018Z" name="Missing field with missing param" time="0"/>
    <testcase id="2021-05-31T10:24:26.365Z" name="Missing field without missing param" time="0"/>
    <testcase id="2021-05-31T10:24:26.631Z" name="Metadata test" time="0"/>
    <testcase id="2021-05-31T10:24:26.917Z" name="Aggregating wrong datatype test" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:27.216Z" name="free/search.aggregation - /free/search.aggregation/120_min_metric.yml" time="2" tests="7" failures="0" skipped="0">
    <testcase id="2021-05-31T10:24:27.216Z" name="Basic test" time="0"/>
    <testcase id="2021-05-31T10:24:27.501Z" name="Only aggs test" time="0"/>
    <testcase id="2021-05-31T10:24:27.778Z" name="Filtered test" time="0"/>
    <testcase id="2021-05-31T10:24:28.062Z" name="Missing field with missing param" time="0"/>
    <testcase id="2021-05-31T10:24:28.342Z" name="Missing field without missing param" time="0"/>
    <testcase id="2021-05-31T10:24:28.617Z" name="Metadata test" time="0"/>
    <testcase id="2021-05-31T10:24:28.920Z" name="Aggregating wrong datatype test" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:29.192Z" name="free/search.aggregation - /free/search.aggregation/130_sum_metric.yml" time="2" tests="7" failures="0" skipped="0">
    <testcase id="2021-05-31T10:24:29.192Z" name="Basic test" time="0"/>
    <testcase id="2021-05-31T10:24:29.497Z" name="Only aggs test" time="0"/>
    <testcase id="2021-05-31T10:24:29.801Z" name="Filtered test" time="0"/>
    <testcase id="2021-05-31T10:24:30.090Z" name="Missing field with missing param" time="0"/>
    <testcase id="2021-05-31T10:24:30.386Z" name="Missing field without missing param" time="0"/>
    <testcase id="2021-05-31T10:24:30.668Z" name="Metadata test" time="0"/>
    <testcase id="2021-05-31T10:24:30.946Z" name="Aggregating wrong datatype test" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:31.227Z" name="free/search.aggregation - /free/search.aggregation/140_value_count_metric.yml" time="2" tests="6" failures="0" skipped="0">
    <testcase id="2021-05-31T10:24:31.228Z" name="Basic test" time="0"/>
    <testcase id="2021-05-31T10:24:31.553Z" name="Only aggs test" time="0"/>
    <testcase id="2021-05-31T10:24:31.863Z" name="Filtered test" time="0"/>
    <testcase id="2021-05-31T10:24:32.138Z" name="Missing field with missing param" time="0"/>
    <testcase id="2021-05-31T10:24:32.427Z" name="Missing field without missing param" time="0"/>
    <testcase id="2021-05-31T10:24:32.710Z" name="Metadata test" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:32.986Z" name="free/search.aggregation - /free/search.aggregation/150_stats_metric.yml" time="2" tests="6" failures="0" skipped="0">
    <testcase id="2021-05-31T10:24:32.986Z" name="Basic test" time="0"/>
    <testcase id="2021-05-31T10:24:33.277Z" name="Only aggs test" time="0"/>
    <testcase id="2021-05-31T10:24:33.564Z" name="Filtered test" time="0"/>
    <testcase id="2021-05-31T10:24:33.845Z" name="Missing field with missing param" time="0"/>
    <testcase id="2021-05-31T10:24:34.106Z" name="Missing field without missing param" time="0"/>
    <testcase id="2021-05-31T10:24:34.376Z" name="Metadata test" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:34.641Z" name="free/search.aggregation - /free/search.aggregation/160_extended_stats_metric.yml" time="2" tests="8" failures="0" skipped="0">
    <testcase id="2021-05-31T10:24:34.641Z" name="Basic test" time="0"/>
    <testcase id="2021-05-31T10:24:34.926Z" name="Only aggs test" time="0"/>
    <testcase id="2021-05-31T10:24:35.196Z" name="Filtered test" time="0"/>
    <testcase id="2021-05-31T10:24:35.478Z" name="Missing field with missing param" time="0"/>
    <testcase id="2021-05-31T10:24:35.753Z" name="Missing field without missing param" time="0"/>
    <testcase id="2021-05-31T10:24:36.009Z" name="Metadata test" time="0"/>
    <testcase id="2021-05-31T10:24:36.282Z" name="Sigma test" time="0"/>
    <testcase id="2021-05-31T10:24:36.562Z" name="Bad sigma test" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:36.847Z" name="free/search.aggregation - /free/search.aggregation/170_cardinality_metric.yml" time="3" tests="10" failures="0" skipped="3">
    <testcase id="2021-05-31T10:24:36.847Z" name="Basic test" time="0"/>
    <testcase id="2021-05-31T10:24:37.128Z" name="Only aggs test" time="0"/>
    <testcase id="2021-05-31T10:24:37.395Z" name="Filtered test" time="0"/>
    <testcase id="2021-05-31T10:24:37.665Z" name="Missing field with missing param" time="0"/>
    <testcase id="2021-05-31T10:24:37.937Z" name="Missing field without missing param" time="0"/>
    <testcase id="2021-05-31T10:24:38.194Z" name="Metadata test" time="0"/>
    <testcase id="2021-05-31T10:24:38.462Z" name="Invalid Precision test" time="0"/>
    <testcase id="2021-05-31T10:24:38.723Z" name="profiler int" time="0">
      <skipped>{
  "version": " - 7.99.99",
  "reason": "new info added in 8.0.0 to be backported to 7.10.0"
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:24:39.001Z" name="profiler double" time="0">
      <skipped>{
  "version": " - 7.99.99",
  "reason": "new info added in 8.0.0 to be backported to 7.10.0"
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:24:39.277Z" name="profiler string" time="0">
      <skipped>{
  "version": " - 7.99.99",
  "reason": "new info added in 8.0.0 to be backported to 7.10.0"
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:24:39.552Z" name="free/search.aggregation - /free/search.aggregation/180_percentiles_tdigest_metric.yml" time="3" tests="9" failures="0" skipped="0">
    <testcase id="2021-05-31T10:24:39.552Z" name="Basic test" time="0"/>
    <testcase id="2021-05-31T10:24:39.834Z" name="Only aggs test" time="0"/>
    <testcase id="2021-05-31T10:24:40.095Z" name="Filtered test" time="0"/>
    <testcase id="2021-05-31T10:24:40.370Z" name="Missing field with missing param" time="0"/>
    <testcase id="2021-05-31T10:24:40.638Z" name="Missing field without missing param" time="0"/>
    <testcase id="2021-05-31T10:24:40.905Z" name="Metadata test" time="0"/>
    <testcase id="2021-05-31T10:24:41.172Z" name="Invalid params test" time="0"/>
    <testcase id="2021-05-31T10:24:41.467Z" name="Explicit Percents test" time="0"/>
    <testcase id="2021-05-31T10:24:41.753Z" name="Non-keyed test" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:42.080Z" name="free/search.aggregation - /free/search.aggregation/190_percentiles_hdr_metric.yml" time="3" tests="10" failures="0" skipped="0">
    <testcase id="2021-05-31T10:24:42.080Z" name="Basic test" time="0"/>
    <testcase id="2021-05-31T10:24:42.443Z" name="Only aggs test" time="0"/>
    <testcase id="2021-05-31T10:24:42.784Z" name="Filtered test" time="0"/>
    <testcase id="2021-05-31T10:24:43.131Z" name="Missing field with missing param" time="0"/>
    <testcase id="2021-05-31T10:24:43.477Z" name="Missing field without missing param" time="0"/>
    <testcase id="2021-05-31T10:24:43.828Z" name="Metadata test" time="0"/>
    <testcase id="2021-05-31T10:24:44.174Z" name="Invalid params test" time="0"/>
    <testcase id="2021-05-31T10:24:44.530Z" name="Explicit Percents test" time="0"/>
    <testcase id="2021-05-31T10:24:44.897Z" name="Non-keyed test" time="0"/>
    <testcase id="2021-05-31T10:24:45.240Z" name="Negative values test" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:45.578Z" name="free/search.aggregation - /free/search.aggregation/200_top_hits_metric.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:24:45.578Z" name="top_hits aggregation with nested documents" time="0"/>
    <testcase id="2021-05-31T10:24:45.934Z" name="top_hits aggregation with nested documents and disabled _source" time="0"/>
    <testcase id="2021-05-31T10:24:46.384Z" name="top_hits aggregation with sequence numbers" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:46.717Z" name="free/search.aggregation - /free/search.aggregation/20_terms.yml" time="11" tests="27" failures="0" skipped="1">
    <testcase id="2021-05-31T10:24:46.717Z" name="Basic test" time="1"/>
    <testcase id="2021-05-31T10:24:47.247Z" name="IP test" time="0"/>
    <testcase id="2021-05-31T10:24:47.655Z" name="Boolean test" time="0"/>
    <testcase id="2021-05-31T10:24:48.051Z" name="Integer test" time="0"/>
    <testcase id="2021-05-31T10:24:48.414Z" name="Double test" time="0"/>
    <testcase id="2021-05-31T10:24:48.804Z" name="Date test" time="0"/>
    <testcase id="2021-05-31T10:24:49.186Z" name="Partitioned string test" time="0"/>
    <testcase id="2021-05-31T10:24:49.634Z" name="Partitioned integer test" time="0"/>
    <testcase id="2021-05-31T10:24:50.031Z" name="Unmapped strings" time="0"/>
    <testcase id="2021-05-31T10:24:50.404Z" name="Unmapped booleans" time="0"/>
    <testcase id="2021-05-31T10:24:50.762Z" name="Unmapped dates" time="0"/>
    <testcase id="2021-05-31T10:24:51.131Z" name="Unmapped longs" time="0"/>
    <testcase id="2021-05-31T10:24:51.506Z" name="Unmapped doubles" time="0"/>
    <testcase id="2021-05-31T10:24:51.871Z" name="Mixing longs and doubles" time="0"/>
    <testcase id="2021-05-31T10:24:52.260Z" name="Deprecated _term order" time="0">
      <skipped>{
  "reason": "_term order deprecated in 6.0, replaced by _key",
  "features": [
    "warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:24:52.640Z" name="Global ordinals are not loaded with the map execution hint" time="0"/>
    <testcase id="2021-05-31T10:24:53.033Z" name="Global ordinals are loaded with the global_ordinals execution hint" time="0"/>
    <testcase id="2021-05-31T10:24:53.428Z" name="No field or script" time="0"/>
    <testcase id="2021-05-31T10:24:53.795Z" name="string profiler via global ordinals filters implementation" time="0"/>
    <testcase id="2021-05-31T10:24:54.252Z" name="string profiler via global ordinals native implementation" time="1"/>
    <testcase id="2021-05-31T10:24:54.782Z" name="string profiler via map" time="0"/>
    <testcase id="2021-05-31T10:24:55.134Z" name="numeric profiler" time="0"/>
    <testcase id="2021-05-31T10:24:55.501Z" name="min_doc_count" time="0"/>
    <testcase id="2021-05-31T10:24:55.868Z" name="order by sub agg" time="0"/>
    <testcase id="2021-05-31T10:24:56.235Z" name="order by sub agg containing nested" time="0"/>
    <testcase id="2021-05-31T10:24:56.595Z" name="order by sub agg containing filter" time="0"/>
    <testcase id="2021-05-31T10:24:56.952Z" name="precise size" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:24:57.303Z" name="free/search.aggregation - /free/search.aggregation/220_filters_bucket.yml" time="3" tests="9" failures="0" skipped="2">
    <testcase id="2021-05-31T10:24:57.303Z" name="Basic test" time="0"/>
    <testcase id="2021-05-31T10:24:57.561Z" name="Anonymous filters test" time="0"/>
    <testcase id="2021-05-31T10:24:57.830Z" name="Only aggs test" time="0"/>
    <testcase id="2021-05-31T10:24:58.096Z" name="Filtered test" time="0"/>
    <testcase id="2021-05-31T10:24:58.368Z" name="Metadata test" time="0"/>
    <testcase id="2021-05-31T10:24:58.633Z" name="Bad params" time="0"/>
    <testcase id="2021-05-31T10:24:58.905Z" name="cache busting" time="0">
      <skipped>{
  "version": " - 7.10.99",
  "reason": "cache fixed in 7.11.0",
  "features": [
    "node_selector"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:24:59.189Z" name="nested" time="0"/>
    <testcase id="2021-05-31T10:24:59.555Z" name="cache hits" time="0">
      <skipped>{
  "features": [
    "node_selector"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:24:59.853Z" name="free/search.aggregation - /free/search.aggregation/230_composite.yml" time="14" tests="25" failures="0" skipped="1">
    <testcase id="2021-05-31T10:24:59.853Z" name="Simple Composite aggregation" time="1"/>
    <testcase id="2021-05-31T10:25:00.440Z" name="Nested Composite aggregation" time="1"/>
    <testcase id="2021-05-31T10:25:00.982Z" name="Aggregate After" time="1"/>
    <testcase id="2021-05-31T10:25:01.563Z" name="Aggregate After Missing" time="1"/>
    <testcase id="2021-05-31T10:25:02.148Z" name="Invalid Composite aggregation" time="1"/>
    <testcase id="2021-05-31T10:25:02.678Z" name="Composite aggregation with format" time="1">
      <skipped>{
  "version": " - 7.1.99",
  "reason": "calendar_interval introduced in 7.2.0",
  "features": [
    "warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:25:03.200Z" name="Composite aggregation with format and calendar_interval" time="1"/>
    <testcase id="2021-05-31T10:25:03.752Z" name="Composite aggregation with date_histogram offset" time="1"/>
    <testcase id="2021-05-31T10:25:04.280Z" name="Composite aggregation with after_key in the response" time="1"/>
    <testcase id="2021-05-31T10:25:04.809Z" name="Composite aggregation and array size" time="1"/>
    <testcase id="2021-05-31T10:25:05.396Z" name="Composite aggregation with unmapped field" time="1"/>
    <testcase id="2021-05-31T10:25:05.961Z" name="Missing source" time="1"/>
    <testcase id="2021-05-31T10:25:06.524Z" name="Duplicate sources" time="1"/>
    <testcase id="2021-05-31T10:25:07.076Z" name="Simple Composite aggregation with GeoTile grid" time="1"/>
    <testcase id="2021-05-31T10:25:07.629Z" name="Simple Composite aggregation with geotile grid add aggregate after" time="1"/>
    <testcase id="2021-05-31T10:25:08.163Z" name="Mixed ip and unmapped fields" time="1"/>
    <testcase id="2021-05-31T10:25:08.895Z" name="date_histogram with time_zone" time="1"/>
    <testcase id="2021-05-31T10:25:09.472Z" name="date_histogram on date_nanos" time="1"/>
    <testcase id="2021-05-31T10:25:10.139Z" name="Terms source from sorted" time="1"/>
    <testcase id="2021-05-31T10:25:10.790Z" name="Terms source from part of sorted" time="1"/>
    <testcase id="2021-05-31T10:25:11.425Z" name="Nested as parent" time="1"/>
    <testcase id="2021-05-31T10:25:11.984Z" name="Nested parent with compound key" time="1"/>
    <testcase id="2021-05-31T10:25:12.565Z" name="Nested with a nested sub aggregation" time="1"/>
    <testcase id="2021-05-31T10:25:13.151Z" name="Nested then filter then nested then terms" time="1"/>
    <testcase id="2021-05-31T10:25:13.749Z" name="Filter without nesting" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:14.294Z" name="free/search.aggregation - /free/search.aggregation/235_composite_sorted.yml" time="1" tests="4" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:14.294Z" name="one source - first page" time="0"/>
    <testcase id="2021-05-31T10:25:14.627Z" name="one source - second page" time="0"/>
    <testcase id="2021-05-31T10:25:14.968Z" name="two sources - first page" time="0"/>
    <testcase id="2021-05-31T10:25:15.310Z" name="two sources - second page" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:15.666Z" name="free/search.aggregation - /free/search.aggregation/240_max_buckets.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:25:15.666Z" name="Max bucket" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:25:15.667Z" name="free/search.aggregation - /free/search.aggregation/250_moving_fn.yml" time="0" tests="3" failures="0" skipped="1">
    <testcase id="2021-05-31T10:25:15.667Z" name="Bad window" time="0"/>
    <testcase id="2021-05-31T10:25:15.798Z" name="Bad window deprecated interval" time="0">
      <skipped>{
  "version": " - 7.1.99",
  "reason": "interval deprecation added in 7.2",
  "features": [
    "warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:25:15.923Z" name="Not under date_histo" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:16.052Z" name="free/search.aggregation - /free/search.aggregation/260_weighted_avg.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:16.052Z" name="Basic test" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:16.332Z" name="free/search.aggregation - /free/search.aggregation/270_median_absolute_deviation_metric.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:16.332Z" name="basic test" time="0"/>
    <testcase id="2021-05-31T10:25:16.624Z" name="with setting compression" time="0"/>
    <testcase id="2021-05-31T10:25:16.885Z" name="no documents" time="0"/>
    <testcase id="2021-05-31T10:25:17.146Z" name="missing value" time="0"/>
    <testcase id="2021-05-31T10:25:17.450Z" name="bad arguments" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:17.724Z" name="free/search.aggregation - /free/search.aggregation/280_geohash_grid.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:17.724Z" name="Basic test" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:17.997Z" name="free/search.aggregation - /free/search.aggregation/280_rare_terms.yml" time="3" tests="11" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:17.997Z" name="Basic test" time="0"/>
    <testcase id="2021-05-31T10:25:18.299Z" name="IP test" time="0"/>
    <testcase id="2021-05-31T10:25:18.595Z" name="Boolean test" time="0"/>
    <testcase id="2021-05-31T10:25:18.881Z" name="Integer test" time="0"/>
    <testcase id="2021-05-31T10:25:19.154Z" name="Date test" time="0"/>
    <testcase id="2021-05-31T10:25:19.435Z" name="Unmapped strings" time="0"/>
    <testcase id="2021-05-31T10:25:19.702Z" name="Unmapped booleans" time="0"/>
    <testcase id="2021-05-31T10:25:19.967Z" name="Unmapped dates" time="0"/>
    <testcase id="2021-05-31T10:25:20.232Z" name="Unmapped longs" time="0"/>
    <testcase id="2021-05-31T10:25:20.504Z" name="sub aggs" time="0"/>
    <testcase id="2021-05-31T10:25:20.792Z" name="avg_bucket" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:21.172Z" name="free/search.aggregation - /free/search.aggregation/290_geotile_grid.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:21.172Z" name="Basic test" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:21.433Z" name="free/search.aggregation - /free/search.aggregation/300_pipeline.yml" time="2" tests="5" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:21.433Z" name="Max pipeline through terms agg" time="0"/>
    <testcase id="2021-05-31T10:25:21.711Z" name="Max pipeline on terms agg" time="0"/>
    <testcase id="2021-05-31T10:25:21.973Z" name="Max pipeline on percentiles agg without specifying percent" time="0"/>
    <testcase id="2021-05-31T10:25:22.243Z" name="Top level bucket_sort" time="0"/>
    <testcase id="2021-05-31T10:25:22.514Z" name="deep cumulative sum" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:22.951Z" name="free/search.aggregation - /free/search.aggregation/30_sig_terms.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:22.951Z" name="Default index" time="0"/>
    <testcase id="2021-05-31T10:25:23.252Z" name="IP test" time="0"/>
    <testcase id="2021-05-31T10:25:23.531Z" name="Misspelled fields get &quot;did you mean&quot;" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:23.662Z" name="free/search.aggregation - /free/search.aggregation/310_date_agg_per_day_of_week.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:25:23.662Z" name="Date aggregation per day of week" time="0">
      <skipped>{
  "version": " - 7.6.99",
  "reason": "Start of the week Monday was enabled in a backport to 7.7 PR#50916",
  "features": [
    "spi_on_classpath_jdk9"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:25:23.663Z" name="free/search.aggregation - /free/search.aggregation/320_missing.yml" time="1" tests="4" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:23.663Z" name="match all" time="0"/>
    <testcase id="2021-05-31T10:25:23.935Z" name="match some" time="0"/>
    <testcase id="2021-05-31T10:25:24.204Z" name="match none" time="0"/>
    <testcase id="2021-05-31T10:25:24.469Z" name="missing param" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:24.742Z" name="free/search.aggregation - /free/search.aggregation/330_auto_date_histogram.yml" time="1" tests="3" failures="0" skipped="1">
    <testcase id="2021-05-31T10:25:24.742Z" name="basic" time="0"/>
    <testcase id="2021-05-31T10:25:25.052Z" name="avg_bucket" time="0"/>
    <testcase id="2021-05-31T10:25:25.361Z" name="profile at top level" time="0">
      <skipped>{
  "version": " - 7.99.99",
  "reason": "Debug information added in 8.0.0 (to be backported to 7.9.0)"
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:25:25.690Z" name="free/search.aggregation - /free/search.aggregation/340_geo_distance.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:25.690Z" name="basic" time="0"/>
    <testcase id="2021-05-31T10:25:25.989Z" name="avg_bucket" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:26.281Z" name="free/search.aggregation - /free/search.aggregation/350_variable_width_histogram.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:25:26.281Z" name="basic" time="0">
      <skipped>{
  "version": " - 7.99.99",
  "reason": "added in 8.0.0 (to be backported to 7.9.0)"
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:25:26.571Z" name="free/search.aggregation - /free/search.aggregation/360_date_histogram.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:26.571Z" name="date_histogram on range with hard bounds" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:27.031Z" name="free/search.aggregation - /free/search.aggregation/370_doc_count_field.yml" time="2" tests="6" failures="0" skipped="1">
    <testcase id="2021-05-31T10:25:27.031Z" name="Test numeric terms agg with doc_count" time="0"/>
    <testcase id="2021-05-31T10:25:27.355Z" name="Test keyword terms agg with doc_count" time="0"/>
    <testcase id="2021-05-31T10:25:27.673Z" name="Test unmapped string terms agg with doc_count" time="0"/>
    <testcase id="2021-05-31T10:25:28.103Z" name="Test composite str_terms agg with doc_count" time="0"/>
    <testcase id="2021-05-31T10:25:28.422Z" name="Test composite num_terms agg with doc_count" time="0"/>
    <testcase id="2021-05-31T10:25:28.739Z" name="Test filters agg with doc_count" time="0">
      <skipped>{
  "version": " - 7.12.99",
  "features": [
    "default_shards"
  ],
  "reason": "name changed in 7.13.0"
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:25:29.085Z" name="free/search.aggregation - /free/search.aggregation/380_global.yml" time="1" tests="2" failures="0" skipped="1">
    <testcase id="2021-05-31T10:25:29.085Z" name="simple" time="0"/>
    <testcase id="2021-05-31T10:25:29.372Z" name="profile" time="0">
      <skipped>{
  "version": " - 7.99.99",
  "reason": "fixed in 8.0.0 (to be backported to 7.13.0)"
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:25:29.683Z" name="free/search.aggregation - /free/search.aggregation/380_nested.yml" time="1" tests="4" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:29.683Z" name="Single Level Nested with Terms" time="0"/>
    <testcase id="2021-05-31T10:25:29.991Z" name="Compound nested key" time="0"/>
    <testcase id="2021-05-31T10:25:30.297Z" name="Nested with a nested sub aggregation" time="0"/>
    <testcase id="2021-05-31T10:25:30.601Z" name="Nested then filter then nested then terms" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:30.908Z" name="free/search.aggregation - /free/search.aggregation/390_geo_bounds_centroid.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:25:30.908Z" name="Basic test" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:25:30.910Z" name="free/search.aggregation - /free/search.aggregation/40_range.yml" time="2" tests="7" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:30.910Z" name="Double range" time="0"/>
    <testcase id="2021-05-31T10:25:31.253Z" name="IP range" time="0"/>
    <testcase id="2021-05-31T10:25:31.565Z" name="IP Range Key Generation" time="0"/>
    <testcase id="2021-05-31T10:25:31.878Z" name="IP Range avg_bucket" time="0"/>
    <testcase id="2021-05-31T10:25:32.217Z" name="Date range" time="0"/>
    <testcase id="2021-05-31T10:25:32.523Z" name="Date Range Missing" time="0"/>
    <testcase id="2021-05-31T10:25:32.834Z" name="Date range unmapped with children" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:33.212Z" name="free/search.aggregation - /free/search.aggregation/50_filter.yml" time="1" tests="4" failures="0" skipped="2">
    <testcase id="2021-05-31T10:25:33.212Z" name="Terms lookup gets cached" time="0">
      <skipped>{
  "features": [
    "node_selector"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:25:33.520Z" name="Standard queries get cached" time="0">
      <skipped>{
  "features": [
    "node_selector"
  ]
}</skipped>
    </testcase>
    <testcase id="2021-05-31T10:25:33.830Z" name="As a child of terms" time="0"/>
    <testcase id="2021-05-31T10:25:34.154Z" name="Sorting terms" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:34.490Z" name="free/search.aggregation - /free/search.aggregation/51_filter_with_types.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:25:34.490Z" name="Filter aggs with terms lookup and ensure it's cached" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:25:34.829Z" name="free/search.aggregation - /free/search.aggregation/70_adjacency_matrix.yml" time="1" tests="2" failures="0" skipped="1">
    <testcase id="2021-05-31T10:25:34.829Z" name="Filters intersections" time="0"/>
    <testcase id="2021-05-31T10:25:35.151Z" name="Terms lookup" time="0">
      <skipped>{
  "version": " - 7.8.99",
  "reason": "fixed in 7.9.0",
  "features": [
    "node_selector"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:25:35.436Z" name="free/search.aggregation - /free/search.aggregation/80_typed_keys.yml" time="4" tests="13" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:35.436Z" name="Test typed keys parameter for avg aggregation" time="0"/>
    <testcase id="2021-05-31T10:25:35.711Z" name="Test typed keys parameter for cardinality aggregation" time="0"/>
    <testcase id="2021-05-31T10:25:35.992Z" name="Test typed keys parameter for extended_stats aggregation" time="0"/>
    <testcase id="2021-05-31T10:25:36.271Z" name="Test typed keys parameter for max aggregation" time="0"/>
    <testcase id="2021-05-31T10:25:36.559Z" name="Test typed keys parameter for min aggregation" time="0"/>
    <testcase id="2021-05-31T10:25:36.846Z" name="Test typed keys parameter for percentiles aggregation" time="0"/>
    <testcase id="2021-05-31T10:25:37.135Z" name="Test typed keys parameter for percentile_ranks aggregation" time="0"/>
    <testcase id="2021-05-31T10:25:37.406Z" name="Test typed keys parameter for stats aggregation" time="0"/>
    <testcase id="2021-05-31T10:25:37.689Z" name="Test typed keys parameter for sum aggregation" time="0"/>
    <testcase id="2021-05-31T10:25:37.976Z" name="Test typed keys parameter for terms and top_hits aggregation" time="0"/>
    <testcase id="2021-05-31T10:25:38.253Z" name="Test typed keys parameter for terms aggregation" time="0"/>
    <testcase id="2021-05-31T10:25:38.528Z" name="Test typed keys parameter for value_count aggregation" time="0"/>
    <testcase id="2021-05-31T10:25:38.818Z" name="Test typed keys parameter for date_histogram aggregation and max_bucket pipeline aggregation" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:39.104Z" name="free/search.aggregation - /free/search.aggregation/90_sig_text.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:39.104Z" name="Default index" time="0"/>
    <testcase id="2021-05-31T10:25:39.453Z" name="Dedup noise" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:39.746Z" name="free/search.highlight - /free/search.highlight/10_unified.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:39.746Z" name="Basic multi_match query" time="0"/>
    <testcase id="2021-05-31T10:25:40.061Z" name="Basic combined_fields query" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:40.333Z" name="free/search.highlight - /free/search.highlight/20_fvh.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:40.333Z" name="Highlight query" time="0"/>
    <testcase id="2021-05-31T10:25:40.602Z" name="Highlight multiple documents" time="0"/>
    <testcase id="2021-05-31T10:25:40.882Z" name="Highlight multiple nested documents" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:41.167Z" name="free/search.highlight - /free/search.highlight/30_max_analyzed_offset.yml" time="2" tests="8" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:41.167Z" name="Unified highlighter on a field WITHOUT OFFSETS exceeding index.highlight.max_analyzed_offset should FAIL" time="0"/>
    <testcase id="2021-05-31T10:25:41.426Z" name="Unified highlighter on a field WITHOUT OFFSETS exceeding index.highlight.max_analyzed_offset with max_analyzed_offset=20 should SUCCEED" time="0"/>
    <testcase id="2021-05-31T10:25:41.697Z" name="Plain highlighter on a field WITHOUT OFFSETS exceeding index.highlight.max_analyzed_offset should FAIL" time="0"/>
    <testcase id="2021-05-31T10:25:41.998Z" name="Plain highlighter on a field WITHOUT OFFSETS exceeding index.highlight.max_analyzed_offset with max_analyzed_offset=20 should SUCCEED" time="0"/>
    <testcase id="2021-05-31T10:25:42.299Z" name="Unified highlighter on a field WITH OFFSETS exceeding index.highlight.max_analyzed_offset should SUCCEED" time="0"/>
    <testcase id="2021-05-31T10:25:42.580Z" name="Plain highlighter on a field WITH OFFSETS exceeding index.highlight.max_analyzed_offset should FAIL" time="0"/>
    <testcase id="2021-05-31T10:25:42.862Z" name="Plain highlighter on a field WITH OFFSETS exceeding index.highlight.max_analyzed_offset with max_analyzed_offset=20 should SUCCEED" time="0"/>
    <testcase id="2021-05-31T10:25:43.127Z" name="Plain highlighter with max_analyzed_offset &lt; 0 should FAIL" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:43.435Z" name="free/search.highlight - /free/search.highlight/40_keyword_ignore.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:43.435Z" name="Plain Highligher should skip highlighting ignored keyword values" time="0"/>
    <testcase id="2021-05-31T10:25:43.734Z" name="Unified Highligher should skip highlighting ignored keyword values" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:43.995Z" name="free/search.inner_hits - /free/search.inner_hits/10_basic.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:43.995Z" name="Nested inner hits" time="0"/>
    <testcase id="2021-05-31T10:25:44.323Z" name="Nested doc version and seqIDs" time="0"/>
    <testcase id="2021-05-31T10:25:44.665Z" name="Inner hits with disabled _source" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:45.087Z" name="free/search.inner_hits - /free/search.inner_hits/20_highlighting.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:45.087Z" name="Unified highlighter" time="0"/>
    <testcase id="2021-05-31T10:25:45.411Z" name="Unified highlighter with stored fields" time="0"/>
    <testcase id="2021-05-31T10:25:45.689Z" name="Unified highlighter with stored fields and disabled source" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:46.085Z" name="free/search_shards - /free/search_shards/10_basic.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:46.085Z" name="Basic /_search_shards test" time="0"/>
    <testcase id="2021-05-31T10:25:46.340Z" name="Search shards aliases with and without filters" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:46.539Z" name="free/snapshot.clone - /free/snapshot.clone/10_basic.yml" time="1" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:46.539Z" name="Clone a snapshot" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:47.467Z" name="free/snapshot.create - /free/snapshot.create/10_basic.yml" time="2" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:47.467Z" name="Create a snapshot" time="1"/>
    <testcase id="2021-05-31T10:25:48.132Z" name="Create a snapshot and clean up repository" time="1"/>
    <testcase id="2021-05-31T10:25:48.972Z" name="Create a snapshot for missing index" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:49.593Z" name="free/snapshot.get - /free/snapshot.get/10_basic.yml" time="4" tests="7" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:49.593Z" name="Get snapshot info" time="1"/>
    <testcase id="2021-05-31T10:25:50.236Z" name="Get missing snapshot info throws an exception" time="0"/>
    <testcase id="2021-05-31T10:25:50.503Z" name="Get missing snapshot info succeeds when ignore_unavailable is true" time="0"/>
    <testcase id="2021-05-31T10:25:50.755Z" name="Get snapshot info when verbose is false" time="1"/>
    <testcase id="2021-05-31T10:25:51.392Z" name="Get snapshot info contains include_global_state" time="1"/>
    <testcase id="2021-05-31T10:25:52.248Z" name="Get snapshot info with metadata" time="1"/>
    <testcase id="2021-05-31T10:25:52.847Z" name="Get snapshot info with index details" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:53.516Z" name="free/snapshot.get_repository - /free/snapshot.get_repository/10_basic.yml" time="2" tests="5" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:53.516Z" name="Get all repositories" time="0"/>
    <testcase id="2021-05-31T10:25:53.928Z" name="Get repository by name" time="0"/>
    <testcase id="2021-05-31T10:25:54.263Z" name="Get missing repository by name" time="0"/>
    <testcase id="2021-05-31T10:25:54.603Z" name="Get all repositories with local flag" time="0"/>
    <testcase id="2021-05-31T10:25:54.958Z" name="Verify created repository" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:55.325Z" name="free/snapshot.get_repository - /free/snapshot.get_repository/20_repository_uuid.yml" time="1" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:55.325Z" name="Get repository returns UUID" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:56.150Z" name="free/snapshot.restore - /free/snapshot.restore/10_basic.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:25:56.150Z" name="Create a snapshot and then restore it" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:25:56.589Z" name="free/snapshot.status - /free/snapshot.status/10_basic.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:56.590Z" name="Get snapshot status" time="1"/>
    <testcase id="2021-05-31T10:25:57.186Z" name="Get missing snapshot status throws an exception" time="0"/>
    <testcase id="2021-05-31T10:25:57.435Z" name="Get missing snapshot status succeeds when ignoreUnavailable is true" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:57.686Z" name="free/suggest - /free/suggest/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:57.686Z" name="Basic tests for suggest API" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:57.987Z" name="free/suggest - /free/suggest/20_completion.yml" time="2" tests="7" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:57.987Z" name="Simple suggestion should work" time="0"/>
    <testcase id="2021-05-31T10:25:58.258Z" name="Simple suggestion array should work" time="0"/>
    <testcase id="2021-05-31T10:25:58.516Z" name="Suggestion entry should work" time="0"/>
    <testcase id="2021-05-31T10:25:58.785Z" name="Suggestion entry array should work" time="0"/>
    <testcase id="2021-05-31T10:25:59.063Z" name="Multiple Completion fields should work" time="0"/>
    <testcase id="2021-05-31T10:25:59.324Z" name="Suggestions with source should work" time="0"/>
    <testcase id="2021-05-31T10:25:59.623Z" name="Skip duplicates should work" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:25:59.883Z" name="free/suggest - /free/suggest/30_context.yml" time="2" tests="6" failures="0" skipped="0">
    <testcase id="2021-05-31T10:25:59.883Z" name="Simple context suggestion should work" time="0"/>
    <testcase id="2021-05-31T10:26:00.172Z" name="Category suggest context from path should work" time="0"/>
    <testcase id="2021-05-31T10:26:00.480Z" name="Geo suggest should work" time="0"/>
    <testcase id="2021-05-31T10:26:00.749Z" name="Multi contexts should work" time="0"/>
    <testcase id="2021-05-31T10:26:01.057Z" name="Skip duplicates with contexts should work" time="0"/>
    <testcase id="2021-05-31T10:26:01.343Z" name="Indexing and Querying without contexts is forbidden" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:01.621Z" name="free/suggest - /free/suggest/40_typed_keys.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:01.621Z" name="Test typed keys parameter for suggesters" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:01.928Z" name="free/suggest - /free/suggest/50_completion_with_multi_fields.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:01.928Z" name="Search by suggestion and by keyword sub-field should work" time="0"/>
    <testcase id="2021-05-31T10:26:02.241Z" name="Search by suggestion on sub field should work" time="0"/>
    <testcase id="2021-05-31T10:26:02.513Z" name="Search by suggestion on sub field with context should work" time="0"/>
    <testcase id="2021-05-31T10:26:02.784Z" name="Search by suggestion on sub field with weight should work" time="0"/>
    <testcase id="2021-05-31T10:26:03.069Z" name="Search by suggestion on geofield-hash on sub field should work" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:03.332Z" name="free/tasks.cancel - /free/tasks.cancel/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:03.332Z" name="tasks_cancel test" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:03.477Z" name="free/tasks.get - /free/tasks.get/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:03.477Z" name="get task test" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:03.618Z" name="free/tasks.list - /free/tasks.list/10_basic.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:03.618Z" name="tasks_list test" time="0"/>
    <testcase id="2021-05-31T10:26:03.767Z" name="tasks_list headers" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:03.896Z" name="free/termvectors - /free/termvectors/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:03.897Z" name="Basic tests for termvector get" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:04.166Z" name="free/termvectors - /free/termvectors/11_basic_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:04.166Z" name="Basic tests for termvector get" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:04.427Z" name="free/termvectors - /free/termvectors/20_issue7121.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:04.427Z" name="Term vector API should return 'found: false' for docs between index and refresh" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:04.703Z" name="free/termvectors - /free/termvectors/21_issue7121_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:04.704Z" name="Term vector API should return 'found: false' for docs between index and refresh" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:04.981Z" name="free/termvectors - /free/termvectors/30_realtime.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:04.981Z" name="Realtime Term Vectors" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:05.303Z" name="free/termvectors - /free/termvectors/31_realtime_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:05.303Z" name="Realtime Term Vectors" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:05.617Z" name="free/termvectors - /free/termvectors/50_mix_typeless_typeful.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:05.617Z" name="Term vectors with typeless API on an index that has types" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:05.883Z" name="free/update - /free/update/10_doc.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:05.883Z" name="Partial document" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:06.181Z" name="free/update - /free/update/11_shard_header.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:06.181Z" name="Update check shard header" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:06.506Z" name="free/update - /free/update/12_result.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:06.506Z" name="Update result field" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:06.818Z" name="free/update - /free/update/13_legacy_doc.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:06.818Z" name="Partial document" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:07.150Z" name="free/update - /free/update/14_shard_header_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:07.150Z" name="Update check shard header" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:07.517Z" name="free/update - /free/update/15_result_with_types.yml" time="1" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:07.517Z" name="Update result field" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:08.062Z" name="free/update - /free/update/16_noop.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:08.062Z" name="Noop" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:08.390Z" name="free/update - /free/update/20_doc_upsert.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:08.390Z" name="Doc upsert" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:08.757Z" name="free/update - /free/update/21_doc_upsert_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:08.757Z" name="Doc upsert" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:09.112Z" name="free/update - /free/update/22_doc_as_upsert.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:09.112Z" name="Doc as upsert" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:09.456Z" name="free/update - /free/update/24_doc_as_upsert_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:09.456Z" name="Doc as upsert" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:09.743Z" name="free/update - /free/update/35_if_seq_no.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:09.743Z" name="Update with if_seq_no" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:10.051Z" name="free/update - /free/update/40_routing.yml" time="1" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:10.052Z" name="Routing" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:10.626Z" name="free/update - /free/update/41_routing_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:10.626Z" name="Routing" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:11.045Z" name="free/update - /free/update/60_refresh.yml" time="2" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:11.045Z" name="Refresh" time="0"/>
    <testcase id="2021-05-31T10:26:11.393Z" name="When refresh url parameter is an empty string that means &quot;refresh immediately&quot;" time="0"/>
    <testcase id="2021-05-31T10:26:11.731Z" name="refresh=wait_for waits until changes are visible in search" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:12.939Z" name="free/update - /free/update/61_refresh_with_types.yml" time="2" tests="3" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:12.939Z" name="Refresh" time="0"/>
    <testcase id="2021-05-31T10:26:13.278Z" name="When refresh url parameter is an empty string that means &quot;refresh immediately&quot;" time="0"/>
    <testcase id="2021-05-31T10:26:13.622Z" name="refresh=wait_for waits until changes are visible in search" time="1"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:14.838Z" name="free/update - /free/update/80_source_filtering.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:14.838Z" name="Source filtering" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:15.162Z" name="free/update - /free/update/81_source_filtering_with_types.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:15.162Z" name="Source filtering" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:15.446Z" name="free/update - /free/update/85_fields_meta.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:26:15.446Z" name="Metadata Fields" time="0">
      <skipped>{
  "version": "all",
  "reason": "Update doesn't return metadata fields, waiting for #3259"
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:26:15.579Z" name="free/update - /free/update/86_fields_meta_with_types.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2021-05-31T10:26:15.579Z" name="Metadata Fields" time="0">
      <skipped>{
  "version": "all",
  "reason": "Update doesn't return metadata fields, waiting for #3259"
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2021-05-31T10:26:15.706Z" name="free/update - /free/update/90_error.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:15.706Z" name="Misspelled fields get &quot;did you mean&quot;" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:15.838Z" name="free/update - /free/update/90_mix_typeless_typeful.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:15.838Z" name="Update with typeless API on an index that has types" time="0"/>
    <testcase id="2021-05-31T10:26:16.109Z" name="Update call that introduces new field mappings" time="0"/>
  </testsuite>
  <testsuite id="2021-05-31T10:26:16.408Z" name="free/update - /free/update/95_require_alias.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2021-05-31T10:26:16.408Z" name="Set require_alias flag" time="0"/>
  </testsuite>
</testsuites>