{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimseonjin\\\\Documents\\\\GitHub\\\\HappyHouse-Guide\\\\front-end\\\\src\\\\source\\\\ReadCommunity.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; //import '../Css/test.css';\n//import DeleteReply from './DeleteReply.js';\n//import CreateReply from './CreateReply.js';\n\nimport $ from 'jquery';\nimport { Button, Col, Container, Form, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Modal, ModalHeader, Row, Table } from 'reactstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReadCommunity(props) {\n  _s();\n\n  const [postId, setPostId] = useState(props.postId);\n  const [writerId, setWriterId] = useState();\n  const [writeDate, setWriteDate] = useState();\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState(); //게시글 상세조회    \n\n  const [reply, setReply] = useState(); //댓글작성내용\n\n  const [modalInput, setModalInput] = useState(\"default\");\n  const [tableData, setTableData] = useState(); //댓글 목록 조회 \n\n  const [isReadOnly, setIsReadOnly] = useState(true); //댓글 수정활성화\n\n  const [modalCreateReply, setModalCreateReply] = useState(false);\n  const [modalDeleteReply, setModalDeleteReply] = useState(false);\n\n  const toggleCreateReply = () => setModalCreateReply(!modalCreateReply);\n\n  const toggleDeleteReply = () => setModalDeleteReply(!modalDeleteReply);\n\n  let replyArrays = []; //댓글 목록 테이블\n\n  function setReplyArrays(newArrays) {\n    replyArrays = newArrays;\n  }\n\n  const renderInput = (replyArray, index) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"hidden\",\n        value: replyArray.postId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: replyArray.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: replyArray.writerId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: replyArray.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"text-nowrap\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"createReplyButton\",\n          children: \"댓글\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"deleteReplyButton\",\n          children: \"삭제\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this) //<td className=\"text-nowrap\"><Button className={\"deleteReplyButton\"} color={\"primary\"} >{\"수정\"}</Button></td>  \n    ; //<h1>props.activityHistoryCode : {activityHistoryCode}</h1>\n  }; //댓글 목록 조회시 보일것 (댓글작성자, 댓글내용, 댓글 작성날짜)\n\n\n  const handlePostIdOnChange = e => {\n    e.preventDefault();\n    setPostId(e.target.value);\n  };\n\n  const handleReplyOnChange = e => {\n    e.preventDefault();\n    setReply(e.target.value);\n  };\n\n  const handleWriterIdOnChange = e => {\n    e.preventDefault();\n    setWriterId(e.target.value);\n  };\n\n  const handleWriteDateOnChange = e => {\n    e.preventDefault();\n    setWriteDate(e.target.value);\n  };\n\n  const handleTitleOnChange = e => {\n    e.preventDefault();\n    setTitle(e.target.value);\n  };\n\n  const handleContentOnChange = e => {\n    e.preventDefault();\n    setContent(e.target.value);\n  };\n\n  const toggleIsReadOnly = () => {\n    setIsReadOnly(!isReadOnly);\n  };\n\n  const readPostInfo = () => {\n    var form = new FormData();\n    form.append(\"postId\", postId);\n    axios.post('/community/readPostInfo', form, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }).then(response => {\n      setWriterId(response.data.writerId);\n      setWriteDate(response.data.writeDate);\n      setTitle(response.data.title);\n      setContent(response.data.content);\n    });\n  };\n\n  function getReplyList(form) {\n    var form = new FormData();\n    form.append(\"postId\", postId);\n    axios.post('/community/readReply', form).then(response => {\n      setReplyArrays(response.data);\n      setTableData(replyArrays.map(renderInput));\n    });\n  }\n\n  const updatePost = () => {\n    var form = new FormData();\n    form.append(\"postId\", postId);\n    form.append(\"title\", title);\n    form.append(\"content\", content);\n    axios.post('/community/updatePost', form, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }).then(response => {\n      window.location.reload();\n    });\n  };\n\n  const createReply = () => {\n    var form = new FormData();\n    form.append('userToken', localStorage.getItem(\"userToken\"));\n    form.append('postId', postId);\n    form.append('reply', reply);\n    axios.post(\"/community/createReply\", form, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }).then(response => {\n      window.location.reload();\n    });\n  };\n\n  const deletePost = () => {\n    var form = new FormData();\n    form.append('postId', postId);\n    axios.post(\"/community/deletePost\", form, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }).then(response => {\n      window.location.reload();\n    });\n  };\n\n  $(function () {\n    $(\".deleteReply\").off(\"click\");\n    $(\".deleteReplyButton\").on(\"click\", function () {\n      var postButton = $(this);\n      var tr = postButton.parent().parent();\n      var td = tr.children();\n      console.log(\"row데이터 : \" + tr.eq(0).text());\n      setModalInput(td.eq(0).val());\n      toggleDeleteReply();\n    });\n    $(\".createReply\").off(\"click\");\n    $(\".createReplyButton\").on(\"click\", function () {\n      var postButton = $(this);\n      var tr = postButton.parent().parent();\n      var td = tr.children();\n      console.log(\"row데이터 : \" + tr.eq(0).text());\n      setModalInput(td.eq(0).val());\n      toggleCreateReply();\n    });\n  });\n  useEffect(() => {\n    var form = new FormData();\n    form.append(\"id\", localStorage.getItem('id'));\n    readPostInfo(); //게시글 상세조회\n\n    getReplyList(form); //댓글 목록조회\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n          type: \"hidden\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"textarea\",\n            name: \"postId\",\n            type: \"hidden\",\n            onChange: handlePostIdOnChange,\n            value: postId,\n            readOnly: isReadOnly\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n            addonType: \"prepend\",\n            children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n              children: \"\\uC791\\uC131\\uC790ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"textarea\",\n            name: \"writerId\",\n            placeholder: \"\\uC791\\uC131\\uC790id\",\n            onChange: handleWriterIdOnChange,\n            value: writerId,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n            addonType: \"prepend\",\n            children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n              children: \"\\uC791\\uC131\\uB0A0\\uC9DC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"textarea\",\n            name: \"writeDate\",\n            placeholder: \"\\uC791\\uC131\\uB0A0\\uC9DC\",\n            onChange: handleWriteDateOnChange,\n            value: writeDate,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n            addonType: \"prepend\",\n            children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n              children: \"\\uC81C\\uBAA9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"textarea\",\n            name: \"title\",\n            placeholder: \"\\uC81C\\uBAA9\",\n            onChange: handleTitleOnChange,\n            value: title,\n            readOnly: isReadOnly\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n            addonType: \"prepend\",\n            children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n              children: \"\\uB0B4\\uC6A9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"textarea\",\n            name: \"content\",\n            cols: \"50\",\n            rows: \"10\",\n            placeholder: \"\\uB0B4\\uC6A9\",\n            onChange: handleContentOnChange,\n            value: content,\n            readOnly: isReadOnly\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleIsReadOnly,\n      children: \"\\uC218\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"hidden\",\n      color: \"primary\",\n      onClick: updatePost,\n      children: \"\\uC644\\uB8CC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      onClick: deletePost,\n      style: {\n        float: 'right'\n      },\n      children: \"\\uC0AD\\uC81C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-nowrap\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uB313\\uAE00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC791\\uC131\\uC790\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uB0B4\\uC6A9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tableData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n        addonType: \"prepend\",\n        children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n          children: \"\\uB313\\uAE00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"textarea\",\n        name: \"content\",\n        placeholder: \"\\uB313\\uAE00\",\n        onChange: handleReplyOnChange,\n        value: reply\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn btn-primary btn-block w-25\",\n      color: \"primary\",\n      style: {\n        float: 'right'\n      },\n      type: \"post\",\n      onClick: createReply,\n      children: \"댓글작성\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ReadCommunity, \"0f4HmMwPxrhVKarEERHDYiWiLZ8=\");\n\n_c = ReadCommunity;\nexport default ReadCommunity;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadCommunity\");","map":{"version":3,"sources":["C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/src/source/ReadCommunity.js"],"names":["React","useEffect","useState","$","Button","Col","Container","Form","FormGroup","Input","InputGroup","InputGroupAddon","InputGroupText","Modal","ModalHeader","Row","Table","axios","ReadCommunity","props","postId","setPostId","writerId","setWriterId","writeDate","setWriteDate","title","setTitle","content","setContent","reply","setReply","modalInput","setModalInput","tableData","setTableData","isReadOnly","setIsReadOnly","modalCreateReply","setModalCreateReply","modalDeleteReply","setModalDeleteReply","toggleCreateReply","toggleDeleteReply","replyArrays","setReplyArrays","newArrays","renderInput","replyArray","index","handlePostIdOnChange","e","preventDefault","target","value","handleReplyOnChange","handleWriterIdOnChange","handleWriteDateOnChange","handleTitleOnChange","handleContentOnChange","toggleIsReadOnly","readPostInfo","form","FormData","append","post","headers","then","response","data","getReplyList","map","updatePost","window","location","reload","createReply","localStorage","getItem","deletePost","off","on","postButton","tr","parent","td","children","console","log","eq","text","val","float"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\n//import '../Css/test.css';\r\n//import DeleteReply from './DeleteReply.js';\r\n//import CreateReply from './CreateReply.js';\r\nimport $ from 'jquery';\r\nimport {\r\n    Button,\r\n    Col,\r\n    Container,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    Modal,\r\n    ModalHeader,\r\n    Row,\r\n    Table\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction ReadCommunity(props){\r\n\r\n    const [postId, setPostId] = useState(\r\n        props.postId\r\n    );\r\n    \r\n    const [writerId, setWriterId] = useState();\r\n    const [writeDate, setWriteDate] =useState();    \r\n    const [title, setTitle] = useState();\r\n\r\n    const [content, setContent] = useState();  //게시글 상세조회    \r\n    const [reply, setReply] = useState();  //댓글작성내용\r\n    const [modalInput, setModalInput] = useState(\"default\");  \r\n    const [tableData, setTableData] = useState(); //댓글 목록 조회 \r\n    const [isReadOnly, setIsReadOnly] = useState(true); //댓글 수정활성화\r\n    \r\n    \r\n    const [modalCreateReply, setModalCreateReply] =useState(false);    \r\n    const [modalDeleteReply, setModalDeleteReply] = useState(false);  \r\n\r\n    \r\n    const toggleCreateReply = () => setModalCreateReply(!modalCreateReply);\r\n    const toggleDeleteReply = () => setModalDeleteReply(!modalDeleteReply);\r\n    \r\n    let replyArrays = [];  //댓글 목록 테이블\r\n    function setReplyArrays(newArrays) {replyArrays = newArrays;}\r\n    const renderInput = (replyArray, index) => {\r\n        \r\n        return (\r\n            \r\n            <tr key={index} >\r\n                <Input type=\"hidden\" value={replyArray.postId}></Input>\r\n                <td>{replyArray.title}</td>\r\n                <td>{replyArray.writerId}</td>\r\n                <td>{replyArray.content}</td>                    \r\n                <td className=\"text-nowrap\">\r\n                    <Button className={\"createReplyButton\"}  >{\"댓글\"}</Button> \r\n                    <Button className={\"deleteReplyButton\"}  >{\"삭제\"}</Button>\r\n                </td>          \r\n            </tr>\r\n            \r\n            //<td className=\"text-nowrap\"><Button className={\"deleteReplyButton\"} color={\"primary\"} >{\"수정\"}</Button></td>  \r\n        ) //<h1>props.activityHistoryCode : {activityHistoryCode}</h1>\r\n    }//댓글 목록 조회시 보일것 (댓글작성자, 댓글내용, 댓글 작성날짜)\r\n   \r\n    const handlePostIdOnChange = (e) => {\r\n        e.preventDefault();\r\n        setPostId(e.target.value);\r\n    }\r\n    const handleReplyOnChange = (e) => {\r\n        e.preventDefault();\r\n        setReply(e.target.value);\r\n    }\r\n    const handleWriterIdOnChange = (e) => {\r\n        e.preventDefault();\r\n        setWriterId(e.target.value);\r\n    }\r\n    const handleWriteDateOnChange = (e) => {\r\n        e.preventDefault();\r\n        setWriteDate(e.target.value);\r\n    }\r\n    const handleTitleOnChange = (e) => {\r\n        e.preventDefault();\r\n        setTitle(e.target.value);\r\n    }\r\n    const handleContentOnChange = (e) => {\r\n        e.preventDefault();\r\n        setContent(e.target.value);\r\n    }\r\n\r\n    const toggleIsReadOnly = () => {\r\n        setIsReadOnly(!isReadOnly);\r\n    }\r\n\r\n    const readPostInfo = () => { \r\n        var form = new FormData;\r\n        form.append(\"postId\", postId);\r\n        axios.post('/community/readPostInfo',form, {headers: {'content-type':'multipart/form-data'}}).then((response)=>{\r\n            setWriterId(response.data.writerId);\r\n            setWriteDate(response.data.writeDate);    \r\n            setTitle(response.data.title);\r\n            setContent(response.data.content);           \r\n        })\r\n    }\r\n    function getReplyList(form) {\r\n        var form = new FormData;\r\n        \r\n        form.append(\"postId\", postId);\r\n        axios.post('/community/readReply', form).then((response) => {\r\n         \r\n                setReplyArrays(response.data);\r\n                setTableData(replyArrays.map(renderInput));\r\n            });\r\n    }  \r\n    const updatePost = () => {\r\n        var form = new FormData;\r\n      \r\n        form.append(\"postId\", postId);\r\n        form.append(\"title\",title);\r\n        form.append(\"content\",content);       \r\n\r\n        axios\r\n            .post('/community/updatePost', form,{headers: {'content-type':'multipart/form-data'}})\r\n            .then((response) => {\r\n                window.location.reload();\r\n            })\r\n    }    \r\n    const createReply = () =>{\r\n        var form = new FormData;      \r\n        form.append('userToken', localStorage.getItem(\"userToken\"));\r\n        form.append('postId', postId);\r\n        form.append('reply',reply);\r\n        axios.post(\"/community/createReply\", form,{headers: {'content-type':'multipart/form-data'}})\r\n        .then((response)=>{\r\n        \r\n            window.location.reload();\r\n     \r\n     })\r\n    }\r\n\r\n    const deletePost = () =>{\r\n        var form = new FormData;      \r\n       \r\n        form.append('postId', postId);\r\n       \r\n        axios.post(\"/community/deletePost\", form,{headers: {'content-type':'multipart/form-data'}})\r\n        .then((response)=>{\r\n        \r\n            window.location.reload();\r\n     \r\n     })\r\n    }\r\n  \r\n    $(function() { \r\n\r\n        \r\n        $(\".deleteReply\").off(\"click\")\r\n            $(\".deleteReplyButton\").on(\"click\",function(){\r\n      \r\n                var postButton = $(this);\r\n    \r\n                var tr = postButton.parent().parent();\r\n                var td = tr.children();\r\n                console.log(\"row데이터 : \"+tr.eq(0).text());\r\n                setModalInput(td.eq(0).val());\r\n                toggleDeleteReply();\r\n            }\r\n            )\r\n            \r\n            $(\".createReply\").off(\"click\")\r\n            $(\".createReplyButton\").on(\"click\",function(){\r\n      \r\n                var postButton = $(this);\r\n    \r\n                var tr = postButton.parent().parent();\r\n                var td = tr.children();\r\n                console.log(\"row데이터 : \"+tr.eq(0).text());\r\n                setModalInput(td.eq(0).val());\r\n                toggleCreateReply();\r\n            }\r\n            )  \r\n        }\r\n        \r\n    )\r\n    useEffect(() => {\r\n        var form = new FormData;\r\n        form.append(\"id\", localStorage.getItem('id'));\r\n        readPostInfo();   //게시글 상세조회\r\n        getReplyList(form); //댓글 목록조회\r\n        },[]\r\n    )\r\n    return (\r\n        <div className=\"container\">        \r\n            <Form>\r\n                <FormGroup>\r\n                    <InputGroup type=\"hidden\">\r\n                       \r\n                        <Input type=\"textarea\" name=\"postId\" type=\"hidden\" onChange={handlePostIdOnChange} value={postId} readOnly={isReadOnly}></Input>\r\n                    </InputGroup>\r\n                    <InputGroup>\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>작성자ID</InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input type=\"textarea\" name=\"writerId\" placeholder=\"작성자id\" onChange={handleWriterIdOnChange} value={writerId} readOnly={true} ></Input>\r\n                    </InputGroup>\r\n\r\n                    <InputGroup>\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>작성날짜</InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input type=\"textarea\" name=\"writeDate\" placeholder=\"작성날짜\" onChange={handleWriteDateOnChange} value={writeDate} readOnly={true}></Input>\r\n                    </InputGroup>\r\n\r\n                    <InputGroup>\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>제목</InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input type=\"textarea\" name=\"title\" placeholder=\"제목\" onChange={handleTitleOnChange} value={title} readOnly={isReadOnly}></Input>\r\n                    </InputGroup>\r\n\r\n                    <InputGroup >\r\n                        <InputGroupAddon addonType=\"prepend\"  >\r\n                            <InputGroupText >내용</InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input type=\"textarea\" name=\"content\" cols=\"50\" rows=\"10\" placeholder=\"내용\" onChange={handleContentOnChange} value={content} readOnly={isReadOnly}></Input>\r\n                    </InputGroup>          \r\n                </FormGroup>\r\n            </Form>\r\n\r\n            <Button onClick={toggleIsReadOnly}>수정</Button>\r\n            <Button type=\"hidden\" color=\"primary\" onClick={updatePost} >완료</Button>\r\n            <Button color=\"primary\" onClick={deletePost}  style={{float: 'right'}}>삭제</Button>\r\n            \r\n            <hr></hr>\r\n \r\n            <Row>                \r\n                {/*댓글 목록 테이블*/}\r\n                <Col>\r\n                    <Table>                    \r\n                        <thead className=\"text-nowrap\">                           \r\n                            <tr>       \r\n                                <th>댓글</th>             \r\n                                <th>작성자</th>\r\n                                <th>내용</th>                                                        \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody >                        \r\n                            {tableData}                            \r\n                        </tbody>\r\n                    </Table>                    \r\n                </Col>\r\n            </Row>\r\n            {/* <Modal isOpen={modalCreateReply}>\r\n                        <ModalHeader toggle={toggleCreateReply}>댓글 등록</ModalHeader>\r\n                       \r\n                         <CreateReply postId={modalInput}></CreateReply>                         \r\n            </Modal>\r\n            <Modal isOpen={modalDeleteReply}>\r\n                        <ModalHeader toggle={toggleDeleteReply}>댓글 삭제</ModalHeader>\r\n                       \r\n                         <DeleteReply postId={modalInput}></DeleteReply>                         \r\n            </Modal> */}\r\n            <InputGroup>\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>댓글</InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input type=\"textarea\" name=\"content\" placeholder=\"댓글\" onChange={handleReplyOnChange} value={reply}></Input>\r\n            </InputGroup>                        \r\n            <Button className=\"btn btn-primary btn-block w-25\" color={\"primary\"} style={{float: 'right'}}   type=\"post\" onClick={createReply}>{\"댓글작성\"}</Button>\r\n            \r\n            </div>            \r\n    )\r\n}\r\nexport default ReadCommunity;\r\n"]},"metadata":{},"sourceType":"module"}