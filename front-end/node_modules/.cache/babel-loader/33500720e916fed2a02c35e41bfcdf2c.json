{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.arePathsEqual = mod.exports;\n  }\n})(this, function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n  /**\r\n   * Compares two path arrays of LatLng objects.\r\n   */\n\n\n  var arePathsEqual = exports.arePathsEqual = function arePathsEqual(pathA, pathB) {\n    if (pathA === pathB) {\n      return true;\n    }\n\n    if (!Array.isArray(pathA) || !Array.isArray(pathB)) {\n      return false;\n    }\n\n    if (pathA.length !== pathB.length) {\n      return false;\n    }\n\n    for (var i = 0; i < pathA.length; ++i) {\n      if (pathA[i] === pathB[i]) {\n        continue;\n      }\n\n      if (!isValidLatLng(pathA[i]) || !isValidLatLng(pathB[i])) {\n        return false;\n      }\n\n      if (pathB[i].lat !== pathA[i].lat || pathB[i].lng !== pathA[i].lng) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\r\n   * Helper that checks whether an array consists of objects\r\n   * with lat and lng properties\r\n   * @param {object} elem the element to check\r\n   * @returns {boolean} whether or not it's valid\r\n   */\n\n\n  var isValidLatLng = function isValidLatLng(elem) {\n    return elem !== null && (typeof elem === 'undefined' ? 'undefined' : _typeof(elem)) === 'object' && elem.hasOwnProperty('lat') && elem.hasOwnProperty('lng');\n  };\n});","map":{"version":3,"sources":["C:/Users/박성현/Documents/GitHub/HappyHouse-Guide/front-end/node_modules/google-maps-react/dist/lib/arePathsEqual.js"],"names":["global","factory","define","amd","exports","mod","arePathsEqual","Object","defineProperty","value","_typeof","Symbol","iterator","obj","constructor","prototype","pathA","pathB","Array","isArray","length","i","isValidLatLng","lat","lng","elem","hasOwnProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\r\n  if (typeof define === \"function\" && define.amd) {\r\n    define(['exports'], factory);\r\n  } else if (typeof exports !== \"undefined\") {\r\n    factory(exports);\r\n  } else {\r\n    var mod = {\r\n      exports: {}\r\n    };\r\n    factory(mod.exports);\r\n    global.arePathsEqual = mod.exports;\r\n  }\r\n})(this, function (exports) {\r\n  'use strict';\r\n\r\n  Object.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n  });\r\n\r\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\r\n    return typeof obj;\r\n  } : function (obj) {\r\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\r\n  };\r\n\r\n  /**\r\n   * Compares two path arrays of LatLng objects.\r\n   */\r\n\r\n  var arePathsEqual = exports.arePathsEqual = function arePathsEqual(pathA, pathB) {\r\n    if (pathA === pathB) {\r\n      return true;\r\n    }\r\n    if (!Array.isArray(pathA) || !Array.isArray(pathB)) {\r\n      return false;\r\n    }\r\n    if (pathA.length !== pathB.length) {\r\n      return false;\r\n    }\r\n    for (var i = 0; i < pathA.length; ++i) {\r\n      if (pathA[i] === pathB[i]) {\r\n        continue;\r\n      }\r\n      if (!isValidLatLng(pathA[i]) || !isValidLatLng(pathB[i])) {\r\n        return false;\r\n      }\r\n      if (pathB[i].lat !== pathA[i].lat || pathB[i].lng !== pathA[i].lng) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * Helper that checks whether an array consists of objects\r\n   * with lat and lng properties\r\n   * @param {object} elem the element to check\r\n   * @returns {boolean} whether or not it's valid\r\n   */\r\n  var isValidLatLng = function isValidLatLng(elem) {\r\n    return elem !== null && (typeof elem === 'undefined' ? 'undefined' : _typeof(elem)) === 'object' && elem.hasOwnProperty('lat') && elem.hasOwnProperty('lng');\r\n  };\r\n});"]},"metadata":{},"sourceType":"script"}