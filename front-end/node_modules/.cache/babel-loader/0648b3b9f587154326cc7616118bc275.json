{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimseonjin\\\\Documents\\\\GitHub\\\\HappyHouse-Guide\\\\front-end\\\\src\\\\source\\\\SearchBar.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = ({\n  results,\n  keyword,\n  updateField\n}) => {\n  //renders our results using the SearchPreview component\n  var updateText = text => {\n    updateField(\"keyword\", text, false);\n    updateField(\"results\", []);\n  };\n\n  var cancelSearch = () => {\n    updateField(\"keyword\", \"\");\n  };\n\n  var renderResults = results.map(({\n    position,\n    name,\n    age\n  }, index) => {\n    return /*#__PURE__*/_jsxDEV(SearchPreview, {\n      updateText: updateText,\n      index: index,\n      position: position,\n      name: name,\n      age: age\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => cancelSearch(),\n      className: `cancel-btn ${keyword.length > 0 ? \"active\" : \"inactive\"}`,\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"search-bar\",\n      placeholder: \"Search\",\n      value: keyword,\n      onChange: e => updateField(\"keyword\", e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), results.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results\",\n      children: renderResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}; //stateless component to render preview results\n\n\n_c = SearchBar;\n\nconst SearchPreview = ({\n  age,\n  name,\n  position,\n  index,\n  updateText\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => updateText(name),\n    className: `search-preview ${index == 0 ? \"start\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"first\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header\",\n        children: position\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = SearchPreview;\nexport default SearchBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchBar\");\n$RefreshReg$(_c2, \"SearchPreview\");","map":{"version":3,"sources":["C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/src/source/SearchBar.js"],"names":["React","SearchBar","results","keyword","updateField","updateText","text","cancelSearch","renderResults","map","position","name","age","index","length","e","target","value","SearchPreview"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,OAAX;AAAoBC,EAAAA;AAApB,CAAD,KAAuC;AACvD;AACA,MAAIC,UAAU,GAAGC,IAAI,IAAI;AACvBF,IAAAA,WAAW,CAAC,SAAD,EAAYE,IAAZ,EAAkB,KAAlB,CAAX;AACAF,IAAAA,WAAW,CAAC,SAAD,EAAY,EAAZ,CAAX;AACD,GAHD;;AAKA,MAAIG,YAAY,GAAG,MAAM;AACvBH,IAAAA,WAAW,CAAC,SAAD,EAAY,EAAZ,CAAX;AACD,GAFD;;AAIA,MAAII,aAAa,GAAGN,OAAO,CAACO,GAAR,CAAY,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA;AAAlB,GAAD,EAA0BC,KAA1B,KAAoC;AAClE,wBACE,QAAC,aAAD;AAEE,MAAA,UAAU,EAAER,UAFd;AAGE,MAAA,KAAK,EAAEQ,KAHT;AAIE,MAAA,QAAQ,EAAEH,QAJZ;AAKE,MAAA,IAAI,EAAEC,IALR;AAME,MAAA,GAAG,EAAEC;AANP,OACOC,KADP;AAAA;AAAA;AAAA;AAAA,YADF;AAUD,GAXmB,CAApB;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AACE,MAAA,OAAO,EAAE,MAAMN,YAAY,EAD7B;AAEE,MAAA,SAAS,EAAG,cAAaJ,OAAO,CAACW,MAAR,GAAiB,CAAjB,GAAqB,QAArB,GAAgC,UAAW,EAFtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,WAAW,EAAC,QAFd;AAGE,MAAA,KAAK,EAAEX,OAHT;AAIE,MAAA,QAAQ,EAAEY,CAAC,IAAIX,WAAW,CAAC,SAAD,EAAYW,CAAC,CAACC,MAAF,CAASC,KAArB;AAJ5B;AAAA;AAAA;AAAA;AAAA,YAPF,EAcGf,OAAO,CAACY,MAAR,GAAiB,CAAjB,gBACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBAAiCN;AAAjC;AAAA;AAAA;AAAA;AAAA,YADD,GAEG,IAhBN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA3CD,C,CA6CA;;;KA7CMP,S;;AA8CN,MAAMiB,aAAa,GAAG,CAAC;AAAEN,EAAAA,GAAF;AAAOD,EAAAA,IAAP;AAAaD,EAAAA,QAAb;AAAuBG,EAAAA,KAAvB;AAA8BR,EAAAA;AAA9B,CAAD,KAAgD;AACpE,sBACE;AACE,IAAA,OAAO,EAAE,MAAMA,UAAU,CAACM,IAAD,CAD3B;AAEE,IAAA,SAAS,EAAG,kBAAiBE,KAAK,IAAI,CAAT,GAAa,OAAb,GAAuB,EAAG,EAFzD;AAAA,2BAIE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,kBAAqBF;AAArB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA,kBAA2BD;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAhBD;;MAAMQ,a;AAkBN,eAAejB,SAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst SearchBar = ({ results, keyword, updateField }) => {\r\n  //renders our results using the SearchPreview component\r\n  var updateText = text => {\r\n    updateField(\"keyword\", text, false);\r\n    updateField(\"results\", []);\r\n  };\r\n\r\n  var cancelSearch = () => {\r\n    updateField(\"keyword\", \"\");\r\n  };\r\n\r\n  var renderResults = results.map(({ position, name, age }, index) => {\r\n    return (\r\n      <SearchPreview\r\n        key={index}\r\n        updateText={updateText}\r\n        index={index}\r\n        position={position}\r\n        name={name}\r\n        age={age}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"auto\">\r\n      <button\r\n        onClick={() => cancelSearch()}\r\n        className={`cancel-btn ${keyword.length > 0 ? \"active\" : \"inactive\"}`}\r\n      >\r\n        x\r\n      </button>\r\n      <input\r\n        className=\"search-bar\"\r\n        placeholder=\"Search\"\r\n        value={keyword}\r\n        onChange={e => updateField(\"keyword\", e.target.value)}\r\n      />\r\n\r\n      {results.length > 0 ? (\r\n        <div className=\"search-results\">{renderResults}</div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\n//stateless component to render preview results\r\nconst SearchPreview = ({ age, name, position, index, updateText }) => {\r\n  return (\r\n    <div\r\n      onClick={() => updateText(name)}\r\n      className={`search-preview ${index == 0 ? \"start\" : \"\"}`}\r\n    >\r\n      <div className=\"first\">\r\n        <p className=\"name\">{name}</p>\r\n        <p className=\"sub-header\">{position}</p>\r\n      </div>\r\n      {/* <div className=\"second\">\r\n        <p className=\"age\">{age}</p>\r\n        <p className=\"sub-header\">age</p>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}