{"ast":null,"code":"var _jsxFileName = \"/Users/suhalee/Documents/GitHub/HappyHouse-Guide/front-end/src/source/PlannedSideBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Moment from 'react-moment';\nimport HappyChart from './Chart';\nimport numeral from 'numeral';\nimport axios from 'axios';\nimport { Spinner } from 'reactstrap';\nimport './css/Sidebar.css';\nimport undo from '../Image/undo.png';\nimport like1 from '../Image/like.png';\nimport like2 from '../Image/like-toggle.png';\nimport room4 from '../Image/room4.PNG';\nimport star from '../Image/star.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlannedSideBar = props => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [typeIndex, SetTypeIndex] = useState(0);\n  const [isLike, setIsLike] = useState(false);\n  useEffect(() => {}, []);\n\n  function changeImage() {\n    var temp = document.getElementById(\"tmp\").src.includes(\"-toggle\");\n    var insertForm = {\n      userId: localStorage.getItem(\"userID\"),\n      danjiCode: props.houseDetail.danjiCode,\n      danjiName: props.houseDetail.danjiName\n    };\n    var deleteForm = {\n      userId: localStorage.getItem(\"userID\"),\n      danjiCode: props.houseDetail.danjiCode\n    };\n\n    if (temp == false) {\n      setIsLike(true);\n      axios.post('https://joj5opq81m.execute-api.us-east-2.amazonaws.com/happyhouse/dibs', insertForm).then(res => {\n        alert(\"좋아요\"); // window.location.reload();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    } else {\n      setIsLike(false);\n      axios.delete('https://joj5opq81m.execute-api.us-east-2.amazonaws.com/happyhouse/dibs', {\n        data: deleteForm\n      }).then(res => {\n        alert(\"좋아요  취소\"); // window.location.reload();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }\n\n  const typeButton = list => {\n    return list.map((data, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"typeButton\",\n      onClick: () => SetTypeIndex(index),\n      children: index\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"side-bar\",\n      id: \"sideBar\",\n      style: {\n        display: \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          style: {\n            width: '3rem',\n            height: '3rem'\n          },\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this); //   return (\n  //     <div className=\"side-bar-wrap\">\n  //       {\n  //           isLoading ?\n  //           <div className=\"side-bar\" id=\"sideBar\" style ={{display : \"none\"}}>\n  //             <div>\n  //               <Spinner style={{ width: '3rem', height: '3rem' }} color=\"primary\" />\n  //             </div>\n  //           </div>\n  //           :\n  //             <div className=\"side-bar\" id=\"sideBar\" style ={{display : \"none\"}}>\n  //                 <div className = \"beforeContent\">\n  //                 <img alt=\"sidebar hide\" src = {undo} id=\"sidebarHide\" onClick ={() => {props.toggle()}}\n  //                 className=\"toggle-menu\"\n  //                 />\n  //                 {\n  //                         isLike\n  //                         ?\n  //                         <img id = \"tmp\" alt='like' src={like2} className=\"likeImage\" onClick={() => changeImage()}/>\n  //                         :\n  //                         <img id = \"tmp\" alt='like' src={like1} className=\"likeImage\" onClick={() => changeImage()}/>\n  //                   }\n  //                 </div>\n  //               <div className=\"content\">\n  //                 </div>\n  //                 <div id = \"houseInfoSection1\">\n  //                   <table className =\"houseInfoTable1\">\n  //                     <tr> \n  //                       <td class = \"houseName\" colSpan=\"2\">{props.planned.region}</td>\n  //                     </tr>\n  //                     <tr>\n  //                       <td className =\"houseAddress\">{props.planned.address}</td>\n  //                     </tr>\n  //                   </table>\n  //                 </div>\n  //                 <div id = \"houseInfoSection2\">\n  //                       <div class = \"test2\">주택정보</div>\n  //                           {typeButton(props.planned.type)}\n  //                           <table class=\"houseInfoTable2\">\n  //                           <tr>\n  //                             </tr>\n  //                             <tr>\n  //                               <td id = \"td1\">준공일자</td>\n  //                               <td>\n  //                                 <Moment format=\"YYYY / MM / DD\">{props.planned.supply}</Moment>\n  //                               </td>\n  //                             </tr>\n  //                             <tr>\n  //                               <td id=\"td1\">주택형</td>\n  //                               <td>{props.planned.type}</td>\n  //                             </tr>\n  //                           </table>\n  //                           <HappyChart danjiName = {props.planned.region} convenience = {props.planned.convenience} safety = {props.planned.safety} medical = {props.planned.medical}/>\n  //                         </div>\n  //                     </div>\n  //           }\n  //         </div>\n  //   );\n};\n\n_s(PlannedSideBar, \"K9YOZ/9VPeAh5W+nBN66jEoWKzg=\");\n\n_c = PlannedSideBar;\nexport default _c2 = /*#__PURE__*/React.memo(PlannedSideBar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PlannedSideBar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/suhalee/Documents/GitHub/HappyHouse-Guide/front-end/src/source/PlannedSideBar.js"],"names":["React","useState","useEffect","Moment","HappyChart","numeral","axios","Spinner","undo","like1","like2","room4","star","PlannedSideBar","props","isLoading","setIsLoading","typeIndex","SetTypeIndex","isLike","setIsLike","changeImage","temp","document","getElementById","src","includes","insertForm","userId","localStorage","getItem","danjiCode","houseDetail","danjiName","deleteForm","post","then","res","alert","catch","error","console","log","delete","data","typeButton","list","map","index","display","width","height","memo"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Moment from 'react-moment'\nimport HappyChart from './Chart';\nimport numeral from 'numeral'\nimport axios from 'axios';\nimport { Spinner } from 'reactstrap';\n\nimport './css/Sidebar.css';\n\nimport undo from '../Image/undo.png'\nimport like1 from '../Image/like.png'\nimport like2 from '../Image/like-toggle.png'\nimport room4 from '../Image/room4.PNG'\nimport star from '../Image/star.png'\n\n\nconst PlannedSideBar = (props) => {\n\n    const [isLoading, setIsLoading] = useState(true)\n    const [typeIndex, SetTypeIndex] = useState(0)\n    const [isLike, setIsLike] = useState(false);\n\n    \n    useEffect(() => {\n    },[])\n\n\n    function changeImage(){\n        var temp = document.getElementById(\"tmp\").src.includes(\"-toggle\")\n        \n        var insertForm={\n          userId : localStorage.getItem(\"userID\"),\n          danjiCode : props.houseDetail.danjiCode,\n          danjiName : props.houseDetail.danjiName\n          };\n  \n          var deleteForm={\n            userId : localStorage.getItem(\"userID\"),\n            danjiCode : props.houseDetail.danjiCode,\n            };\n  \n         if(temp == false){\n          setIsLike(true)\n          \n          axios.post('https://joj5opq81m.execute-api.us-east-2.amazonaws.com/happyhouse/dibs', insertForm).then((res) => {\n            alert(\"좋아요\")\n          // window.location.reload();\n          }).catch(function (error){\n          console.log(error)  \n         })\n         \n        }\n  \n        else{\n          setIsLike(false)\n          \n          axios.delete('https://joj5opq81m.execute-api.us-east-2.amazonaws.com/happyhouse/dibs', {data:deleteForm}).then((res) => {\n            alert(\"좋아요  취소\")\n          // window.location.reload();\n          }).catch(function (error){\n          console.log(error)  \n         })\n         \n        }\n        \n      }\n\n    const typeButton = (list) =>{\n        return list.map((data, index)=>(\n                <button id = \"typeButton\" onClick = {()=>SetTypeIndex(index)}>{index}</button>\n        ))\n    }\n\n    return (\n        <div>\n            <div className=\"side-bar\" id=\"sideBar\" style ={{display : \"none\"}}>\n             <div>\n               <Spinner style={{ width: '3rem', height: '3rem' }} color=\"primary\" />\n             </div>\n           </div>\n        </div>\n    )\n\n//   return (\n//     <div className=\"side-bar-wrap\">\n//       {\n//           isLoading ?\n//           <div className=\"side-bar\" id=\"sideBar\" style ={{display : \"none\"}}>\n//             <div>\n//               <Spinner style={{ width: '3rem', height: '3rem' }} color=\"primary\" />\n//             </div>\n//           </div>\n//           :\n//             <div className=\"side-bar\" id=\"sideBar\" style ={{display : \"none\"}}>\n                \n//                 <div className = \"beforeContent\">\n//                 <img alt=\"sidebar hide\" src = {undo} id=\"sidebarHide\" onClick ={() => {props.toggle()}}\n//                 className=\"toggle-menu\"\n//                 />\n                \n//                 {\n//                         isLike\n//                         ?\n//                         <img id = \"tmp\" alt='like' src={like2} className=\"likeImage\" onClick={() => changeImage()}/>\n//                         :\n//                         <img id = \"tmp\" alt='like' src={like1} className=\"likeImage\" onClick={() => changeImage()}/>\n//                   }\n\n//                 </div>\n                                                                    \n//               <div className=\"content\">\n//                 </div>\n\n//                 <div id = \"houseInfoSection1\">\n//                   <table className =\"houseInfoTable1\">\n//                     <tr> \n//                       <td class = \"houseName\" colSpan=\"2\">{props.planned.region}</td>\n//                     </tr>\n//                     <tr>\n//                       <td className =\"houseAddress\">{props.planned.address}</td>\n//                     </tr>\n//                   </table>\n//                 </div>\n\n//                 <div id = \"houseInfoSection2\">\n//                       <div class = \"test2\">주택정보</div>\n                          \n//                           {typeButton(props.planned.type)}\n\n//                           <table class=\"houseInfoTable2\">\n//                           <tr>\n\n//                             </tr>\n//                             <tr>\n//                               <td id = \"td1\">준공일자</td>\n//                               <td>\n//                                 <Moment format=\"YYYY / MM / DD\">{props.planned.supply}</Moment>\n//                               </td>\n//                             </tr>\n                                \n//                             <tr>\n//                               <td id=\"td1\">주택형</td>\n//                               <td>{props.planned.type}</td>\n//                             </tr>\n//                           </table>\n                          \n//                           <HappyChart danjiName = {props.planned.region} convenience = {props.planned.convenience} safety = {props.planned.safety} medical = {props.planned.medical}/>\n//                         </div>\n//                     </div>\n//           }\n//         </div>\n//   );\n};\n\nexport default React.memo(PlannedSideBar);\n"]},"metadata":{},"sourceType":"module"}