{"ast":null,"code":"/**\r\n * Delegate to handle a media query being matched and unmatched.\r\n *\r\n * @param {object} options\r\n * @param {function} options.match callback for when the media query is matched\r\n * @param {function} [options.unmatch] callback for when the media query is unmatched\r\n * @param {function} [options.setup] one-time callback triggered the first time a query is matched\r\n * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?\r\n * @constructor\r\n */\nfunction QueryHandler(options) {\n  this.options = options;\n  !options.deferSetup && this.setup();\n}\n\nQueryHandler.prototype = {\n  constructor: QueryHandler,\n\n  /**\r\n   * coordinates setup of the handler\r\n   *\r\n   * @function\r\n   */\n  setup: function () {\n    if (this.options.setup) {\n      this.options.setup();\n    }\n\n    this.initialised = true;\n  },\n\n  /**\r\n   * coordinates setup and triggering of the handler\r\n   *\r\n   * @function\r\n   */\n  on: function () {\n    !this.initialised && this.setup();\n    this.options.match && this.options.match();\n  },\n\n  /**\r\n   * coordinates the unmatch event for the handler\r\n   *\r\n   * @function\r\n   */\n  off: function () {\n    this.options.unmatch && this.options.unmatch();\n  },\n\n  /**\r\n   * called when a handler is to be destroyed.\r\n   * delegates to the destroy or unmatch callbacks, depending on availability.\r\n   *\r\n   * @function\r\n   */\n  destroy: function () {\n    this.options.destroy ? this.options.destroy() : this.off();\n  },\n\n  /**\r\n   * determines equality by reference.\r\n   * if object is supplied compare options, if function, compare match callback\r\n   *\r\n   * @function\r\n   * @param {object || function} [target] the target for comparison\r\n   */\n  equals: function (target) {\n    return this.options === target || this.options.match === target;\n  }\n};\nmodule.exports = QueryHandler;","map":{"version":3,"sources":["C:/Users/박성현/Documents/GitHub/HappyHouse-Guide/front-end/node_modules/enquire.js/src/QueryHandler.js"],"names":["QueryHandler","options","deferSetup","setup","prototype","constructor","initialised","on","match","off","unmatch","destroy","equals","target","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,CAAsBC,OAAtB,EAA+B;AAC3B,OAAKA,OAAL,GAAeA,OAAf;AACA,GAACA,OAAO,CAACC,UAAT,IAAuB,KAAKC,KAAL,EAAvB;AACH;;AAEDH,YAAY,CAACI,SAAb,GAAyB;AAErBC,EAAAA,WAAW,EAAGL,YAFO;;AAIrB;AACJ;AACA;AACA;AACA;AACIG,EAAAA,KAAK,EAAG,YAAW;AACf,QAAG,KAAKF,OAAL,CAAaE,KAAhB,EAAuB;AACnB,WAAKF,OAAL,CAAaE,KAAb;AACH;;AACD,SAAKG,WAAL,GAAmB,IAAnB;AACH,GAdoB;;AAgBrB;AACJ;AACA;AACA;AACA;AACIC,EAAAA,EAAE,EAAG,YAAW;AACZ,KAAC,KAAKD,WAAN,IAAqB,KAAKH,KAAL,EAArB;AACA,SAAKF,OAAL,CAAaO,KAAb,IAAsB,KAAKP,OAAL,CAAaO,KAAb,EAAtB;AACH,GAxBoB;;AA0BrB;AACJ;AACA;AACA;AACA;AACIC,EAAAA,GAAG,EAAG,YAAW;AACb,SAAKR,OAAL,CAAaS,OAAb,IAAwB,KAAKT,OAAL,CAAaS,OAAb,EAAxB;AACH,GAjCoB;;AAmCrB;AACJ;AACA;AACA;AACA;AACA;AACIC,EAAAA,OAAO,EAAG,YAAW;AACjB,SAAKV,OAAL,CAAaU,OAAb,GAAuB,KAAKV,OAAL,CAAaU,OAAb,EAAvB,GAAgD,KAAKF,GAAL,EAAhD;AACH,GA3CoB;;AA6CrB;AACJ;AACA;AACA;AACA;AACA;AACA;AACIG,EAAAA,MAAM,EAAG,UAASC,MAAT,EAAiB;AACtB,WAAO,KAAKZ,OAAL,KAAiBY,MAAjB,IAA2B,KAAKZ,OAAL,CAAaO,KAAb,KAAuBK,MAAzD;AACH;AAtDoB,CAAzB;AA0DAC,MAAM,CAACC,OAAP,GAAiBf,YAAjB","sourcesContent":["/**\r\n * Delegate to handle a media query being matched and unmatched.\r\n *\r\n * @param {object} options\r\n * @param {function} options.match callback for when the media query is matched\r\n * @param {function} [options.unmatch] callback for when the media query is unmatched\r\n * @param {function} [options.setup] one-time callback triggered the first time a query is matched\r\n * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?\r\n * @constructor\r\n */\r\nfunction QueryHandler(options) {\r\n    this.options = options;\r\n    !options.deferSetup && this.setup();\r\n}\r\n\r\nQueryHandler.prototype = {\r\n\r\n    constructor : QueryHandler,\r\n\r\n    /**\r\n     * coordinates setup of the handler\r\n     *\r\n     * @function\r\n     */\r\n    setup : function() {\r\n        if(this.options.setup) {\r\n            this.options.setup();\r\n        }\r\n        this.initialised = true;\r\n    },\r\n\r\n    /**\r\n     * coordinates setup and triggering of the handler\r\n     *\r\n     * @function\r\n     */\r\n    on : function() {\r\n        !this.initialised && this.setup();\r\n        this.options.match && this.options.match();\r\n    },\r\n\r\n    /**\r\n     * coordinates the unmatch event for the handler\r\n     *\r\n     * @function\r\n     */\r\n    off : function() {\r\n        this.options.unmatch && this.options.unmatch();\r\n    },\r\n\r\n    /**\r\n     * called when a handler is to be destroyed.\r\n     * delegates to the destroy or unmatch callbacks, depending on availability.\r\n     *\r\n     * @function\r\n     */\r\n    destroy : function() {\r\n        this.options.destroy ? this.options.destroy() : this.off();\r\n    },\r\n\r\n    /**\r\n     * determines equality by reference.\r\n     * if object is supplied compare options, if function, compare match callback\r\n     *\r\n     * @function\r\n     * @param {object || function} [target] the target for comparison\r\n     */\r\n    equals : function(target) {\r\n        return this.options === target || this.options.match === target;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = QueryHandler;\r\n"]},"metadata":{},"sourceType":"script"}