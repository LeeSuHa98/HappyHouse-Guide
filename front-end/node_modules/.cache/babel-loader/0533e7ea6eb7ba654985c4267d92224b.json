{"ast":null,"code":"var _jsxFileName = \"/Users/suhalee/Documents/GitHub/HappyHouse-Guide/front-end/src/source/Menubar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport axios from 'axios';\nimport { useMediaQuery } from \"react-responsive\";\nimport { Spinner } from 'reactstrap';\nimport './css/Menubar.css';\nimport logo from '../Image/home.png';\nimport menu from '../Image/menu.png';\nimport logoutLogo from '../Image/logout.png';\nimport notify from '../Image/bell.png';\nimport list from '../Image/check.png';\nimport cancel from '../Image/cancel.png';\nimport { Modal, ModalBody } from 'reactstrap';\nimport Login from './Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Menubar = props => {\n  _s();\n\n  const isPc = useMediaQuery({\n    query: \"(min-width: 601px)\"\n  });\n  const isMobile = useMediaQuery({\n    query: \"(max-width: 600px\"\n  });\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggleMenu = () => setDropdownOpen(prevState => !prevState);\n\n  const [dibs_list, setDibs] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLogin, setIsLogin] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"userToken\")) {\n      localStorage.setItem(\"userToken\", \"bearer: \");\n    }\n\n    if (localStorage.getItem(\"userToken\") === \"bearer: \") {\n      setIsLogin(false);\n    } else {\n      setIsLogin(true);\n    }\n  });\n\n  const likeHide = () => {\n    var con = document.getElementById(\"check\");\n\n    if (con.style.display === 'block') {\n      con.style.display = 'none';\n    }\n  };\n\n  const likeShow = () => {\n    var con = document.getElementById(\"check\");\n\n    if (con.style.display === 'none') {\n      con.style.display = 'block';\n    } else {\n      con.style.display = 'block';\n    }\n  };\n\n  const dibs = dib => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"listImage\",\n      alt: \"\",\n      src: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), dib.danjiName]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n\n  const loadDibsData = () => {\n    setIsLoading(true);\n    var userId = localStorage.getItem(\"userID\");\n    axios.get(`https://joj5opq81m.execute-api.us-east-2.amazonaws.com/happyhouse/dibs/userid/${userId}`).then(({\n      data\n    }) => {\n      data = data.dibs;\n      setDibs(data.map(dibs));\n      setIsLoading(false);\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div class=\"top-header\">\n    //     {isMobile && \n    //     <div class =\"mobile-header\">\n    //         <div class=\"top-header-left\">\n    //             <Dropdown isOpen={dropdownOpen} toggle={toggleMenu}>\n    //             <DropdownToggle\n    //                 tag=\"span\"\n    //                 data-toggle=\"dropdown\"\n    //                 aria-expanded={dropdownOpen}\n    //             >\n    //                 {/* <img src={menu}/> */}\n    //                 <div class=\"menu\">MENU</div>\n    //             </DropdownToggle>\n    //             <DropdownMenu>\n    //                 <DropdownItem ><a onClick = {()=>{window.location.href ='/'}}>HOME</a></DropdownItem>\n    //                 <DropdownItem ><a onClick = {()=>{window.location.href ='/reviews'}}>Review</a></DropdownItem>\n    //                 <DropdownItem ><a onClick = {()=>{window.location.href ='/communities'}}>Community</a></DropdownItem>\n    //             </DropdownMenu>\n    //             </Dropdown>\n    //         </div>\n    //         <div class=\"top-header-right\">\n    //             <ul>    \n    //                 <li id=\"hoverTest\"></li>\n    //                     <li id=\"hoverTest\"> {\n    //                         isLogin === true?\n    //                         <div className = \"user-container\">\n    //                             <div> {localStorage.getItem(\"userName\")} 님</div>\n    //                             <div><img alt=\"likelist hide\" src={notify} id=\"likeImage\" onClick={()=> {likeShow();loadDibsData();}}/></div>\n    //                             <div onClick = {() => {alert(\"안녕히 가세요!\"); localStorage.clear(); setIsLogin(false); window.location.replace('/')}}>\n    //                                 <img alt='logo' src={logoutLogo} className=\"logoutImage\" />\n    //                             </div>\n    //                         </div>\n    //                         : \n    //                         <div onClick = {() => {toggle(); setIsLogin(true)}}> Login | Join </div>\n    //                     }</li>\n    //             </ul>\n    //         </div>\n    //     </div>\n    //     }\n    //     {isPc &&\n    //     <div>\n    //     <div class=\"wrap\">\n    //         {/* <div class=\"top-header-left\" onClick = {()=>{window.location.href ='/'}} > */}\n    //         {/* </div> */}\n    //             <div class=\"top-header-right\">\n    //                 <ul>\n    //                 <li id=\"hoverTest\"><a onClick = {()=>{window.location.href ='/'}}>Home<span> </span></a></li>\n    //                     <li id=\"hoverTest\"><a onClick = {()=>{localStorage.setItem(\"page\",1);window.location.href ='/reviews'}}>Review<span> </span></a></li>\n    //                     <li id=\"hoverTest\"><a onClick = {()=>{localStorage.setItem(\"page\",1);window.location.href ='/communities'}}>Community</a><span> </span></li>\n    //                     <li id=\"hoverTest\"> {\n    //                         isLogin === true?\n    //                         <div className = \"user-container\">\n    //                             <div> {localStorage.getItem(\"userName\")} 님</div>\n    //                             <div><img alt=\"likelist hide\" src={notify} id=\"likeImage\" onClick={()=> {likeShow();loadDibsData();}}/></div>\n    //                             <div onClick = {() => {alert(\"안녕히 가세요!\"); localStorage.clear(); setIsLogin(false); window.location.replace('/')}}>\n    //                                 <img alt='logo' src={logoutLogo} className=\"logoutImage\" />\n    //                             </div>\n    //                         </div>\n    //                         : \n    //                         <div onClick = {() => {toggle(); setIsLogin(true)}}> Login | Join </div>\n    //                     }</li>\n    //                 </ul>\n    //             </div>\n    //             <div class=\"clear\"> </div>\n    //         </div>\n    //     </div>\n    // }\n    //         <div id = \"check\">\n    //             <div id=\"like-wrap\">찜 목록<img alt=\"\" src={cancel} id=\"cancelImage\" onClick={()=> likeHide()}/></div>\n    //             {\n    //                 isLoading ?\n    //                     <div>\n    //                         <Spinner style={{ width: '3rem', height: '3rem' }} color=\"primary\" />\n    //                     </div>\n    //                 :\n    //                     <div class=\"likeList\">\n    //                         <ul>\n    //                             {dibs_list}\n    //                         </ul>\n    //                     </div>  \n    //             }\n    //         </div>\n    //         <Modal isOpen={isOpen} toggle={toggle} >\n    //             <ModalBody>\n    //                 <Login toggle={toggle}/>\n    //             </ModalBody>\n    //         </Modal>\n    _jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(Menubar, \"Z4laXSo6LCVP8pTIYhjwQtmgyRo=\", false, function () {\n  return [useMediaQuery, useMediaQuery];\n});\n\n_c = Menubar;\nexport default Menubar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menubar\");","map":{"version":3,"sources":["/Users/suhalee/Documents/GitHub/HappyHouse-Guide/front-end/src/source/Menubar.js"],"names":["React","useState","useEffect","Route","Switch","Link","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","axios","useMediaQuery","Spinner","logo","menu","logoutLogo","notify","list","cancel","Modal","ModalBody","Login","Menubar","props","isPc","query","isMobile","dropdownOpen","setDropdownOpen","toggleMenu","prevState","dibs_list","setDibs","isLoading","setIsLoading","isLogin","setIsLogin","isOpen","setIsOpen","toggle","localStorage","getItem","setItem","likeHide","con","document","getElementById","style","display","likeShow","dibs","dib","danjiName","loadDibsData","userId","get","then","data","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Route, Switch, Link} from 'react-router-dom';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport axios from 'axios';\nimport {useMediaQuery} from \"react-responsive\";\n\nimport { Spinner } from 'reactstrap';\n\nimport './css/Menubar.css';\nimport logo from '../Image/home.png'\nimport menu from '../Image/menu.png'\nimport logoutLogo from '../Image/logout.png'\nimport notify from '../Image/bell.png'\nimport list from '../Image/check.png'\nimport cancel from '../Image/cancel.png'\n\n\nimport{\n    Modal,\n    ModalBody\n} from 'reactstrap';\nimport Login from'./Login'\n\nconst Menubar = (props) => {\n    \n    const isPc = useMediaQuery({query: \"(min-width: 601px)\"})\n    const isMobile = useMediaQuery({query: \"(max-width: 600px\"})\n\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n\n    const toggleMenu = () => setDropdownOpen(prevState => !prevState);\n\n    const [dibs_list, setDibs] = useState();\n    \n    const [isLoading, setIsLoading] = useState(true)\n    const [isLogin, setIsLogin] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n\n    useEffect(() => {\n        if(!localStorage.getItem(\"userToken\")){\n            localStorage.setItem(\"userToken\", \"bearer: \");\n        }\n        \n        if(localStorage.getItem(\"userToken\") === \"bearer: \"){\n            setIsLogin(false);\n        }else{\n            setIsLogin(true);\n        }\n    });\n\n    const likeHide = () => {\n        var con = document.getElementById(\"check\");\n        if(con.style.display==='block'){\n        con.style.display='none';\n        }\n      }\n    \n    const likeShow = () => {\n        var con = document.getElementById(\"check\");\n\n        if(con.style.display==='none'){\n          con.style.display='block';\n        }else{\n          con.style.display='block';\n        }\n    }\n\n    \n    const dibs = (dib) => (\n        <li><img id = \"listImage\" alt=\"\" src={list}/>{dib.danjiName}</li>\n    );\n\n    const loadDibsData = () => {\n        setIsLoading(true)\n        var userId = localStorage.getItem(\"userID\")\n        axios.get(`https://joj5opq81m.execute-api.us-east-2.amazonaws.com/happyhouse/dibs/userid/${userId}`).then(({data}) => {\n            data = data.dibs\n            setDibs(data.map(dibs))\n            setIsLoading(false)\n        })\n    }\n    \nreturn (\n    // <div class=\"top-header\">\n    //     {isMobile && \n    //     <div class =\"mobile-header\">\n    //         <div class=\"top-header-left\">\n    //             <Dropdown isOpen={dropdownOpen} toggle={toggleMenu}>\n    //             <DropdownToggle\n    //                 tag=\"span\"\n    //                 data-toggle=\"dropdown\"\n    //                 aria-expanded={dropdownOpen}\n    //             >\n    //                 {/* <img src={menu}/> */}\n    //                 <div class=\"menu\">MENU</div>\n    //             </DropdownToggle>\n    //             <DropdownMenu>\n    //                 <DropdownItem ><a onClick = {()=>{window.location.href ='/'}}>HOME</a></DropdownItem>\n    //                 <DropdownItem ><a onClick = {()=>{window.location.href ='/reviews'}}>Review</a></DropdownItem>\n    //                 <DropdownItem ><a onClick = {()=>{window.location.href ='/communities'}}>Community</a></DropdownItem>\n    //             </DropdownMenu>\n    //             </Dropdown>\n    //         </div>\n    //         <div class=\"top-header-right\">\n    //             <ul>    \n    //                 <li id=\"hoverTest\"></li>\n    //                     <li id=\"hoverTest\"> {\n    //                         isLogin === true?\n    //                         <div className = \"user-container\">\n    //                             <div> {localStorage.getItem(\"userName\")} 님</div>\n    //                             <div><img alt=\"likelist hide\" src={notify} id=\"likeImage\" onClick={()=> {likeShow();loadDibsData();}}/></div>\n    //                             <div onClick = {() => {alert(\"안녕히 가세요!\"); localStorage.clear(); setIsLogin(false); window.location.replace('/')}}>\n    //                                 <img alt='logo' src={logoutLogo} className=\"logoutImage\" />\n    //                             </div>\n    //                         </div>\n    //                         : \n    //                         <div onClick = {() => {toggle(); setIsLogin(true)}}> Login | Join </div>\n    //                     }</li>\n    //             </ul>\n    //         </div>\n    //     </div>\n    //     }\n    //     {isPc &&\n    //     <div>\n    //     <div class=\"wrap\">\n    //         {/* <div class=\"top-header-left\" onClick = {()=>{window.location.href ='/'}} > */}\n    //         {/* </div> */}\n    //             <div class=\"top-header-right\">\n    //                 <ul>\n    //                 <li id=\"hoverTest\"><a onClick = {()=>{window.location.href ='/'}}>Home<span> </span></a></li>\n    //                     <li id=\"hoverTest\"><a onClick = {()=>{localStorage.setItem(\"page\",1);window.location.href ='/reviews'}}>Review<span> </span></a></li>\n    //                     <li id=\"hoverTest\"><a onClick = {()=>{localStorage.setItem(\"page\",1);window.location.href ='/communities'}}>Community</a><span> </span></li>\n    //                     <li id=\"hoverTest\"> {\n    //                         isLogin === true?\n    //                         <div className = \"user-container\">\n    //                             <div> {localStorage.getItem(\"userName\")} 님</div>\n    //                             <div><img alt=\"likelist hide\" src={notify} id=\"likeImage\" onClick={()=> {likeShow();loadDibsData();}}/></div>\n    //                             <div onClick = {() => {alert(\"안녕히 가세요!\"); localStorage.clear(); setIsLogin(false); window.location.replace('/')}}>\n    //                                 <img alt='logo' src={logoutLogo} className=\"logoutImage\" />\n    //                             </div>\n    //                         </div>\n    //                         : \n    //                         <div onClick = {() => {toggle(); setIsLogin(true)}}> Login | Join </div>\n    //                     }</li>\n\n    //                 </ul>\n    //             </div>\n    //             <div class=\"clear\"> </div>\n    //         </div>\n    //     </div>\n    // }\n\n\n    //         <div id = \"check\">\n    //             <div id=\"like-wrap\">찜 목록<img alt=\"\" src={cancel} id=\"cancelImage\" onClick={()=> likeHide()}/></div>\n    //             {\n    //                 isLoading ?\n    //                     <div>\n    //                         <Spinner style={{ width: '3rem', height: '3rem' }} color=\"primary\" />\n    //                     </div>\n    //                 :\n\n    //                     <div class=\"likeList\">\n    //                         <ul>\n    //                             {dibs_list}\n    //                         </ul>\n    //                     </div>  \n    //             }\n    //         </div>\n    \n\n    //         <Modal isOpen={isOpen} toggle={toggle} >\n    //             <ModalBody>\n    //                 <Login toggle={toggle}/>\n    //             </ModalBody>\n    //         </Modal>\n    <div>\n    </div>\n    );  \n}   \n\nexport default Menubar;\n"]},"metadata":{},"sourceType":"module"}