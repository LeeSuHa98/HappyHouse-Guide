{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uBC15\\uC131\\uD604\\\\Documents\\\\GitHub\\\\HappyHouse-Guide\\\\front-end\\\\src\\\\source\\\\ReadCommunity.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import '../Css/test.css'; import DeleteReply from './DeleteReply.js'; import\n// CreateReply from './CreateReply.js';\n\nimport $ from 'jquery';\nimport { Button, Col, Container, Form, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Modal, ModalHeader, Row, Table } from 'reactstrap';\nimport axios from 'axios';\nimport './community.css';\nimport Moment from 'react-moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReadCommunity(props) {\n  _s();\n\n  const [_id, set_id] = useState(props._id);\n  const [userId, setUserId] = useState(props);\n  const [writeDate, setWriteDate] = useState();\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState(); // const [reply, setReply] = useState(); //댓글작성내용\n  // const [modalInput, setModalInput] = useState(\"default\");\n  // const [tableData, setTableData] = useState(); //댓글 목록 조회\n  // const [isReadOnly, setIsReadOnly] = useState(true); //댓글 수정활성화\n  // const [modalCreateReply, setModalCreateReply] = useState(false);\n  // const [modalDeleteReply, setModalDeleteReply] = useState(false);\n  // const toggleCreateReply = () => setModalCreateReply(!modalCreateReply);\n  // const toggleDeleteReply = () => setModalDeleteReply(!modalDeleteReply);\n  // let replyArrays = []; //댓글 목록 테이블\n  // function setReplyArrays(newArrays) {\n  //     replyArrays = newArrays;\n  // }\n  // const renderInput = (replyArray, index) => {\n  //     return (\n  //         <tr key={index}>\n  //             <Input type=\"hidden\" value={replyArray.postId}></Input>\n  //             <td>{replyArray.title}</td>\n  //             <td>{replyArray.usreId}</td>\n  //             <td>{replyArray.content}</td>\n  //             <td className=\"text-nowrap\">\n  //                 <Button className={\"createReplyButton\"}>{\"댓글\"}</Button>\n  //                 <Button className={\"deleteReplyButton\"}>{\"삭제\"}</Button>\n  //             </td>\n  //         </tr>\n  //         // <td className=\"text-nowrap\"><Button className={\"deleteReplyButton\"}\n  //         // color={\"primary\"} >{\"수정\"}</Button></td>\n  //     ) //<h1>props.activityHistoryCode : {activityHistoryCode}</h1>\n  // } //댓글 목록 조회시 보일것 (댓글작성자, 댓글내용, 댓글 작성날짜)\n  // const handleReplyOnChange = (e) => {\n  //     e.preventDefault();\n  //     setReply(e.target.value);\n  // }\n\n  const handleChangeUserId = e => {\n    e.preventDefault();\n    setUserId(e.target.value);\n  };\n\n  const handleChangeWriteDate = e => {\n    e.preventDefault();\n    setWriteDate(e.target.value);\n  };\n\n  const handleChangeTitle = e => {\n    e.preventDefault();\n    setTitle(e.target.value);\n  };\n\n  const handleChangeContent = e => {\n    e.preventDefault();\n    setContent(e.target.value);\n  }; // const toggleIsReadOnly = () => {\n  //     setIsReadOnly(!isReadOnly);\n  // }\n\n\n  const readCommunity = () => {\n    var form = {\n      _id: localStorage.getItem(\"community_id\")\n    };\n    axios.post('/happyhouse/communities/:id', form).then(res => {\n      console.log(res.data);\n      console.log(res.data.communitys.userId);\n      setUserId(res.data.communitys.userId);\n      setWriteDate(res.data.communitys.writeDate);\n      setTitle(res.data.communitys.title);\n      setContent(res.data.communitys.content);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }; // function getReplyList(form) {\n  //     var form = new FormData;\n  //     // form.append(\"postId\", postId);\n  //     axios\n  //         .post('/community/readReply', form)\n  //         .then((response) => {\n  //             setReplyArrays(response.data);\n  //             setTableData(replyArrays.map(renderInput));\n  //         });\n  // }\n  // const updateCommunity = () => {\n  //     var form = new FormData;\n  //     form.append(\"title\", title);\n  //     form.append(\"content\", content);\n  //     axios\n  //         .post('/community/updatePost', form, {\n  //             headers: {\n  //                 'content-type': 'multipart/form-data'\n  //             }\n  //         })\n  //         .then((response) => {\n  //             window\n  //                 .location\n  //                 .reload();\n  //         })\n  // }\n  // const deleteCommunity = () => {\n  //     axios\n  //         .delete('/happyhouse/communities/:id',{\n  //             data:{\n  //                 _id: _id\n  //             }\n  //         })\n  //         .then((res) => {\n  //             alert(\"게시글이 삭제 완료\")\n  //             window.location.reload();\n  //             props.toggle()\n  //         })\n  //         .catch(function (error) {\n  //             console.log(error);\n  //         })\n  //     }\n  // const createReply = () => {\n  //     var form = new FormData;\n  //     form.append('userToken', localStorage.getItem(\"userToken\"));\n  //     // form.append('postId', postId);\n  //     form.append('reply', reply);\n  //     axios\n  //         .post(\"/community/createReply\", form, {\n  //             headers: {\n  //                 'content-type': 'multipart/form-data'\n  //             }\n  //         })\n  //         .then((response) => {\n  //             window\n  //                 .location\n  //                 .reload();\n  //         })\n  // }\n  // $(function () {\n  //     $(\".deleteReply\").off(\"click\")\n  //     $(\".deleteReplyButton\").on(\"click\", function () {\n  //         var postButton = $(this);\n  //         var tr = postButton\n  //             .parent()\n  //             .parent();\n  //         var td = tr.children();\n  //         console.log(\"row데이터 : \" + tr.eq(0).text());\n  //         setModalInput(td.eq(0).val());\n  //         toggleDeleteReply();\n  //     })\n  //     $(\".createReply\").off(\"click\")\n  //     $(\".createReplyButton\").on(\"click\", function () {\n  //         var postButton = $(this);\n  //         var tr = postButton\n  //             .parent()\n  //             .parent();\n  //         var td = tr.children();\n  //         console.log(\"row데이터 : \" + tr.eq(0).text());\n  //         setModalInput(td.eq(0).val());\n  //         toggleCreateReply();\n  //     })\n  // })\n\n\n  useEffect(() => {\n    var form = new FormData();\n    form.append(\"id\", localStorage.getItem('id'));\n    readCommunity(); //게시글 상세조회\n    // getReplyList(form);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createCommunity\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"community-title\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"title\",\n          children: \"\\uCEE4\\uBBA4\\uB2C8\\uD2F0 \\uC791\\uC131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"houseInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          id: \"header\",\n          children: \"\\uC81C\\uBAA9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            name: \"userId\",\n            onChange: handleChangeTitle,\n            value: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          id: \"header\",\n          children: \"\\uB0B4\\uC6A9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"content\",\n          cols: \"50\",\n          rows: \"10\",\n          onChange: handleChangeContent,\n          value: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"community-upload\",\n        style: {\n          float: 'left'\n        },\n        children: \"\\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"community-upload\",\n        style: {\n          float: 'left'\n        },\n        children: \"\\uC644\\uB8CC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"community-upload\",\n        style: {\n          float: 'right'\n        },\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ReadCommunity, \"DhSpBbCbNCKOtyM0W8W5b00TQr8=\");\n\n_c = ReadCommunity;\nexport default ReadCommunity;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadCommunity\");","map":{"version":3,"sources":["C:/Users/박성현/Documents/GitHub/HappyHouse-Guide/front-end/src/source/ReadCommunity.js"],"names":["React","useEffect","useState","$","Button","Col","Container","Form","FormGroup","Input","InputGroup","InputGroupAddon","InputGroupText","Modal","ModalHeader","Row","Table","axios","Moment","ReadCommunity","props","_id","set_id","userId","setUserId","writeDate","setWriteDate","title","setTitle","content","setContent","handleChangeUserId","e","preventDefault","target","value","handleChangeWriteDate","handleChangeTitle","handleChangeContent","readCommunity","form","localStorage","getItem","post","then","res","console","log","data","communitys","catch","error","FormData","append","float"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\n// import '../Css/test.css'; import DeleteReply from './DeleteReply.js'; import\r\n// CreateReply from './CreateReply.js';\r\nimport $ from 'jquery';\r\nimport {\r\n    Button,\r\n    Col,\r\n    Container,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    Modal,\r\n    ModalHeader,\r\n    Row,\r\n    Table\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport './community.css'\r\nimport Moment from 'react-moment'\r\n\r\nfunction ReadCommunity(props) {\r\n\r\n    const [_id, set_id] = useState(props._id);\r\n    const [userId, setUserId] = useState(props);\r\n    const [writeDate, setWriteDate] = useState();\r\n    const [title, setTitle] = useState();\r\n    const [content, setContent] = useState();\r\n\r\n    // const [reply, setReply] = useState(); //댓글작성내용\r\n    // const [modalInput, setModalInput] = useState(\"default\");\r\n    // const [tableData, setTableData] = useState(); //댓글 목록 조회\r\n    // const [isReadOnly, setIsReadOnly] = useState(true); //댓글 수정활성화\r\n\r\n    // const [modalCreateReply, setModalCreateReply] = useState(false);\r\n    // const [modalDeleteReply, setModalDeleteReply] = useState(false);\r\n\r\n    // const toggleCreateReply = () => setModalCreateReply(!modalCreateReply);\r\n    // const toggleDeleteReply = () => setModalDeleteReply(!modalDeleteReply);\r\n\r\n    // let replyArrays = []; //댓글 목록 테이블\r\n    // function setReplyArrays(newArrays) {\r\n    //     replyArrays = newArrays;\r\n    // }\r\n    // const renderInput = (replyArray, index) => {\r\n\r\n    //     return (\r\n\r\n    //         <tr key={index}>\r\n    //             <Input type=\"hidden\" value={replyArray.postId}></Input>\r\n    //             <td>{replyArray.title}</td>\r\n    //             <td>{replyArray.usreId}</td>\r\n    //             <td>{replyArray.content}</td>\r\n    //             <td className=\"text-nowrap\">\r\n    //                 <Button className={\"createReplyButton\"}>{\"댓글\"}</Button>\r\n    //                 <Button className={\"deleteReplyButton\"}>{\"삭제\"}</Button>\r\n    //             </td>\r\n    //         </tr>\r\n\r\n    //         // <td className=\"text-nowrap\"><Button className={\"deleteReplyButton\"}\r\n    //         // color={\"primary\"} >{\"수정\"}</Button></td>\r\n    //     ) //<h1>props.activityHistoryCode : {activityHistoryCode}</h1>\r\n    // } //댓글 목록 조회시 보일것 (댓글작성자, 댓글내용, 댓글 작성날짜)\r\n\r\n    // const handleReplyOnChange = (e) => {\r\n    //     e.preventDefault();\r\n    //     setReply(e.target.value);\r\n    // }\r\n    const handleChangeUserId = (e) => {\r\n        e.preventDefault();\r\n        setUserId(e.target.value);\r\n    }\r\n    const handleChangeWriteDate = (e) => {\r\n        e.preventDefault();\r\n        setWriteDate(e.target.value);\r\n    }\r\n    const handleChangeTitle = (e) => {\r\n        e.preventDefault();\r\n        setTitle(e.target.value);\r\n    }\r\n    const handleChangeContent = (e) => {\r\n        e.preventDefault();\r\n        setContent(e.target.value);\r\n    }\r\n\r\n    // const toggleIsReadOnly = () => {\r\n    //     setIsReadOnly(!isReadOnly);\r\n    // }\r\n\r\n    const readCommunity = () => {\r\n\r\n        var form = {\r\n            _id: localStorage.getItem(\"community_id\")\r\n        };\r\n        axios\r\n            .post('/happyhouse/communities/:id', form)\r\n            .then((res) => {\r\n\r\n                console.log(res.data);\r\n                console.log(res.data.communitys.userId);\r\n                setUserId(res.data.communitys.userId);\r\n                setWriteDate(res.data.communitys.writeDate);\r\n                setTitle(res.data.communitys.title);\r\n                setContent(res.data.communitys.content);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        }\r\n\r\n    // function getReplyList(form) {\r\n    //     var form = new FormData;\r\n\r\n    //     // form.append(\"postId\", postId);\r\n    //     axios\r\n    //         .post('/community/readReply', form)\r\n    //         .then((response) => {\r\n\r\n    //             setReplyArrays(response.data);\r\n    //             setTableData(replyArrays.map(renderInput));\r\n    //         });\r\n    // }\r\n    // const updateCommunity = () => {\r\n    //     var form = new FormData;\r\n\r\n      \r\n    //     form.append(\"title\", title);\r\n    //     form.append(\"content\", content);\r\n\r\n    //     axios\r\n    //         .post('/community/updatePost', form, {\r\n    //             headers: {\r\n    //                 'content-type': 'multipart/form-data'\r\n    //             }\r\n    //         })\r\n    //         .then((response) => {\r\n    //             window\r\n    //                 .location\r\n    //                 .reload();\r\n    //         })\r\n    // }\r\n    // const deleteCommunity = () => {\r\n      \r\n \r\n    //     axios\r\n    //         .delete('/happyhouse/communities/:id',{\r\n    //             data:{\r\n    //                 _id: _id\r\n    //             }\r\n    //         })\r\n    //         .then((res) => {\r\n           \r\n    //             alert(\"게시글이 삭제 완료\")\r\n    //             window.location.reload();\r\n    //             props.toggle()\r\n                \r\n    //         })\r\n    //         .catch(function (error) {\r\n    //             console.log(error);\r\n    //         })\r\n    //     }\r\n    // const createReply = () => {\r\n    //     var form = new FormData;\r\n    //     form.append('userToken', localStorage.getItem(\"userToken\"));\r\n    //     // form.append('postId', postId);\r\n    //     form.append('reply', reply);\r\n    //     axios\r\n    //         .post(\"/community/createReply\", form, {\r\n    //             headers: {\r\n    //                 'content-type': 'multipart/form-data'\r\n    //             }\r\n    //         })\r\n    //         .then((response) => {\r\n\r\n    //             window\r\n    //                 .location\r\n    //                 .reload();\r\n\r\n    //         })\r\n    // }\r\n\r\n    \r\n\r\n    // $(function () {\r\n\r\n    //     $(\".deleteReply\").off(\"click\")\r\n    //     $(\".deleteReplyButton\").on(\"click\", function () {\r\n\r\n    //         var postButton = $(this);\r\n\r\n    //         var tr = postButton\r\n    //             .parent()\r\n    //             .parent();\r\n    //         var td = tr.children();\r\n    //         console.log(\"row데이터 : \" + tr.eq(0).text());\r\n    //         setModalInput(td.eq(0).val());\r\n    //         toggleDeleteReply();\r\n    //     })\r\n\r\n    //     $(\".createReply\").off(\"click\")\r\n    //     $(\".createReplyButton\").on(\"click\", function () {\r\n\r\n    //         var postButton = $(this);\r\n\r\n    //         var tr = postButton\r\n    //             .parent()\r\n    //             .parent();\r\n    //         var td = tr.children();\r\n    //         console.log(\"row데이터 : \" + tr.eq(0).text());\r\n    //         setModalInput(td.eq(0).val());\r\n    //         toggleCreateReply();\r\n    //     })\r\n    // })\r\n    useEffect(() => {\r\n        var form = new FormData;\r\n        form.append(\"id\", localStorage.getItem('id'));\r\n        readCommunity(); //게시글 상세조회\r\n       // getReplyList(form);\r\n    }, [])\r\n    return (\r\n        <div className=\"dv\">   \r\n <div className=\"createCommunity\">\r\n                <div className=\"community-title\">\r\n                    <div id=\"title\">커뮤니티 작성</div>\r\n                </div>\r\n\r\n               \r\n\r\n            </div>\r\n                            <table class=\"houseInfo\">\r\n                                <tr>\r\n                                    <td id=\"header\">제목</td>\r\n                                    <h4>\r\n                                        <Input\r\n                                            name=\"userId\"\r\n                                            onChange={handleChangeTitle}\r\n                                            value={title}\r\n                                           ></Input>\r\n                                    </h4>\r\n                                </tr>\r\n                              \r\n                                <tr>\r\n                                    <td id=\"header\">내용</td>\r\n                                    <Input\r\n                                        name=\"content\"\r\n                                        cols=\"50\"\r\n                                        rows=\"10\"\r\n                                        onChange={handleChangeContent}\r\n                                        value={content}\r\n                                     ></Input>\r\n                                </tr>\r\n\r\n                            </table>\r\n\r\n                            <div className=\"button-container\">\r\n                            <button id=\"community-upload\" style={{float: 'left'}}>수정</button>\r\n                            <button id=\"community-upload\" style={{float: 'left'}}>완료</button>\r\n\r\n                            <button id=\"community-upload\" style={{float: 'right'}}>삭제</button>\r\n                            </div>\r\n               \r\n                \r\n              \r\n                {/* <Modal isOpen={modalCreateReply}>\r\n                        <ModalHeader toggle={toggleCreateReply}>댓글 등록</ModalHeader>\r\n\r\n                         <CreateReply postId={modalInput}></CreateReply>\r\n            </Modal>\r\n            <Modal isOpen={modalDeleteReply}>\r\n                        <ModalHeader toggle={toggleDeleteReply}>댓글 삭제</ModalHeader>\r\n\r\n                         <DeleteReply postId={modalInput}></DeleteReply>\r\n            </Modal> */\r\n                }\r\n                {/* <InputGroup>\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>댓글</InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                        type=\"textarea\"\r\n                        name=\"content\"\r\n                        placeholder=\"댓글\"\r\n                        onChange={handleReplyOnChange}\r\n                        value={reply}></Input>\r\n                </InputGroup>\r\n                <Button\r\n                    className=\"btn btn-primary btn-block w-25\"\r\n                    color={\"primary\"}\r\n                    style={{\r\n                        float: 'right'\r\n                    }}\r\n                    type=\"post\"\r\n                    onClick={createReply}>{\"댓글작성\"}</Button> */}\r\n            </div>\r\n    \r\n    )\r\n}\r\nexport default ReadCommunity;\r\n"]},"metadata":{},"sourceType":"module"}