{"ast":null,"code":"import _toConsumableArray from\"C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import{jsx as _jsx}from\"react/jsx-runtime\";var ActionProvider=function ActionProvider(createChatBotMessage,setStateFunc,createClientMessage){var _this=this;_classCallCheck(this,ActionProvider);this.initialQuestion=function(){var message=_this.createChatBotMessage(\"더 궁금한 것이 있으신가요 ?\",{widget:\"options\"});_this.addMessageToState(message);};this.handleNotice=function(){var message=_this.createChatBotMessage(\"모집공고\",/*#__PURE__*/_jsx(\"br\",{}));var message2=_this.createChatBotMessage(\"모집공고 조회를 원하는 단지명 또는 건물명을 입력하세요.\");_this.addMessageToState(message);_this.addMessageToState(message2);};this.answerAddress=function(){var message=_this.createChatBotMessage(\"해당주택에 관한 공고문입니다. \");var message2=_this.createChatBotMessage(\"https://apply.lh.or.kr/LH/index.html?gv_url=SIL::CLCC_SIL_0065.xfdl&gv_menuId=1010203&gv_param=CCR_CNNT_SYS_DS_CD:03,PAN_ID:2015122300008358,LCC:Y#MN::CLCC_MN_0010:\");_this.addMessageToState(message);_this.addMessageToState(message2);_this.initialQuestion();};this.handleCondition=function(){var message=_this.createChatBotMessage(\"입주조건\",/*#__PURE__*/_jsx(\"br\",{}));var message2=_this.createChatBotMessage(\"신청하고자 하는 유형을 선택해주세요.\",{widget:\"conditions\"});_this.addMessageToState(message);_this.addMessageToState(message2);};this.handleReview=function(){var message=_this.createChatBotMessage(\"거주후기\",/*#__PURE__*/_jsx(\"br\",{}));var message2=_this.createChatBotMessage(\"궁금하신 거주후기의 유형을 선택해주세요.\",{widget:\"reviews\"});_this.addMessageToState(message);_this.addMessageToState(message2);};this.handleFAQ=function(){var message=_this.createChatBotMessage(\"자주 묻는 질문\",/*#__PURE__*/_jsx(\"br\",{}));var message2=_this.createChatBotMessage(\"궁금하신 정보를 선택해주세요.\",{widget:\"faq\"});_this.addMessageToState(message);_this.addMessageToState(message2);};this.studentCondition=function(){var message=_this.createChatBotMessage(\"대학생\",/*#__PURE__*/_jsx(\"br\",{}));var message2=_this.createChatBotMessage(\"대학생 계층의 신청자격에 관한 정보입니다.\",{widget:\"student\",withAvatar:true});_this.addMessageToState(message);_this.addMessageToState(message2);_this.initialQuestion();};this.youthCondition=function(){var message=_this.createChatBotMessage(\"청년\",/*#__PURE__*/_jsx(\"br\",{}));var message2=_this.createChatBotMessage(\"청년 계층의 신청자격에 관한 정보입니다.\",{widget:\"youth\",withAvatar:true});_this.addMessageToState(message);_this.addMessageToState(message2);_this.initialQuestion();};this.familyCondition=function(){var message=_this.createChatBotMessage(\"신혼부부 & 한부모가족\",/*#__PURE__*/_jsx(\"br\",{}));var message2=_this.createChatBotMessage(\"신혼부부 & 한부모가족 계층의 신청자격에 관한 정보입니다.\",{widget:\"family\",withAvatar:true});_this.addMessageToState(message);_this.addMessageToState(message2);_this.initialQuestion();};this.oldCondition=function(){var message=_this.createChatBotMessage(\"고령자\",/*#__PURE__*/_jsx(\"br\",{}));var message2=_this.createChatBotMessage(\"고령자 계층의 신청자격에 관한 정보입니다.\",{widget:\"old\",withAvatar:true});_this.addMessageToState(message);_this.addMessageToState(message2);_this.initialQuestion();};this.benefitCondition=function(){var message=_this.createChatBotMessage(\"주거급여수급자\",/*#__PURE__*/_jsx(\"br\",{}));var message2=_this.createChatBotMessage(\"주거급여수급자 계층의 신청자격에 관한 정보입니다.\",{widget:\"benefit\",withAvatar:true});_this.addMessageToState(message);_this.addMessageToState(message2);_this.initialQuestion();};this.workerCondition=function(){var message=_this.createChatBotMessage(\"산업단지근로자\",/*#__PURE__*/_jsx(\"br\",{}));var message2=_this.createChatBotMessage(\"산업단지근로자 계층의 신청자격에 관한 정보입니다.\",{widget:\"worker\",withAvatar:true});_this.addMessageToState(message);_this.addMessageToState(message2);_this.initialQuestion();};this.newestReviews=function(){};this.highstRatedReviews=function(){};this.searchRegionReviews=function(){};this.applyHouse=function(){var message=_this.createChatBotMessage(\"신청\",/*#__PURE__*/_jsx(\"br\",{}));var message2=_this.createChatBotMessage(\"궁금하신 정보를 클릭해보세요.\",{widget:\"apply\",withAvatar:true});_this.addMessageToState(message);_this.addMessageToState(message2);};this.faqApplyID1=function(){var message=_this.createChatBotMessage(\"신청시기는 언제인가요 ?\",/*#__PURE__*/_jsx(\"br\",{}));var message2=_this.createChatBotMessage(\"행복주택은 지구별 사업시행자(ex. LH공사, SH공사 등)가 다르기 때문에 사업지구별 입주자 모집공고에 따라 진행됩니다. 모집공고는 대략 준공 1년 전에 시행되나, 현장 상황에 따라 달라질 수 있으므로 각 지구별 공고문은 ' 행복주택 블로그 '를 참고하시어 입주 신청을 하시면 됩니다.\");_this.addMessageToState(message);_this.addMessageToState(message2);_this.initialQuestion();};this.faqApplyID2=function(){var message=_this.createChatBotMessage(\"신청방법은 어떻게 되나요 ?\",/*#__PURE__*/_jsx(\"br\",{}));var message2=_this.createChatBotMessage(\"‘LH 청약센터’홈페이지에 접속하시면 간편하게 하실 수 있습니다. 상단 메뉴중에서 ‘인터넷청약’의 ‘청약신청-임대주택’을 클릭하면 가능합니다.\");_this.addMessageToState(message);_this.addMessageToState(message2);_this.initialQuestion();};this.faqApplyID3=function(){var message=_this.createChatBotMessage(\"선정절차에 대해 궁금해요 !\",/*#__PURE__*/_jsx(\"br\",{}));var message2=_this.createChatBotMessage(\"1) 사업시행자가 지자체와 협의하여 정한 기준 및 절차에 따라 건설량의 50%의 범위 내에서 우선공급 대상자를 선정합니다. 2) 일반공급 대상자는 사업시행자가 추첨으로 선발합니다. 3) 계층별로 세대수의 20%이상 예비입주자를 선정합니다. 4) 모집 결과 일부 계층이 미달될 경우, 공공주택사업자가 주택유형 등을 고려하여, 타 계층에게 물량을 전환하여 공급할 수 있습니다. 5) 퇴거자가 있을 경우에는 예비입주자 순위에 따라 입주할 수 있고,  예비 입주자가 없을 경우 일반공급 절차에 따라, 입주자를 추가 모집합니다.\");_this.addMessageToState(message);_this.addMessageToState(message2);_this.initialQuestion();};this.faqApplyID4=function(){var message=_this.createChatBotMessage(\"중복신청은 가능한가요 ?\",/*#__PURE__*/_jsx(\"br\",{}));var message2=_this.createChatBotMessage(\"중복 신청 할 경우 전부 무효 처리됩니다. 단, 입주자 모집공고일이 다른 경우, 조건에 해당한다면 중복신청이 가능합니다.\");_this.addMessageToState(message);_this.addMessageToState(message2);_this.initialQuestion();};this.faqApplyID5=function(){var message=_this.createChatBotMessage(\"대학생인데 청약통장이 없는데 신청이 가능한가요 ?\",/*#__PURE__*/_jsx(\"br\",{}));var message2=_this.createChatBotMessage(\"대학생과 취약 계층은 청약통장이 없어도 입주 신청을 할 수 있습니다. 그 외에는 반드시 주택청약종합저축 가입자여야 합니다. 청약저축 가입자는 저축 납부 횟수나 금액과 관계없이 통장만 있다면 입주 신청을 할 수 있습니다.\");_this.addMessageToState(message);_this.addMessageToState(message2);_this.initialQuestion();};this.faqApplyID6=function(){var message=_this.createChatBotMessage(\"다른 지역 행복주택에 신청 가능한가요 ?\",/*#__PURE__*/_jsx(\"br\",{}));var message2=_this.createChatBotMessage(\"가능합니다. 18년도부터 자신이 거주하는 지역에 상관없이 신청 가능합니다. 다만 청약신청은 순위제를 적용하기 때문에 인근 지역 거주자가 더 유리합니다.\");_this.addMessageToState(message);_this.addMessageToState(message2);_this.initialQuestion();};this.qualificationRequirement=function(){};this.addMessageToState=function(message){_this.setState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{messages:[].concat(_toConsumableArray(prevState.messages),[message])});});};this.createChatBotMessage=createChatBotMessage;this.setState=setStateFunc;this.createClientMessage=createClientMessage;};export default ActionProvider;","map":{"version":3,"sources":["C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/src/chatbot/ActionProvider.js"],"names":["ActionProvider","createChatBotMessage","setStateFunc","createClientMessage","initialQuestion","message","widget","addMessageToState","handleNotice","message2","answerAddress","handleCondition","handleReview","handleFAQ","studentCondition","withAvatar","youthCondition","familyCondition","oldCondition","benefitCondition","workerCondition","newestReviews","highstRatedReviews","searchRegionReviews","applyHouse","faqApplyID1","faqApplyID2","faqApplyID3","faqApplyID4","faqApplyID5","faqApplyID6","qualificationRequirement","setState","prevState","messages"],"mappings":"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","sourcesContent":["class ActionProvider {\r\n    constructor(createChatBotMessage, setStateFunc, createClientMessage) {\r\n      this.createChatBotMessage = createChatBotMessage;\r\n      this.setState = setStateFunc;\r\n      this.createClientMessage = createClientMessage;\r\n    }\r\n    \r\n    initialQuestion = () => {\r\n      const message = this.createChatBotMessage(\"더 궁금한 것이 있으신가요 ?\", { widget: \"options\" });\r\n      this.addMessageToState(message);\r\n    }\r\n    //Options Function\r\n\r\n    handleNotice = () => {\r\n      const message = this.createChatBotMessage(\"모집공고\", <br/>);\r\n      const message2 = this.createChatBotMessage(\r\n        \"모집공고 조회를 원하는 단지명 또는 건물명을 입력하세요.\",\r\n      );\r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n    }\r\n\r\n    answerAddress = () => {\r\n      const message = this.createChatBotMessage(\r\n        \"해당주택에 관한 공고문입니다. \",\r\n      );\r\n      const message2 = this.createChatBotMessage(\r\n        \"https://apply.lh.or.kr/LH/index.html?gv_url=SIL::CLCC_SIL_0065.xfdl&gv_menuId=1010203&gv_param=CCR_CNNT_SYS_DS_CD:03,PAN_ID:2015122300008358,LCC:Y#MN::CLCC_MN_0010:\"\r\n      );\r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    handleCondition = () => {\r\n      const message = this.createChatBotMessage(\"입주조건\", <br/>);\r\n      const message2 = this.createChatBotMessage(\"신청하고자 하는 유형을 선택해주세요.\", { widget: \"conditions\" });\r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n    }\r\n\r\n    handleReview = () => {\r\n      const message = this.createChatBotMessage(\"거주후기\", <br/>);\r\n      const message2 = this.createChatBotMessage(\"궁금하신 거주후기의 유형을 선택해주세요.\", { widget: \"reviews\"});\r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n    }\r\n\r\n    handleFAQ = () => {\r\n      const message = this.createChatBotMessage(\"자주 묻는 질문\", <br/>);\r\n      const message2 = this.createChatBotMessage(\"궁금하신 정보를 선택해주세요.\", { widget: \"faq\"});\r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n    }\r\n\r\n    //Conditions Function\r\n\r\n    studentCondition = () => {\r\n      const message = this.createChatBotMessage(\"대학생\", <br/>);\r\n      const message2 = this.createChatBotMessage(\r\n        \"대학생 계층의 신청자격에 관한 정보입니다.\",\r\n        { widget: \"student\", withAvatar: true }\r\n      );\r\n      \r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    youthCondition = () => {\r\n      const message = this.createChatBotMessage(\"청년\", <br/>);\r\n      const message2 = this.createChatBotMessage(\r\n        \"청년 계층의 신청자격에 관한 정보입니다.\",\r\n        { widget: \"youth\", withAvatar: true }\r\n      );\r\n      \r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    familyCondition = () => {\r\n      const message = this.createChatBotMessage(\"신혼부부 & 한부모가족\", <br/>);\r\n      const message2 = this.createChatBotMessage(\r\n        \"신혼부부 & 한부모가족 계층의 신청자격에 관한 정보입니다.\",\r\n        { widget: \"family\", withAvatar: true }\r\n      );\r\n      \r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    oldCondition = () => {\r\n      const message = this.createChatBotMessage(\"고령자\", <br/>);\r\n      const message2 = this.createChatBotMessage(\r\n        \"고령자 계층의 신청자격에 관한 정보입니다.\",\r\n        { widget: \"old\", withAvatar: true }\r\n      );\r\n      \r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    benefitCondition = () => {\r\n      const message = this.createChatBotMessage(\"주거급여수급자\", <br/>);\r\n      const message2 = this.createChatBotMessage(\r\n        \"주거급여수급자 계층의 신청자격에 관한 정보입니다.\",\r\n        { widget: \"benefit\", withAvatar: true }\r\n      );\r\n      \r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    workerCondition = () => {\r\n      const message = this.createChatBotMessage(\"산업단지근로자\", <br/>);\r\n      const message2 = this.createChatBotMessage(\r\n        \"산업단지근로자 계층의 신청자격에 관한 정보입니다.\",\r\n        { widget: \"worker\", withAvatar: true }\r\n      );\r\n      \r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    //Reviews Function \r\n\r\n    newestReviews = () => {\r\n      \r\n    }\r\n\r\n    highstRatedReviews = () => {\r\n\r\n    }\r\n\r\n    searchRegionReviews = () => {\r\n\r\n    }\r\n\r\n    //FAQ Function\r\n    applyHouse = () => {\r\n      const message = this.createChatBotMessage(\"신청\", <br/>);\r\n      const message2 = this.createChatBotMessage(\r\n        \"궁금하신 정보를 클릭해보세요.\", {widget: \"apply\", withAvatar: true}\r\n      );\r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n    }\r\n\r\n    //FAQ Apply Function\r\n    faqApplyID1 = () => {\r\n      const message = this.createChatBotMessage(\"신청시기는 언제인가요 ?\", <br/>);\r\n      const message2 = this.createChatBotMessage(\r\n        \"행복주택은 지구별 사업시행자(ex. LH공사, SH공사 등)가 다르기 때문에 사업지구별 입주자 모집공고에 따라 진행됩니다. 모집공고는 대략 준공 1년 전에 시행되나, 현장 상황에 따라 달라질 수 있으므로 각 지구별 공고문은 ' 행복주택 블로그 '를 참고하시어 입주 신청을 하시면 됩니다.\"\r\n      );\r\n\r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    faqApplyID2 = () => {\r\n      const message = this.createChatBotMessage(\"신청방법은 어떻게 되나요 ?\", <br/>);\r\n      const message2 = this.createChatBotMessage(\r\n        \"‘LH 청약센터’홈페이지에 접속하시면 간편하게 하실 수 있습니다. 상단 메뉴중에서 ‘인터넷청약’의 ‘청약신청-임대주택’을 클릭하면 가능합니다.\"\r\n      );\r\n\r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    faqApplyID3 = () => {\r\n      const message = this.createChatBotMessage(\"선정절차에 대해 궁금해요 !\", <br/> );\r\n      const message2 = this.createChatBotMessage(\r\n        \"1) 사업시행자가 지자체와 협의하여 정한 기준 및 절차에 따라 건설량의 50%의 범위 내에서 우선공급 대상자를 선정합니다. 2) 일반공급 대상자는 사업시행자가 추첨으로 선발합니다. 3) 계층별로 세대수의 20%이상 예비입주자를 선정합니다. 4) 모집 결과 일부 계층이 미달될 경우, 공공주택사업자가 주택유형 등을 고려하여, 타 계층에게 물량을 전환하여 공급할 수 있습니다. 5) 퇴거자가 있을 경우에는 예비입주자 순위에 따라 입주할 수 있고,  예비 입주자가 없을 경우 일반공급 절차에 따라, 입주자를 추가 모집합니다.\"\r\n      );\r\n\r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    faqApplyID4 = () => {\r\n      const message = this.createChatBotMessage(\"중복신청은 가능한가요 ?\", <br/> );\r\n      const message2 = this.createChatBotMessage(\r\n        \"중복 신청 할 경우 전부 무효 처리됩니다. 단, 입주자 모집공고일이 다른 경우, 조건에 해당한다면 중복신청이 가능합니다.\"\r\n      );\r\n\r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    faqApplyID5 = () => {\r\n      const message = this.createChatBotMessage(\"대학생인데 청약통장이 없는데 신청이 가능한가요 ?\", <br/> );\r\n      const message2 = this.createChatBotMessage(\r\n        \"대학생과 취약 계층은 청약통장이 없어도 입주 신청을 할 수 있습니다. 그 외에는 반드시 주택청약종합저축 가입자여야 합니다. 청약저축 가입자는 저축 납부 횟수나 금액과 관계없이 통장만 있다면 입주 신청을 할 수 있습니다.\"\r\n      );\r\n\r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    faqApplyID6 = () => {\r\n      const message = this.createChatBotMessage(\"다른 지역 행복주택에 신청 가능한가요 ?\", <br/> );\r\n      const message2 = this.createChatBotMessage(\r\n        \"가능합니다. 18년도부터 자신이 거주하는 지역에 상관없이 신청 가능합니다. 다만 청약신청은 순위제를 적용하기 때문에 인근 지역 거주자가 더 유리합니다.\"\r\n      );\r\n\r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    //FAQ Qualification Recuirement\r\n\r\n    qualificationRequirement = () => {\r\n      \r\n    }\r\n\r\n    addMessageToState = (message) => {\r\n      this.setState((prevState) => ({\r\n        ...prevState,\r\n        messages: [...prevState.messages, message],\r\n      }))\r\n    }\r\n  }\r\n  \r\n  export default ActionProvider;"]},"metadata":{},"sourceType":"module"}