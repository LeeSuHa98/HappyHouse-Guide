{"ast":null,"code":"/*!\r\n * Chart.js v3.2.1\r\n * https://www.chartjs.org\r\n * (c) 2021 Chart.js Contributors\r\n * Released under the MIT License\r\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as renderText, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  _refresh() {\n    const me = this;\n\n    if (me._request) {\n      return;\n    }\n\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n\n      me._request = null;\n\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n\n        me._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n\n        me._notify(chart, anims, date, 'complete');\n\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    me._lastDate = date;\n\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n\n    return anims;\n  }\n\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n\n    this._getAnims(chart).items.push(...items);\n  }\n\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  start(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims) {\n      return;\n    }\n\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n\n    return true;\n  }\n\n  stop(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.items.length) {\n      return;\n    }\n\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n\n    anims.items = [];\n\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n\n}\n\nvar animator = new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n\n};\n\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    const me = this;\n\n    if (me._active) {\n      me._notify(false);\n\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    const me = this;\n\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n\n      me._notify(false);\n    }\n  }\n\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || elapsed < duration);\n\n    if (!me._active) {\n      me._target[prop] = to;\n\n      me._notify(true);\n\n      return;\n    }\n\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      }\n    }\n  }\n});\n\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n\n      if (!isObject(cfg)) {\n        return;\n      }\n\n      const resolved = {};\n\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n\n    return animations;\n  }\n\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n\n    return animations;\n  }\n\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  let options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  items = items || meta._parsed;\n\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n\n    if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\n      return;\n    }\n\n    delete stacks[meta.vScale.id][meta.index];\n  }\n}\n\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\n\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\n\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this.initialize();\n  }\n\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n\n  updateIndex(datasetIndex) {\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  _destroy() {\n    const meta = this._cachedMeta;\n\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (me._data !== data) {\n      if (me._data) {\n        unlistenArrayEvents(me._data, me);\n        clearStacks(me._cachedMeta);\n      }\n\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n\n      me._data = data;\n    }\n  }\n\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n\n    me._dataCheck();\n\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n\n    me._dataCheck();\n\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    me._resyncElements(resetNewElements);\n\n    if (stackChanged) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n\n  parse(start, count) {\n    const me = this;\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = me;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n\n          prev = cur;\n        }\n      }\n\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n\n    return parsed;\n  }\n\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {\n        all: true\n      });\n    }\n\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n\n    const otherScale = me._getOtherScale(scale);\n\n    const stack = canStack && meta._stacked && {\n      keys: getSortedDatasetIndices(me.chart, true),\n      values: null\n    };\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n\n      if (sorted) {\n        break;\n      }\n    }\n\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n\n    return values;\n  }\n\n  getMaxOverflow() {\n    return false;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n\n  update(mode) {}\n\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || elements.length - start;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n    } else {\n      context = me.$context || (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n\n    const context = () => me.getContext(index, active);\n\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n\n    if (cached) {\n      return cached;\n    }\n\n    let options;\n\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n\n    const animations = new Animations(chart, options && options.animations);\n\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const numMeta = me._cachedMeta.data.length;\n    const numData = me._data.length;\n\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      me.parse(0, count);\n    }\n  }\n\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = arr => {\n      arr.length += count;\n\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n\n    me.parse(start, count);\n\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {}\n\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n\n    meta.data.splice(start, count);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n\n    this._insertElements(this.getDataset().data.length - count, count);\n  }\n\n  _onDataPop() {\n    this._removeElements(this._cachedMeta.data.length - 1, 1);\n  }\n\n  _onDataShift() {\n    this._removeElements(0, 1);\n  }\n\n  _onDataSplice(start, count) {\n    this._removeElements(start, count);\n\n    this._insertElements(start, arguments.length - 2);\n  }\n\n  _onDataUnshift() {\n    this._insertElements(0, arguments.length);\n  }\n\n}\n\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n\n    return parsed;\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n\n    const ruler = me._getRuler();\n\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : me._calculateBarValuePixels(i);\n\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || me.index === stack._top || me.index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n\n      if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n        stacks.push(item.stack);\n      }\n\n      if (item.index === last) {\n        break;\n      }\n    }\n\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {\n      vScale,\n      _stacked\n    } = me._cachedMeta;\n    const {\n      base: baseValue,\n      minBarLength\n    } = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n\n    size = head - base;\n\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n\n      if (value === 0) {\n        base -= size / 2;\n      }\n\n      head = base + size;\n    }\n\n    const actualBase = baseValue || 0;\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    clipArea(chart.ctx, chart.chartArea);\n\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n\n    unclipArea(chart.ctx);\n  }\n\n}\n\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n\n    return parsed;\n  }\n\n  getMaxOverflow() {\n    const {\n      data,\n      _parsed\n    } = this._cachedMeta;\n    let max = 0;\n\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n\n    return max > 0 && max;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      xScale,\n      yScale\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\n      const properties = {\n        x,\n        y,\n        skip: isNaN(x) || isNaN(y)\n      };\n\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      me.updateElement(point, i, properties, mode);\n    }\n\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n\n    const radius = values.radius;\n\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n\n}\n\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\n\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n\n        const rotation = controller._getRotation();\n\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n\n    const chartWeight = me._getRingWeight(me.index);\n\n    const {\n      circumference,\n      rotation\n    } = me._getRotationExtents();\n\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n\n    const circumference = me._getCircumference();\n\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n\n    let startAngle = me._getRotation();\n\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n\n          if (controller !== me) {\n            controller.configure();\n          }\n\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n\n    return max;\n  }\n\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n\n}\n\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      xScale,\n      yScale,\n      _stacked\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed.y);\n      const x = properties.x = xScale.getPixelForValue(parsed.x, i);\n      const y = properties.y = reset || nullData ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\n      properties.skip = isNaN(x) || isNaN(y) || nullData;\n      properties.stop = i > 0 && parsed.x - prevParsed.x > maxGapLength;\n      properties.parsed = parsed;\n\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\n\n    super.draw();\n  }\n\n}\n\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\n\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {\n      iScale,\n      _parsed\n    } = meta;\n    const axis = iScale.axis;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nfunction scaleRangesChanged(meta) {\n  const {\n    xScale,\n    yScale,\n    _scaleRanges\n  } = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n\n  const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - radiusLength * me.index;\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n\n}\n\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {}\n\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n\n    me.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n\n}\n\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\n\nclass ScatterController extends LineController {}\n\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\n}\n\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n\n  formats() {\n    return abstract();\n  }\n\n  parse(value, format) {\n    return abstract();\n  }\n\n  format(timestamp, format) {\n    return abstract();\n  }\n\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n\n  diff(a, b, unit) {\n    return abstract();\n  }\n\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n\n}\n\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\n\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return getRelativePosition$1(e, chart);\n}\n\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({\n      index,\n      data\n    } = metasets[i]);\n\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\n\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = width - padding.width;\n    const availableHeight = height - padding.height;\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n\n  releaseContext(context) {\n    return false;\n  }\n\n  addEventListener(chart, type, listener) {}\n\n  removeEventListener(chart, type, listener) {}\n\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  isAttached(canvas) {\n    return true;\n  }\n\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {\n    childList: true\n  });\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, args => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  releaseContext(context) {\n    const canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n\n    return !!(container && _getParentNode(container));\n  }\n\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n\n    if (!final || !anims) {\n      return me;\n    }\n\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n\n}\n\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {\n      notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n\n    return '';\n  }\n\n};\n\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n\n  return delta;\n}\n\nvar Ticks = {\n  formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n\n  const tickLength = scale._tickSize();\n\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right\n  } = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\n\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n\n  parse(raw, index) {\n    return raw;\n  }\n\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n\n  getMinMax(canStack) {\n    const me = this;\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n\n    const metas = me.getMatchingVisibleMetas();\n\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n\n  getTicks() {\n    return this.ticks;\n  }\n\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal() ? me.width + margins.left + margins.right : me.height + margins.top + margins.bottom;\n\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n\n  setDimensions() {\n    const me = this;\n\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n\n  determineDataLimits() {}\n\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n\n  buildTicks() {\n    return [];\n  }\n\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n\n    for (i = 0; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n  }\n\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = me._getLabelSizes();\n\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)), Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    me.labelRotation = labelRotation;\n  }\n\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = me;\n\n    const display = me._isVisible();\n\n    const isHorizontal = me.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      if (tickOpts.display && me.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = me._getLabelSizes();\n\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    me._handleMargins();\n\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  _handleMargins() {\n    const me = this;\n\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n\n  getLabelForValue(value) {\n    return value;\n  }\n\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n\n  getValueForPixel(pixel) {}\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getPixelForDecimal(decimal) {\n    const me = this;\n\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n\n    return me.$context || (me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = me._getLabelSizes();\n\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {\n      grid,\n      position\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = me._getLabelSizes();\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n\n          case 'bottom':\n            top -= height;\n            break;\n        }\n\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n\n          case 'right':\n            left -= width;\n            break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {\n      position,\n      ticks\n    } = me.options;\n    const rotation = -toRadians(me.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = me.options;\n\n    const labelSizes = me._getLabelSizes();\n\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {\n      textAlign,\n      x\n    };\n  }\n\n  _computeLabelArea() {\n    const me = this;\n\n    if (me.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = me.chart;\n    const position = me.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: me.left,\n        bottom: chart.height,\n        right: me.right\n      };\n    }\n\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: me.top,\n        left: 0,\n        bottom: me.bottom,\n        right: chart.width\n      };\n    }\n  }\n\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n\n    return 0;\n  }\n\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n\n  drawBorder() {\n    const me = this;\n    const {\n      chart,\n      ctx,\n      options: {\n        grid\n      }\n    } = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n\n    if (!axisWidth) {\n      return;\n    }\n\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = me.ctx;\n\n    const area = me._computeLabelArea();\n\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom') {\n      offset += padding.bottom;\n\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n  draw(chartArea) {\n    const me = this;\n\n    if (!me._isVisible()) {\n      return;\n    }\n\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n\n      }];\n    }\n\n    return [{\n      z: gz,\n\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n\n    }, {\n      z: gz + 1,\n\n      draw() {\n        me.drawBorder();\n      }\n\n    }, {\n      z: tz,\n\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n\n    }];\n  }\n\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  _maxDigits() {\n    const me = this;\n\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n\n    return me.isHorizontal() ? me.width / fontSize / 0.7 : me.height / fontSize;\n  }\n\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  get(id) {\n    return this.items[id];\n  }\n\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n\n      if (typedRegistry || reg.isForType(arg) || reg === me.plugins && arg.id) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n\n    return this.plugins;\n  }\n\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n\n    return item;\n  }\n\n}\n\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  notify(chart, hook, args, filter) {\n    const me = this;\n\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n\n      me._notify(me._init, chart, 'install');\n    }\n\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n\n    const result = me._notify(descriptors, chart, hook, args);\n\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n\n      me._notify(me._init, chart, 'uninstall');\n    }\n\n    return result;\n  }\n\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n\n}\n\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n\n  return plugins;\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n\n    if (opts === null) {\n      continue;\n    }\n\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n\n    this._resolverCache.clear();\n  }\n\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n\n    let cache = _scopeCache.get(mainScope);\n\n    if (!cache || resetCache) {\n      cache = new Map();\n\n      _scopeCache.set(mainScope, cache);\n    }\n\n    return cache;\n  }\n\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n\n    const cache = this._cachedScopes(mainScope, resetCache);\n\n    const cached = cache.get(keyLists);\n\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = [...scopes];\n\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n\n    return array;\n  }\n\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n\n    return result;\n  }\n\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n\n  for (const prop of names) {\n    if (isScriptable(prop) && isFunction(proxy[prop]) || isIndexable(prop) && isArray(proxy[prop])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar version = \"3.2.1\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nconst instances = {};\n\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\n\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n\n    me._initialize();\n\n    if (me.attached) {\n      me.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n      return new BasicPlatform();\n    }\n\n    return new DomPlatform();\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const oldRatio = me.currentDevicePixelRatio;\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n\n    if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\n      return;\n    }\n\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    retinaScale(me, newRatio, true);\n    me.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [me, newSize], me);\n\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n\n  _updateMetasetIndex(meta, index) {\n    const metasets = this._metasets;\n    const oldIndex = meta.index;\n\n    if (oldIndex !== index) {\n      metasets[oldIndex] = metasets[index];\n      metasets[index] = meta;\n      meta.index = index;\n    }\n  }\n\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n\n      metasets.splice(numData, numMeta - numData);\n    }\n\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = me;\n\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n\n    me._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n\n        meta = me.getDatasetMeta(i);\n      }\n\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n\n      me._updateMetasetIndex(meta, i);\n\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    me._updateMetasets();\n\n    return newControllers;\n  }\n\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n\n  reset() {\n    this._resetElements();\n\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, scale => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n\n    if (!setsEqual(existingEvents, newEvents)) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n\n    me._plugins.invalidate();\n\n    if (me.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n\n    me._minPadding = minPadding;\n\n    me._updateLayout(minPadding);\n\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n\n    me._updateDatasets(mode);\n\n    me.notifyPlugins('afterUpdate', {\n      mode\n    });\n\n    me._layers.sort(compare2Level('z', '_idx'));\n\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n\n    me.render();\n  }\n\n  _updateLayout(minPadding) {\n    const me = this;\n\n    if (me.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n\n      if (box.configure) {\n        box.configure();\n      }\n\n      me._layers.push(...box._layers());\n    }, me);\n\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    me.notifyPlugins('afterLayout');\n  }\n\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n\n    if (me.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({\n        datasetIndex: i\n      }) : mode);\n    }\n\n    me.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    const me = this;\n\n    if (me.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({\n        chart: me\n      });\n    }\n  }\n\n  draw() {\n    const me = this;\n    let i;\n\n    if (me._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = me._resizeBeforeDraw;\n\n      me._resize(width, height);\n\n      me._resizeBeforeDraw = null;\n    }\n\n    me.clear();\n\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n\n    if (me.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const layers = me._layers;\n\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n\n    me._drawDatasets();\n\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n\n    me.notifyPlugins('afterDraw');\n  }\n\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  _drawDatasets() {\n    const me = this;\n\n    if (me.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const metasets = me.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    clipArea(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    unclipArea(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = metasets[datasetIndex] = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = {\n      chart: this,\n      type: 'chart'\n    });\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {\n      visible\n    });\n    me.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n\n      delete me._metasets[datasetIndex];\n    }\n  }\n\n  destroy() {\n    const me = this;\n    const {\n      canvas,\n      ctx\n    } = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n\n    me.config.clearCache();\n\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  bindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    let listener = function (e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n\n      me._eventHandler(e);\n    };\n\n    each(me.options.events, type => _add(type, listener));\n\n    if (me.options.responsive) {\n      listener = (width, height) => {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n\n      let detached;\n\n      const attached = () => {\n        _remove('attach', attached);\n\n        me.attached = true;\n        me.resize();\n\n        _add('resize', listener);\n\n        _add('detach', detached);\n      };\n\n      detached = () => {\n        me.attached = false;\n\n        _remove('resize', listener);\n\n        _add('attach', attached);\n      };\n\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    } else {\n      me.attached = true;\n    }\n  }\n\n  unbindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n\n    if (!listeners) {\n      return;\n    }\n\n    me._listeners = {};\n    each(listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      me._active = active;\n\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {\n      event: e,\n      replay,\n      cancelable: true\n    };\n\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.type);\n\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = me._handleEvent(e, replay);\n\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      me.render();\n    }\n\n    return me;\n  }\n\n  _handleEvent(e, replay) {\n    const me = this;\n    const {\n      _active: lastActive = [],\n      options\n    } = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n\n    me._lastEvent = null;\n\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n\n    changed = !_elementsEqual(active, lastActive);\n\n    if (changed || replay) {\n      me._active = active;\n\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n\n}\n\nconst invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\n\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element) {\n  const {\n    startAngle,\n    endAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n\nfunction pathArc(ctx, element) {\n  const {\n    x,\n    y,\n    startAngle,\n    endAngle,\n    pixelMargin\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element) {\n  if (element.fullCircles) {\n    element.endAngle = element.startAngle + TAU;\n    pathArc(ctx, element);\n\n    for (let i = 0; i < element.fullCircles; ++i) {\n      ctx.fill();\n    }\n  }\n\n  if (!isNaN(element.circumference)) {\n    element.endAngle = element.startAngle + element.circumference % TAU;\n  }\n\n  pathArc(ctx, element);\n  ctx.fill();\n}\n\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {\n    x,\n    y,\n    startAngle,\n    endAngle,\n    pixelMargin\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n\n  if (inner) {\n    element.endAngle = element.startAngle + TAU;\n    clipArc(ctx, element);\n    element.endAngle = endAngle;\n\n    if (element.endAngle === element.startAngle) {\n      element.endAngle += TAU;\n      element.fullCircles--;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\n\nfunction drawBorder(ctx, element) {\n  const {\n    options\n  } = element;\n  const inner = options.borderAlign === 'inner';\n\n  if (!options.borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n\n  if (inner) {\n    clipArc(ctx, element);\n  }\n\n  pathArc(ctx, element);\n  ctx.stroke();\n}\n\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n    const withinRadius = distance >= innerRadius && distance <= outerRadius;\n    return betweenAngles && withinRadius;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius'], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    const offset = options.offset || 0;\n    me.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    me.fullCircles = Math.floor(me.circumference / TAU);\n\n    if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    if (offset && me.circumference < TAU) {\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    }\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, me);\n    drawBorder(ctx, me);\n    ctx.restore();\n  }\n\n}\n\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea) {\n    const me = this;\n    const options = me.options;\n\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n\n      _updateBezierControlPoints(me._points, options, chartArea, loop);\n\n      me._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n\n    const segments = _boundSegments(me, {\n      property,\n      start: value,\n      end: value\n    });\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n\n    const _interpolate = _getInterpolationMethod(options);\n\n    let i, ilen;\n\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n\n    return result.length === 1 ? result[0] : result;\n  }\n\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n\n    const segmentMethod = _getSegmentMethod(me);\n\n    let loop = me._loop;\n    start = start || 0;\n    count = count || me.points.length - start;\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n\n    return !!loop;\n  }\n\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n\n}\n\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash' && name !== 'fill'\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n\n}\n\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\n\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    return res;\n  }\n\n  edge = bar.horizontal ? parseEdge(edge, 'left', 'right', bar.base > bar.x) : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n\n}\n\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (meta.type !== 'line') {\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n\n      let decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\n\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n  let target = null;\n  let horizontal;\n\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n\n  return null;\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n\n}\n\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(segment => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction buildStackLine(source) {\n  const {\n    chart,\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\n\nconst isLineAndNotInHideAnimation = meta => meta.type === 'line' && !meta.hidden;\n\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push(...postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first,\n    last,\n    point\n  };\n}\n\nfunction getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return createBoundaryLine(boundary, line);\n}\n\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property,\n    start,\n    end\n  };\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n\n  return parts;\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nfunction _fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n\n  const segments = _segments(line, target, property);\n\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n\n    const targetLoop = !!target.pathSegment(ctx, tgt, {\n      move: lineLoop,\n      reverse: true\n    });\n    const loop = lineLoop && targetLoop;\n\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n\n    _fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n\n    ctx.restore();\n    ctx.save();\n\n    _clip(ctx, target, area.bottom);\n  }\n\n  _fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n\n  ctx.restore();\n}\n\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\n\nvar plugin_filler = {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area);\n\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n\n  setDimensions() {\n    const me = this;\n\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, me.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n\n    me.legendItems = legendItems;\n  }\n\n  fit() {\n    const me = this;\n    const {\n      options,\n      ctx\n    } = me;\n\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n\n    const titleHeight = me._computeTitleHeight();\n\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {\n        left,\n        top,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    const me = this;\n\n    if (!me.options.display) {\n      return;\n    }\n\n    const titleHeight = me._computeTitleHeight();\n\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        }\n      }\n    } = me;\n\n    if (this.isHorizontal()) {\n      let row = 0;\n\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    const me = this;\n\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n\n      me._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  _draw() {\n    const me = this;\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = me;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      color: fontColor,\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n\n    const isHorizontal = me.isHorizontal();\n\n    const titleHeight = this._computeTitleHeight();\n\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + fontSize / 2 + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n\n      me._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n\n}\n\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n\n      maxWidth = bottom - top;\n    }\n\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = me._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  let widthPadding = 0;\n\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getContext() {\n    const me = this;\n    return me.$context || (me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(me, {\n        chart: me._chart,\n        tooltip: me,\n        replay\n      });\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      cornerRadius,\n      caretSize\n    } = options;\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n\n      y3 = y1;\n    }\n\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {\n      body\n    } = me;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + 1 : boxWidth + 2 : 0;\n\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n\n      if (!position) {\n        return;\n      }\n\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    me._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n\n    const positionChanged = me._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n\n    const positionChanged = me._positionChanged(active, e);\n\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    if (changed) {\n      me._active = active;\n\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n\n}\n\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options\n      });\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n\n        return '';\n      },\n\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n\n        let label = tooltipItem.dataset.label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        const value = tooltipItem.formattedValue;\n\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n\n        return label;\n      },\n\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\n\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me.getMinMax(true);\n\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n\n    me.min = min;\n    me.max = max;\n  }\n\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n\n    return value;\n  }\n\n  configure() {\n    const me = this;\n    super.configure();\n\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n\n  getPixelForValue(value) {\n    const me = this;\n\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return me.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n\n}\n\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    horizontal\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / maxDigits;\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  niceMin = Math.floor(rmin / spacing) * spacing;\n  niceMax = Math.ceil(rmax / spacing) * spacing;\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  factor = Math.pow(10, isNullOrUndef(precision) ? _decimalPlaces(spacing) : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n\n  if (minDefined) {\n    ticks.push({\n      value: min\n    });\n\n    if (niceMin <= min) {\n      j++;\n    }\n\n    if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, minSpacing * (horizontal ? ('' + min).length : 1))) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n\n  if (maxDefined) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, minSpacing * (horizontal ? ('' + max).length : 1))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      beginAtZero,\n      stacked\n    } = me.options;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    if (beginAtZero || stacked) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      setMax(max + 1);\n\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n\n    me.min = min;\n    me.max = max;\n  }\n\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal()\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n\n    return ticks;\n  }\n\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    const me = this;\n\n    if (me.isHorizontal()) {\n      return Math.ceil(me.width / 40);\n    }\n\n    const tickFont = me._resolveTickFontOptions(0);\n\n    return Math.ceil(me.height / tickFont.lineHeight);\n  }\n\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n\n}\n\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\n\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\n\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n\n    me.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n\n    me.min = min;\n    me.max = max;\n  }\n\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    const me = this;\n\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n\n    return me.getPixelForDecimal(value === me.min ? 0 : (log10(value) - me._startValue) / me._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n\n}\n\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n  for (i = 0; i < valueCount; i++) {\n    const extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - size.w / 2;\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h\n    };\n  }\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= textSize.h / 2;\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\n\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n\n  fit() {\n    const me = this;\n    const opts = me.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n    me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n\n    return (value - me.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n\n  drawBackground() {\n    const me = this;\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = me.options;\n\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {\n      angleLines,\n      grid\n    } = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  drawBorder() {}\n\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n\n  drawTitle() {}\n\n}\n\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n\n    callback(label) {\n      return label;\n    },\n\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n\n    return {\n      min,\n      max\n    };\n  }\n\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = me.min;\n    const max = me.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    me._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min)) : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n\n    const size = me._getLabelSize(exampleLabel);\n\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = me.getMatchingVisibleMetas();\n\n    if (me._normalized && metas.length) {\n      return me._cache.data = metas[0].controller.getAllParsedValues(me);\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n\n    return me._cache.data = me.normalize(timestamps);\n  }\n\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = me.getLabels();\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n\n    return me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps);\n  }\n\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n\n}\n\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n\n  initOffsets() {\n    const me = this;\n\n    const timestamps = me._getTimestampsForTable();\n\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {\n      min,\n      max\n    } = me;\n\n    if (!timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    const items = [min];\n    let i, ilen, curr;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n    return items;\n  }\n\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index) ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n\n}\n\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"sources":["C:/Users/박성현/Documents/GitHub/HappyHouse-Guide/front-end/node_modules/chart.js/dist/chart.esm.js"],"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","i","isObject","b","isArray","d","defaults","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","defined","s","sign","j","isNullOrUndef","k","clipArea","m","unclipArea","_","_arrayUnique","t","toRadians","n","toPercentage","o","toDimension","T","TAU","p","formatNumber","q","_angleBetween","H","HALF_PI","P","PI","w","isNumber","x","_limitValue","y","_lookupByKey","z","getRelativePosition$1","A","_isPointInArea","B","_rlookupByKey","C","toPadding","D","each","E","getMaximumSize","F","_getParentNode","G","readUsedSize","I","throttled","J","supportsEventListenerOptions","K","log10","L","_factorize","M","finiteOrDefault","N","callback","O","_addGrace","Q","toDegrees","R","_measureText","S","_int16Range","U","_alignPixel","V","renderText","W","toFont","X","_toLeftRightCenter","Y","_alignStartEnd","Z","overrides","$","merge","a0","_capitalize","a1","descriptors","a2","isFunction","a3","_attachContext","a4","_createResolver","a5","_descriptors","a6","mergeIf","a7","uid","a8","debounce","a9","retinaScale","aa","clearCanvas","ab","setsEqual","ac","_elementsEqual","ad","getAngleFromPoint","ae","_readValueToProps","af","_updateBezierControlPoints","ag","_computeSegments","ah","_boundSegments","ai","_steppedInterpolation","aj","_bezierInterpolation","ak","_pointInLine","al","_steppedLineTo","am","_bezierCurveTo","an","drawPoint","ao","addRoundedRectPath","ap","toTRBL","aq","toTRBLCorners","ar","_boundSegment","as","_normalizeAngle","at","getRtlAdapter","au","overrideTextDirection","av","_textX","aw","restoreTextDirection","ax","noop","ay","distanceBetweenPoints","az","_setMinAndMaxByKey","aA","niceNum","aB","almostWhole","aC","almostEquals","aD","_decimalPlaces","aE","_longestText","aF","_filterBetween","aG","_lookup","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","me","call","window","_update","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","create","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","metas","concat","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","BarController","iAxisKey","vAxisKey","obj","bars","base","getBasePixel","horizontal","isHorizontal","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","enableBorderRadius","center","height","width","_getStacks","last","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","grouped","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","interaction","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","getPixelForDecimal","skip","radius","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","hidden","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","controllers","__proto__","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","v1","wrapBoxes","boxes","layoutBoxes","setLayoutDims","layouts","params","layout","fullSize","availableWidth","hBoxMaxHeight","vBoxMaxWidth","availableHeight","buildLayoutBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","placeBoxes","userPadding","padding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","createAttachObserver","container","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","args","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","Element","tooltipPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","scope","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","includes","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","Chart","initialCanvas","existingChart","platform","_initializePlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","console","error","_initialize","maintainAspectRatio","responsive","bindEvents","OffscreenCanvas","_resize","_resizeBeforeDraw","newSize","oldRatio","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasetIndex","oldIndex","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","existingEvents","newEvents","events","unbindEvents","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateDatasetVisibility","destroy","toBase64Image","toDataURL","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_updateHoverStyles","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","lastEvent","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","betweenAngles","withinRadius","halfAngle","halfRadius","translate","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","pointStyle","getBarBounds","bar","half","parseBorderSkipped","borderSkipped","parseEdge","swap","startEnd","orig","v2","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","configurable","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","hitbox","_draw","defaultColor","rtlHelper","rtl","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","leftForLtr","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","radiusAndPadding","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","step","precision","maxTicks","maxDigits","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","adjustPointPositionForLabelHeight","getTextAlignForAngle","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","limit","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_maxIndex","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"mappings":"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","sourcesContent":["/*!\r\n * Chart.js v3.2.1\r\n * https://www.chartjs.org\r\n * (c) 2021 Chart.js Contributors\r\n * Released under the MIT License\r\n */\r\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as renderText, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\r\nexport { d as defaults } from './chunks/helpers.segment.js';\r\n\r\nclass Animator {\r\n  constructor() {\r\n    this._request = null;\r\n    this._charts = new Map();\r\n    this._running = false;\r\n    this._lastDate = undefined;\r\n  }\r\n  _notify(chart, anims, date, type) {\r\n    const callbacks = anims.listeners[type];\r\n    const numSteps = anims.duration;\r\n    callbacks.forEach(fn => fn({\r\n      chart,\r\n      initial: anims.initial,\r\n      numSteps,\r\n      currentStep: Math.min(date - anims.start, numSteps)\r\n    }));\r\n  }\r\n  _refresh() {\r\n    const me = this;\r\n    if (me._request) {\r\n      return;\r\n    }\r\n    me._running = true;\r\n    me._request = requestAnimFrame.call(window, () => {\r\n      me._update();\r\n      me._request = null;\r\n      if (me._running) {\r\n        me._refresh();\r\n      }\r\n    });\r\n  }\r\n  _update(date = Date.now()) {\r\n    const me = this;\r\n    let remaining = 0;\r\n    me._charts.forEach((anims, chart) => {\r\n      if (!anims.running || !anims.items.length) {\r\n        return;\r\n      }\r\n      const items = anims.items;\r\n      let i = items.length - 1;\r\n      let draw = false;\r\n      let item;\r\n      for (; i >= 0; --i) {\r\n        item = items[i];\r\n        if (item._active) {\r\n          if (item._total > anims.duration) {\r\n            anims.duration = item._total;\r\n          }\r\n          item.tick(date);\r\n          draw = true;\r\n        } else {\r\n          items[i] = items[items.length - 1];\r\n          items.pop();\r\n        }\r\n      }\r\n      if (draw) {\r\n        chart.draw();\r\n        me._notify(chart, anims, date, 'progress');\r\n      }\r\n      if (!items.length) {\r\n        anims.running = false;\r\n        me._notify(chart, anims, date, 'complete');\r\n        anims.initial = false;\r\n      }\r\n      remaining += items.length;\r\n    });\r\n    me._lastDate = date;\r\n    if (remaining === 0) {\r\n      me._running = false;\r\n    }\r\n  }\r\n  _getAnims(chart) {\r\n    const charts = this._charts;\r\n    let anims = charts.get(chart);\r\n    if (!anims) {\r\n      anims = {\r\n        running: false,\r\n        initial: true,\r\n        items: [],\r\n        listeners: {\r\n          complete: [],\r\n          progress: []\r\n        }\r\n      };\r\n      charts.set(chart, anims);\r\n    }\r\n    return anims;\r\n  }\r\n  listen(chart, event, cb) {\r\n    this._getAnims(chart).listeners[event].push(cb);\r\n  }\r\n  add(chart, items) {\r\n    if (!items || !items.length) {\r\n      return;\r\n    }\r\n    this._getAnims(chart).items.push(...items);\r\n  }\r\n  has(chart) {\r\n    return this._getAnims(chart).items.length > 0;\r\n  }\r\n  start(chart) {\r\n    const anims = this._charts.get(chart);\r\n    if (!anims) {\r\n      return;\r\n    }\r\n    anims.running = true;\r\n    anims.start = Date.now();\r\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\r\n    this._refresh();\r\n  }\r\n  running(chart) {\r\n    if (!this._running) {\r\n      return false;\r\n    }\r\n    const anims = this._charts.get(chart);\r\n    if (!anims || !anims.running || !anims.items.length) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  stop(chart) {\r\n    const anims = this._charts.get(chart);\r\n    if (!anims || !anims.items.length) {\r\n      return;\r\n    }\r\n    const items = anims.items;\r\n    let i = items.length - 1;\r\n    for (; i >= 0; --i) {\r\n      items[i].cancel();\r\n    }\r\n    anims.items = [];\r\n    this._notify(chart, anims, Date.now(), 'complete');\r\n  }\r\n  remove(chart) {\r\n    return this._charts.delete(chart);\r\n  }\r\n}\r\nvar animator = new Animator();\r\n\r\nconst transparent = 'transparent';\r\nconst interpolators = {\r\n  boolean(from, to, factor) {\r\n    return factor > 0.5 ? to : from;\r\n  },\r\n  color(from, to, factor) {\r\n    const c0 = color(from || transparent);\r\n    const c1 = c0.valid && color(to || transparent);\r\n    return c1 && c1.valid\r\n      ? c1.mix(c0, factor).hexString()\r\n      : to;\r\n  },\r\n  number(from, to, factor) {\r\n    return from + (to - from) * factor;\r\n  }\r\n};\r\nclass Animation {\r\n  constructor(cfg, target, prop, to) {\r\n    const currentValue = target[prop];\r\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n    const from = resolve([cfg.from, currentValue, to]);\r\n    this._active = true;\r\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\r\n    this._easing = effects[cfg.easing] || effects.linear;\r\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\r\n    this._duration = this._total = Math.floor(cfg.duration);\r\n    this._loop = !!cfg.loop;\r\n    this._target = target;\r\n    this._prop = prop;\r\n    this._from = from;\r\n    this._to = to;\r\n    this._promises = undefined;\r\n  }\r\n  active() {\r\n    return this._active;\r\n  }\r\n  update(cfg, to, date) {\r\n    const me = this;\r\n    if (me._active) {\r\n      me._notify(false);\r\n      const currentValue = me._target[me._prop];\r\n      const elapsed = date - me._start;\r\n      const remain = me._duration - elapsed;\r\n      me._start = date;\r\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\r\n      me._total += elapsed;\r\n      me._loop = !!cfg.loop;\r\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n      me._from = resolve([cfg.from, currentValue, to]);\r\n    }\r\n  }\r\n  cancel() {\r\n    const me = this;\r\n    if (me._active) {\r\n      me.tick(Date.now());\r\n      me._active = false;\r\n      me._notify(false);\r\n    }\r\n  }\r\n  tick(date) {\r\n    const me = this;\r\n    const elapsed = date - me._start;\r\n    const duration = me._duration;\r\n    const prop = me._prop;\r\n    const from = me._from;\r\n    const loop = me._loop;\r\n    const to = me._to;\r\n    let factor;\r\n    me._active = from !== to && (loop || (elapsed < duration));\r\n    if (!me._active) {\r\n      me._target[prop] = to;\r\n      me._notify(true);\r\n      return;\r\n    }\r\n    if (elapsed < 0) {\r\n      me._target[prop] = from;\r\n      return;\r\n    }\r\n    factor = (elapsed / duration) % 2;\r\n    factor = loop && factor > 1 ? 2 - factor : factor;\r\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\r\n    me._target[prop] = me._fn(from, to, factor);\r\n  }\r\n  wait() {\r\n    const promises = this._promises || (this._promises = []);\r\n    return new Promise((res, rej) => {\r\n      promises.push({res, rej});\r\n    });\r\n  }\r\n  _notify(resolved) {\r\n    const method = resolved ? 'res' : 'rej';\r\n    const promises = this._promises || [];\r\n    for (let i = 0; i < promises.length; i++) {\r\n      promises[i][method]();\r\n    }\r\n  }\r\n}\r\n\r\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\r\nconst colors = ['color', 'borderColor', 'backgroundColor'];\r\ndefaults.set('animation', {\r\n  delay: undefined,\r\n  duration: 1000,\r\n  easing: 'easeOutQuart',\r\n  fn: undefined,\r\n  from: undefined,\r\n  loop: undefined,\r\n  to: undefined,\r\n  type: undefined,\r\n});\r\nconst animationOptions = Object.keys(defaults.animation);\r\ndefaults.describe('animation', {\r\n  _fallback: false,\r\n  _indexable: false,\r\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\r\n});\r\ndefaults.set('animations', {\r\n  colors: {\r\n    type: 'color',\r\n    properties: colors\r\n  },\r\n  numbers: {\r\n    type: 'number',\r\n    properties: numbers\r\n  },\r\n});\r\ndefaults.describe('animations', {\r\n  _fallback: 'animation',\r\n});\r\ndefaults.set('transitions', {\r\n  active: {\r\n    animation: {\r\n      duration: 400\r\n    }\r\n  },\r\n  resize: {\r\n    animation: {\r\n      duration: 0\r\n    }\r\n  },\r\n  show: {\r\n    animations: {\r\n      colors: {\r\n        from: 'transparent'\r\n      },\r\n      visible: {\r\n        type: 'boolean',\r\n        duration: 0\r\n      },\r\n    }\r\n  },\r\n  hide: {\r\n    animations: {\r\n      colors: {\r\n        to: 'transparent'\r\n      },\r\n      visible: {\r\n        type: 'boolean',\r\n        easing: 'linear',\r\n        fn: v => v | 0\r\n      },\r\n    }\r\n  }\r\n});\r\nclass Animations {\r\n  constructor(chart, config) {\r\n    this._chart = chart;\r\n    this._properties = new Map();\r\n    this.configure(config);\r\n  }\r\n  configure(config) {\r\n    if (!isObject(config)) {\r\n      return;\r\n    }\r\n    const animatedProps = this._properties;\r\n    Object.getOwnPropertyNames(config).forEach(key => {\r\n      const cfg = config[key];\r\n      if (!isObject(cfg)) {\r\n        return;\r\n      }\r\n      const resolved = {};\r\n      for (const option of animationOptions) {\r\n        resolved[option] = cfg[option];\r\n      }\r\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\r\n        if (prop === key || !animatedProps.has(prop)) {\r\n          animatedProps.set(prop, resolved);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  _animateOptions(target, values) {\r\n    const newOptions = values.options;\r\n    const options = resolveTargetOptions(target, newOptions);\r\n    if (!options) {\r\n      return [];\r\n    }\r\n    const animations = this._createAnimations(options, newOptions);\r\n    if (newOptions.$shared) {\r\n      awaitAll(target.options.$animations, newOptions).then(() => {\r\n        target.options = newOptions;\r\n      }, () => {\r\n      });\r\n    }\r\n    return animations;\r\n  }\r\n  _createAnimations(target, values) {\r\n    const animatedProps = this._properties;\r\n    const animations = [];\r\n    const running = target.$animations || (target.$animations = {});\r\n    const props = Object.keys(values);\r\n    const date = Date.now();\r\n    let i;\r\n    for (i = props.length - 1; i >= 0; --i) {\r\n      const prop = props[i];\r\n      if (prop.charAt(0) === '$') {\r\n        continue;\r\n      }\r\n      if (prop === 'options') {\r\n        animations.push(...this._animateOptions(target, values));\r\n        continue;\r\n      }\r\n      const value = values[prop];\r\n      let animation = running[prop];\r\n      const cfg = animatedProps.get(prop);\r\n      if (animation) {\r\n        if (cfg && animation.active()) {\r\n          animation.update(cfg, value, date);\r\n          continue;\r\n        } else {\r\n          animation.cancel();\r\n        }\r\n      }\r\n      if (!cfg || !cfg.duration) {\r\n        target[prop] = value;\r\n        continue;\r\n      }\r\n      running[prop] = animation = new Animation(cfg, target, prop, value);\r\n      animations.push(animation);\r\n    }\r\n    return animations;\r\n  }\r\n  update(target, values) {\r\n    if (this._properties.size === 0) {\r\n      Object.assign(target, values);\r\n      return;\r\n    }\r\n    const animations = this._createAnimations(target, values);\r\n    if (animations.length) {\r\n      animator.add(this._chart, animations);\r\n      return true;\r\n    }\r\n  }\r\n}\r\nfunction awaitAll(animations, properties) {\r\n  const running = [];\r\n  const keys = Object.keys(properties);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    const anim = animations[keys[i]];\r\n    if (anim && anim.active()) {\r\n      running.push(anim.wait());\r\n    }\r\n  }\r\n  return Promise.all(running);\r\n}\r\nfunction resolveTargetOptions(target, newOptions) {\r\n  if (!newOptions) {\r\n    return;\r\n  }\r\n  let options = target.options;\r\n  if (!options) {\r\n    target.options = newOptions;\r\n    return;\r\n  }\r\n  if (options.$shared) {\r\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\r\n  }\r\n  return options;\r\n}\r\n\r\nfunction scaleClip(scale, allowedOverflow) {\r\n  const opts = scale && scale.options || {};\r\n  const reverse = opts.reverse;\r\n  const min = opts.min === undefined ? allowedOverflow : 0;\r\n  const max = opts.max === undefined ? allowedOverflow : 0;\r\n  return {\r\n    start: reverse ? max : min,\r\n    end: reverse ? min : max\r\n  };\r\n}\r\nfunction defaultClip(xScale, yScale, allowedOverflow) {\r\n  if (allowedOverflow === false) {\r\n    return false;\r\n  }\r\n  const x = scaleClip(xScale, allowedOverflow);\r\n  const y = scaleClip(yScale, allowedOverflow);\r\n  return {\r\n    top: y.end,\r\n    right: x.end,\r\n    bottom: y.start,\r\n    left: x.start\r\n  };\r\n}\r\nfunction toClip(value) {\r\n  let t, r, b, l;\r\n  if (isObject(value)) {\r\n    t = value.top;\r\n    r = value.right;\r\n    b = value.bottom;\r\n    l = value.left;\r\n  } else {\r\n    t = r = b = l = value;\r\n  }\r\n  return {\r\n    top: t,\r\n    right: r,\r\n    bottom: b,\r\n    left: l\r\n  };\r\n}\r\nfunction getSortedDatasetIndices(chart, filterVisible) {\r\n  const keys = [];\r\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\r\n  let i, ilen;\r\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    keys.push(metasets[i].index);\r\n  }\r\n  return keys;\r\n}\r\nfunction applyStack(stack, value, dsIndex, options) {\r\n  const keys = stack.keys;\r\n  const singleMode = options.mode === 'single';\r\n  let i, ilen, datasetIndex, otherValue;\r\n  if (value === null) {\r\n    return;\r\n  }\r\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n    datasetIndex = +keys[i];\r\n    if (datasetIndex === dsIndex) {\r\n      if (options.all) {\r\n        continue;\r\n      }\r\n      break;\r\n    }\r\n    otherValue = stack.values[datasetIndex];\r\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\r\n      value += otherValue;\r\n    }\r\n  }\r\n  return value;\r\n}\r\nfunction convertObjectDataToArray(data) {\r\n  const keys = Object.keys(data);\r\n  const adata = new Array(keys.length);\r\n  let i, ilen, key;\r\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n    key = keys[i];\r\n    adata[i] = {\r\n      x: key,\r\n      y: data[key]\r\n    };\r\n  }\r\n  return adata;\r\n}\r\nfunction isStacked(scale, meta) {\r\n  const stacked = scale && scale.options.stacked;\r\n  return stacked || (stacked === undefined && meta.stack !== undefined);\r\n}\r\nfunction getStackKey(indexScale, valueScale, meta) {\r\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\r\n}\r\nfunction getUserBounds(scale) {\r\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\r\n  return {\r\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\r\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\r\n  };\r\n}\r\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\r\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\r\n  return subStack[indexValue] || (subStack[indexValue] = {});\r\n}\r\nfunction getLastIndexInStack(stack, vScale, positive) {\r\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\r\n    const value = stack[meta.index];\r\n    if ((positive && value > 0) || (!positive && value < 0)) {\r\n      return meta.index;\r\n    }\r\n  }\r\n  return null;\r\n}\r\nfunction updateStacks(controller, parsed) {\r\n  const {chart, _cachedMeta: meta} = controller;\r\n  const stacks = chart._stacks || (chart._stacks = {});\r\n  const {iScale, vScale, index: datasetIndex} = meta;\r\n  const iAxis = iScale.axis;\r\n  const vAxis = vScale.axis;\r\n  const key = getStackKey(iScale, vScale, meta);\r\n  const ilen = parsed.length;\r\n  let stack;\r\n  for (let i = 0; i < ilen; ++i) {\r\n    const item = parsed[i];\r\n    const {[iAxis]: index, [vAxis]: value} = item;\r\n    const itemStacks = item._stacks || (item._stacks = {});\r\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\r\n    stack[datasetIndex] = value;\r\n    stack._top = getLastIndexInStack(stack, vScale, true);\r\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\r\n  }\r\n}\r\nfunction getFirstScaleId(chart, axis) {\r\n  const scales = chart.scales;\r\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\r\n}\r\nfunction createDatasetContext(parent, index) {\r\n  return Object.assign(Object.create(parent),\r\n    {\r\n      active: false,\r\n      dataset: undefined,\r\n      datasetIndex: index,\r\n      index,\r\n      mode: 'default',\r\n      type: 'dataset'\r\n    }\r\n  );\r\n}\r\nfunction createDataContext(parent, index, element) {\r\n  return Object.assign(Object.create(parent), {\r\n    active: false,\r\n    dataIndex: index,\r\n    parsed: undefined,\r\n    raw: undefined,\r\n    element,\r\n    index,\r\n    mode: 'default',\r\n    type: 'data'\r\n  });\r\n}\r\nfunction clearStacks(meta, items) {\r\n  items = items || meta._parsed;\r\n  for (const parsed of items) {\r\n    const stacks = parsed._stacks;\r\n    if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\r\n      return;\r\n    }\r\n    delete stacks[meta.vScale.id][meta.index];\r\n  }\r\n}\r\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\r\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\r\nclass DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    this.chart = chart;\r\n    this._ctx = chart.ctx;\r\n    this.index = datasetIndex;\r\n    this._cachedDataOpts = {};\r\n    this._cachedMeta = this.getMeta();\r\n    this._type = this._cachedMeta.type;\r\n    this.options = undefined;\r\n    this._parsing = false;\r\n    this._data = undefined;\r\n    this._objectData = undefined;\r\n    this._sharedOptions = undefined;\r\n    this._drawStart = undefined;\r\n    this._drawCount = undefined;\r\n    this.enableOptionSharing = false;\r\n    this.$context = undefined;\r\n    this.initialize();\r\n  }\r\n  initialize() {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    me.configure();\r\n    me.linkScales();\r\n    meta._stacked = isStacked(meta.vScale, meta);\r\n    me.addElements();\r\n  }\r\n  updateIndex(datasetIndex) {\r\n    this.index = datasetIndex;\r\n  }\r\n  linkScales() {\r\n    const me = this;\r\n    const chart = me.chart;\r\n    const meta = me._cachedMeta;\r\n    const dataset = me.getDataset();\r\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\r\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\r\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\r\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\r\n    const indexAxis = meta.indexAxis;\r\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\r\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\r\n    meta.xScale = me.getScaleForId(xid);\r\n    meta.yScale = me.getScaleForId(yid);\r\n    meta.rScale = me.getScaleForId(rid);\r\n    meta.iScale = me.getScaleForId(iid);\r\n    meta.vScale = me.getScaleForId(vid);\r\n  }\r\n  getDataset() {\r\n    return this.chart.data.datasets[this.index];\r\n  }\r\n  getMeta() {\r\n    return this.chart.getDatasetMeta(this.index);\r\n  }\r\n  getScaleForId(scaleID) {\r\n    return this.chart.scales[scaleID];\r\n  }\r\n  _getOtherScale(scale) {\r\n    const meta = this._cachedMeta;\r\n    return scale === meta.iScale\r\n      ? meta.vScale\r\n      : meta.iScale;\r\n  }\r\n  reset() {\r\n    this._update('reset');\r\n  }\r\n  _destroy() {\r\n    const meta = this._cachedMeta;\r\n    if (this._data) {\r\n      unlistenArrayEvents(this._data, this);\r\n    }\r\n    if (meta._stacked) {\r\n      clearStacks(meta);\r\n    }\r\n  }\r\n  _dataCheck() {\r\n    const me = this;\r\n    const dataset = me.getDataset();\r\n    const data = dataset.data || (dataset.data = []);\r\n    if (isObject(data)) {\r\n      me._data = convertObjectDataToArray(data);\r\n    } else if (me._data !== data) {\r\n      if (me._data) {\r\n        unlistenArrayEvents(me._data, me);\r\n        clearStacks(me._cachedMeta);\r\n      }\r\n      if (data && Object.isExtensible(data)) {\r\n        listenArrayEvents(data, me);\r\n      }\r\n      me._data = data;\r\n    }\r\n  }\r\n  addElements() {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    me._dataCheck();\r\n    if (me.datasetElementType) {\r\n      meta.dataset = new me.datasetElementType();\r\n    }\r\n  }\r\n  buildOrUpdateElements(resetNewElements) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const dataset = me.getDataset();\r\n    let stackChanged = false;\r\n    me._dataCheck();\r\n    meta._stacked = isStacked(meta.vScale, meta);\r\n    if (meta.stack !== dataset.stack) {\r\n      stackChanged = true;\r\n      clearStacks(meta);\r\n      meta.stack = dataset.stack;\r\n    }\r\n    me._resyncElements(resetNewElements);\r\n    if (stackChanged) {\r\n      updateStacks(me, meta._parsed);\r\n    }\r\n  }\r\n  configure() {\r\n    const me = this;\r\n    const config = me.chart.config;\r\n    const scopeKeys = config.datasetScopeKeys(me._type);\r\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\r\n    me.options = config.createResolver(scopes, me.getContext());\r\n    me._parsing = me.options.parsing;\r\n  }\r\n  parse(start, count) {\r\n    const me = this;\r\n    const {_cachedMeta: meta, _data: data} = me;\r\n    const {iScale, _stacked} = meta;\r\n    const iAxis = iScale.axis;\r\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\r\n    let prev = start > 0 && meta._parsed[start - 1];\r\n    let i, cur, parsed;\r\n    if (me._parsing === false) {\r\n      meta._parsed = data;\r\n      meta._sorted = true;\r\n      parsed = data;\r\n    } else {\r\n      if (isArray(data[start])) {\r\n        parsed = me.parseArrayData(meta, data, start, count);\r\n      } else if (isObject(data[start])) {\r\n        parsed = me.parseObjectData(meta, data, start, count);\r\n      } else {\r\n        parsed = me.parsePrimitiveData(meta, data, start, count);\r\n      }\r\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\r\n      for (i = 0; i < count; ++i) {\r\n        meta._parsed[i + start] = cur = parsed[i];\r\n        if (sorted) {\r\n          if (isNotInOrderComparedToPrev()) {\r\n            sorted = false;\r\n          }\r\n          prev = cur;\r\n        }\r\n      }\r\n      meta._sorted = sorted;\r\n    }\r\n    if (_stacked) {\r\n      updateStacks(me, parsed);\r\n    }\r\n  }\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    const {iScale, vScale} = meta;\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const labels = iScale.getLabels();\r\n    const singleScale = iScale === vScale;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      parsed[i] = {\r\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\r\n        [vAxis]: vScale.parse(data[index], index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      item = data[index];\r\n      parsed[i] = {\r\n        x: xScale.parse(item[0], index),\r\n        y: yScale.parse(item[1], index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      item = data[index];\r\n      parsed[i] = {\r\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\r\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  getParsed(index) {\r\n    return this._cachedMeta._parsed[index];\r\n  }\r\n  getDataElement(index) {\r\n    return this._cachedMeta.data[index];\r\n  }\r\n  applyStack(scale, parsed, mode) {\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const value = parsed[scale.axis];\r\n    const stack = {\r\n      keys: getSortedDatasetIndices(chart, true),\r\n      values: parsed._stacks[scale.axis]\r\n    };\r\n    return applyStack(stack, value, meta.index, {mode});\r\n  }\r\n  updateRangeFromParsed(range, scale, parsed, stack) {\r\n    const parsedValue = parsed[scale.axis];\r\n    let value = parsedValue === null ? NaN : parsedValue;\r\n    const values = stack && parsed._stacks[scale.axis];\r\n    if (stack && values) {\r\n      stack.values = values;\r\n      range.min = Math.min(range.min, value);\r\n      range.max = Math.max(range.max, value);\r\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\r\n    }\r\n    range.min = Math.min(range.min, value);\r\n    range.max = Math.max(range.max, value);\r\n  }\r\n  getMinMax(scale, canStack) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const _parsed = meta._parsed;\r\n    const sorted = meta._sorted && scale === meta.iScale;\r\n    const ilen = _parsed.length;\r\n    const otherScale = me._getOtherScale(scale);\r\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\r\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\r\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\r\n    let i, value, parsed, otherValue;\r\n    function _skip() {\r\n      parsed = _parsed[i];\r\n      value = parsed[scale.axis];\r\n      otherValue = parsed[otherScale.axis];\r\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\r\n    }\r\n    for (i = 0; i < ilen; ++i) {\r\n      if (_skip()) {\r\n        continue;\r\n      }\r\n      me.updateRangeFromParsed(range, scale, parsed, stack);\r\n      if (sorted) {\r\n        break;\r\n      }\r\n    }\r\n    if (sorted) {\r\n      for (i = ilen - 1; i >= 0; --i) {\r\n        if (_skip()) {\r\n          continue;\r\n        }\r\n        me.updateRangeFromParsed(range, scale, parsed, stack);\r\n        break;\r\n      }\r\n    }\r\n    return range;\r\n  }\r\n  getAllParsedValues(scale) {\r\n    const parsed = this._cachedMeta._parsed;\r\n    const values = [];\r\n    let i, ilen, value;\r\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\r\n      value = parsed[i][scale.axis];\r\n      if (isNumberFinite(value)) {\r\n        values.push(value);\r\n      }\r\n    }\r\n    return values;\r\n  }\r\n  getMaxOverflow() {\r\n    return false;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const vScale = meta.vScale;\r\n    const parsed = me.getParsed(index);\r\n    return {\r\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\r\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\r\n    };\r\n  }\r\n  _update(mode) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    me.configure();\r\n    me._cachedDataOpts = {};\r\n    me.update(mode || 'default');\r\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\r\n  }\r\n  update(mode) {}\r\n  draw() {\r\n    const me = this;\r\n    const ctx = me._ctx;\r\n    const chart = me.chart;\r\n    const meta = me._cachedMeta;\r\n    const elements = meta.data || [];\r\n    const area = chart.chartArea;\r\n    const active = [];\r\n    const start = me._drawStart || 0;\r\n    const count = me._drawCount || (elements.length - start);\r\n    let i;\r\n    if (meta.dataset) {\r\n      meta.dataset.draw(ctx, area, start, count);\r\n    }\r\n    for (i = start; i < start + count; ++i) {\r\n      const element = elements[i];\r\n      if (element.active) {\r\n        active.push(element);\r\n      } else {\r\n        element.draw(ctx, area);\r\n      }\r\n    }\r\n    for (i = 0; i < active.length; ++i) {\r\n      active[i].draw(ctx, area);\r\n    }\r\n  }\r\n  getStyle(index, active) {\r\n    const mode = active ? 'active' : 'default';\r\n    return index === undefined && this._cachedMeta.dataset\r\n      ? this.resolveDatasetElementOptions(mode)\r\n      : this.resolveDataElementOptions(index || 0, mode);\r\n  }\r\n  getContext(index, active, mode) {\r\n    const me = this;\r\n    const dataset = me.getDataset();\r\n    let context;\r\n    if (index >= 0 && index < me._cachedMeta.data.length) {\r\n      const element = me._cachedMeta.data[index];\r\n      context = element.$context ||\r\n        (element.$context = createDataContext(me.getContext(), index, element));\r\n      context.parsed = me.getParsed(index);\r\n      context.raw = dataset.data[index];\r\n    } else {\r\n      context = me.$context ||\r\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\r\n      context.dataset = dataset;\r\n    }\r\n    context.active = !!active;\r\n    context.mode = mode;\r\n    return context;\r\n  }\r\n  resolveDatasetElementOptions(mode) {\r\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\r\n  }\r\n  resolveDataElementOptions(index, mode) {\r\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\r\n  }\r\n  _resolveElementOptions(elementType, mode = 'default', index) {\r\n    const me = this;\r\n    const active = mode === 'active';\r\n    const cache = me._cachedDataOpts;\r\n    const cacheKey = elementType + '-' + mode;\r\n    const cached = cache[cacheKey];\r\n    const sharing = me.enableOptionSharing && defined(index);\r\n    if (cached) {\r\n      return cloneIfNotShared(cached, sharing);\r\n    }\r\n    const config = me.chart.config;\r\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\r\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\r\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\r\n    const names = Object.keys(defaults.elements[elementType]);\r\n    const context = () => me.getContext(index, active);\r\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\r\n    if (values.$shared) {\r\n      values.$shared = sharing;\r\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\r\n    }\r\n    return values;\r\n  }\r\n  _resolveAnimations(index, transition, active) {\r\n    const me = this;\r\n    const chart = me.chart;\r\n    const cache = me._cachedDataOpts;\r\n    const cacheKey = `animation-${transition}`;\r\n    const cached = cache[cacheKey];\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    let options;\r\n    if (chart.options.animation !== false) {\r\n      const config = me.chart.config;\r\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\r\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\r\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\r\n    }\r\n    const animations = new Animations(chart, options && options.animations);\r\n    if (options && options._cacheable) {\r\n      cache[cacheKey] = Object.freeze(animations);\r\n    }\r\n    return animations;\r\n  }\r\n  getSharedOptions(options) {\r\n    if (!options.$shared) {\r\n      return;\r\n    }\r\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\r\n  }\r\n  includeOptions(mode, sharedOptions) {\r\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\r\n  }\r\n  updateElement(element, index, properties, mode) {\r\n    if (isDirectUpdateMode(mode)) {\r\n      Object.assign(element, properties);\r\n    } else {\r\n      this._resolveAnimations(index, mode).update(element, properties);\r\n    }\r\n  }\r\n  updateSharedOptions(sharedOptions, mode, newOptions) {\r\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\r\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\r\n    }\r\n  }\r\n  _setStyle(element, index, mode, active) {\r\n    element.active = active;\r\n    const options = this.getStyle(index, active);\r\n    this._resolveAnimations(index, mode, active).update(element, {\r\n      options: (!active && this.getSharedOptions(options)) || options\r\n    });\r\n  }\r\n  removeHoverStyle(element, datasetIndex, index) {\r\n    this._setStyle(element, index, 'active', false);\r\n  }\r\n  setHoverStyle(element, datasetIndex, index) {\r\n    this._setStyle(element, index, 'active', true);\r\n  }\r\n  _removeDatasetHoverStyle() {\r\n    const element = this._cachedMeta.dataset;\r\n    if (element) {\r\n      this._setStyle(element, undefined, 'active', false);\r\n    }\r\n  }\r\n  _setDatasetHoverStyle() {\r\n    const element = this._cachedMeta.dataset;\r\n    if (element) {\r\n      this._setStyle(element, undefined, 'active', true);\r\n    }\r\n  }\r\n  _resyncElements(resetNewElements) {\r\n    const me = this;\r\n    const numMeta = me._cachedMeta.data.length;\r\n    const numData = me._data.length;\r\n    if (numData > numMeta) {\r\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\r\n    } else if (numData < numMeta) {\r\n      me._removeElements(numData, numMeta - numData);\r\n    }\r\n    const count = Math.min(numData, numMeta);\r\n    if (count) {\r\n      me.parse(0, count);\r\n    }\r\n  }\r\n  _insertElements(start, count, resetNewElements = true) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const data = meta.data;\r\n    const end = start + count;\r\n    let i;\r\n    const move = (arr) => {\r\n      arr.length += count;\r\n      for (i = arr.length - 1; i >= end; i--) {\r\n        arr[i] = arr[i - count];\r\n      }\r\n    };\r\n    move(data);\r\n    for (i = start; i < end; ++i) {\r\n      data[i] = new me.dataElementType();\r\n    }\r\n    if (me._parsing) {\r\n      move(meta._parsed);\r\n    }\r\n    me.parse(start, count);\r\n    if (resetNewElements) {\r\n      me.updateElements(data, start, count, 'reset');\r\n    }\r\n  }\r\n  updateElements(element, start, count, mode) {}\r\n  _removeElements(start, count) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    if (me._parsing) {\r\n      const removed = meta._parsed.splice(start, count);\r\n      if (meta._stacked) {\r\n        clearStacks(meta, removed);\r\n      }\r\n    }\r\n    meta.data.splice(start, count);\r\n  }\r\n  _onDataPush() {\r\n    const count = arguments.length;\r\n    this._insertElements(this.getDataset().data.length - count, count);\r\n  }\r\n  _onDataPop() {\r\n    this._removeElements(this._cachedMeta.data.length - 1, 1);\r\n  }\r\n  _onDataShift() {\r\n    this._removeElements(0, 1);\r\n  }\r\n  _onDataSplice(start, count) {\r\n    this._removeElements(start, count);\r\n    this._insertElements(start, arguments.length - 2);\r\n  }\r\n  _onDataUnshift() {\r\n    this._insertElements(0, arguments.length);\r\n  }\r\n}\r\nDatasetController.defaults = {};\r\nDatasetController.prototype.datasetElementType = null;\r\nDatasetController.prototype.dataElementType = null;\r\n\r\nfunction getAllScaleValues(scale) {\r\n  if (!scale._cache.$bar) {\r\n    const metas = scale.getMatchingVisibleMetas('bar');\r\n    let values = [];\r\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\r\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\r\n    }\r\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\r\n  }\r\n  return scale._cache.$bar;\r\n}\r\nfunction computeMinSampleSize(scale) {\r\n  const values = getAllScaleValues(scale);\r\n  let min = scale._length;\r\n  let i, ilen, curr, prev;\r\n  const updateMinAndPrev = () => {\r\n    if (curr === 32767 || curr === -32768) {\r\n      return;\r\n    }\r\n    if (defined(prev)) {\r\n      min = Math.min(min, Math.abs(curr - prev) || min);\r\n    }\r\n    prev = curr;\r\n  };\r\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\r\n    curr = scale.getPixelForValue(values[i]);\r\n    updateMinAndPrev();\r\n  }\r\n  prev = undefined;\r\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\r\n    curr = scale.getPixelForTick(i);\r\n    updateMinAndPrev();\r\n  }\r\n  return min;\r\n}\r\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\r\n  const thickness = options.barThickness;\r\n  let size, ratio;\r\n  if (isNullOrUndef(thickness)) {\r\n    size = ruler.min * options.categoryPercentage;\r\n    ratio = options.barPercentage;\r\n  } else {\r\n    size = thickness * stackCount;\r\n    ratio = 1;\r\n  }\r\n  return {\r\n    chunk: size / stackCount,\r\n    ratio,\r\n    start: ruler.pixels[index] - (size / 2)\r\n  };\r\n}\r\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\r\n  const pixels = ruler.pixels;\r\n  const curr = pixels[index];\r\n  let prev = index > 0 ? pixels[index - 1] : null;\r\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\r\n  const percent = options.categoryPercentage;\r\n  if (prev === null) {\r\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\r\n  }\r\n  if (next === null) {\r\n    next = curr + curr - prev;\r\n  }\r\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\r\n  const size = Math.abs(next - prev) / 2 * percent;\r\n  return {\r\n    chunk: size / stackCount,\r\n    ratio: options.barPercentage,\r\n    start\r\n  };\r\n}\r\nfunction parseFloatBar(entry, item, vScale, i) {\r\n  const startValue = vScale.parse(entry[0], i);\r\n  const endValue = vScale.parse(entry[1], i);\r\n  const min = Math.min(startValue, endValue);\r\n  const max = Math.max(startValue, endValue);\r\n  let barStart = min;\r\n  let barEnd = max;\r\n  if (Math.abs(min) > Math.abs(max)) {\r\n    barStart = max;\r\n    barEnd = min;\r\n  }\r\n  item[vScale.axis] = barEnd;\r\n  item._custom = {\r\n    barStart,\r\n    barEnd,\r\n    start: startValue,\r\n    end: endValue,\r\n    min,\r\n    max\r\n  };\r\n}\r\nfunction parseValue(entry, item, vScale, i) {\r\n  if (isArray(entry)) {\r\n    parseFloatBar(entry, item, vScale, i);\r\n  } else {\r\n    item[vScale.axis] = vScale.parse(entry, i);\r\n  }\r\n  return item;\r\n}\r\nfunction parseArrayOrPrimitive(meta, data, start, count) {\r\n  const iScale = meta.iScale;\r\n  const vScale = meta.vScale;\r\n  const labels = iScale.getLabels();\r\n  const singleScale = iScale === vScale;\r\n  const parsed = [];\r\n  let i, ilen, item, entry;\r\n  for (i = start, ilen = start + count; i < ilen; ++i) {\r\n    entry = data[i];\r\n    item = {};\r\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\r\n    parsed.push(parseValue(entry, item, vScale, i));\r\n  }\r\n  return parsed;\r\n}\r\nfunction isFloatBar(custom) {\r\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\r\n}\r\nclass BarController extends DatasetController {\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    return parseArrayOrPrimitive(meta, data, start, count);\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    return parseArrayOrPrimitive(meta, data, start, count);\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {iScale, vScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n    const parsed = [];\r\n    let i, ilen, item, obj;\r\n    for (i = start, ilen = start + count; i < ilen; ++i) {\r\n      obj = data[i];\r\n      item = {};\r\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\r\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\r\n    }\r\n    return parsed;\r\n  }\r\n  updateRangeFromParsed(range, scale, parsed, stack) {\r\n    super.updateRangeFromParsed(range, scale, parsed, stack);\r\n    const custom = parsed._custom;\r\n    if (custom && scale === this._cachedMeta.vScale) {\r\n      range.min = Math.min(range.min, custom.min);\r\n      range.max = Math.max(range.max, custom.max);\r\n    }\r\n  }\r\n  getLabelAndValue(index) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const {iScale, vScale} = meta;\r\n    const parsed = me.getParsed(index);\r\n    const custom = parsed._custom;\r\n    const value = isFloatBar(custom)\r\n      ? '[' + custom.start + ', ' + custom.end + ']'\r\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\r\n    return {\r\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\r\n      value\r\n    };\r\n  }\r\n  initialize() {\r\n    const me = this;\r\n    me.enableOptionSharing = true;\r\n    super.initialize();\r\n    const meta = me._cachedMeta;\r\n    meta.stack = me.getDataset().stack;\r\n  }\r\n  update(mode) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    me.updateElements(meta.data, 0, meta.data.length, mode);\r\n  }\r\n  updateElements(bars, start, count, mode) {\r\n    const me = this;\r\n    const reset = mode === 'reset';\r\n    const vScale = me._cachedMeta.vScale;\r\n    const base = vScale.getBasePixel();\r\n    const horizontal = vScale.isHorizontal();\r\n    const ruler = me._getRuler();\r\n    const firstOpts = me.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = me.getSharedOptions(firstOpts);\r\n    const includeOptions = me.includeOptions(mode, sharedOptions);\r\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n    for (let i = start; i < start + count; i++) {\r\n      const parsed = me.getParsed(i);\r\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\r\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\r\n      const stack = (parsed._stacks || {})[vScale.axis];\r\n      const properties = {\r\n        horizontal,\r\n        base: vpixels.base,\r\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (me.index === stack._top || me.index === stack._bottom),\r\n        x: horizontal ? vpixels.head : ipixels.center,\r\n        y: horizontal ? ipixels.center : vpixels.head,\r\n        height: horizontal ? ipixels.size : undefined,\r\n        width: horizontal ? undefined : ipixels.size\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\r\n      }\r\n      me.updateElement(bars[i], i, properties, mode);\r\n    }\r\n  }\r\n  _getStacks(last, dataIndex) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\r\n    const stacked = iScale.options.stacked;\r\n    const ilen = metasets.length;\r\n    const stacks = [];\r\n    let i, item;\r\n    for (i = 0; i < ilen; ++i) {\r\n      item = metasets[i];\r\n      if (typeof dataIndex !== 'undefined') {\r\n        const val = item.controller.getParsed(dataIndex)[\r\n          item.controller._cachedMeta.vScale.axis\r\n        ];\r\n        if (isNullOrUndef(val) || isNaN(val)) {\r\n          continue;\r\n        }\r\n      }\r\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\r\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\r\n        stacks.push(item.stack);\r\n      }\r\n      if (item.index === last) {\r\n        break;\r\n      }\r\n    }\r\n    if (!stacks.length) {\r\n      stacks.push(undefined);\r\n    }\r\n    return stacks;\r\n  }\r\n  _getStackCount(index) {\r\n    return this._getStacks(undefined, index).length;\r\n  }\r\n  _getStackIndex(datasetIndex, name, dataIndex) {\r\n    const stacks = this._getStacks(datasetIndex, dataIndex);\r\n    const index = (name !== undefined)\r\n      ? stacks.indexOf(name)\r\n      : -1;\r\n    return (index === -1)\r\n      ? stacks.length - 1\r\n      : index;\r\n  }\r\n  _getRuler() {\r\n    const me = this;\r\n    const opts = me.options;\r\n    const meta = me._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const pixels = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\r\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\r\n    }\r\n    const barThickness = opts.barThickness;\r\n    const min = barThickness || computeMinSampleSize(iScale);\r\n    return {\r\n      min,\r\n      pixels,\r\n      start: iScale._startPixel,\r\n      end: iScale._endPixel,\r\n      stackCount: me._getStackCount(),\r\n      scale: iScale,\r\n      grouped: opts.grouped,\r\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\r\n    };\r\n  }\r\n  _calculateBarValuePixels(index) {\r\n    const me = this;\r\n    const {vScale, _stacked} = me._cachedMeta;\r\n    const {base: baseValue, minBarLength} = me.options;\r\n    const parsed = me.getParsed(index);\r\n    const custom = parsed._custom;\r\n    const floating = isFloatBar(custom);\r\n    let value = parsed[vScale.axis];\r\n    let start = 0;\r\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\r\n    let head, size;\r\n    if (length !== value) {\r\n      start = length - value;\r\n      length = value;\r\n    }\r\n    if (floating) {\r\n      value = custom.barStart;\r\n      length = custom.barEnd - custom.barStart;\r\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\r\n        start = 0;\r\n      }\r\n      start += value;\r\n    }\r\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\r\n    let base = vScale.getPixelForValue(startValue);\r\n    if (this.chart.getDataVisibility(index)) {\r\n      head = vScale.getPixelForValue(start + length);\r\n    } else {\r\n      head = base;\r\n    }\r\n    size = head - base;\r\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\r\n      size = size < 0 ? -minBarLength : minBarLength;\r\n      if (value === 0) {\r\n        base -= size / 2;\r\n      }\r\n      head = base + size;\r\n    }\r\n    const actualBase = baseValue || 0;\r\n    if (base === vScale.getPixelForValue(actualBase)) {\r\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\r\n      if (size > 0) {\r\n        base += halfGrid;\r\n        size -= halfGrid;\r\n      } else if (size < 0) {\r\n        base -= halfGrid;\r\n        size += halfGrid;\r\n      }\r\n    }\r\n    return {\r\n      size,\r\n      base,\r\n      head,\r\n      center: head + size / 2\r\n    };\r\n  }\r\n  _calculateBarIndexPixels(index, ruler) {\r\n    const me = this;\r\n    const scale = ruler.scale;\r\n    const options = me.options;\r\n    const skipNull = options.skipNull;\r\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\r\n    let center, size;\r\n    if (ruler.grouped) {\r\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\r\n      const range = options.barThickness === 'flex'\r\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\r\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\r\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\r\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\r\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\r\n    } else {\r\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\r\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\r\n    }\r\n    return {\r\n      base: center - size / 2,\r\n      head: center + size / 2,\r\n      center,\r\n      size\r\n    };\r\n  }\r\n  draw() {\r\n    const me = this;\r\n    const chart = me.chart;\r\n    const meta = me._cachedMeta;\r\n    const vScale = meta.vScale;\r\n    const rects = meta.data;\r\n    const ilen = rects.length;\r\n    let i = 0;\r\n    clipArea(chart.ctx, chart.chartArea);\r\n    for (; i < ilen; ++i) {\r\n      if (me.getParsed(i)[vScale.axis] !== null) {\r\n        rects[i].draw(me._ctx);\r\n      }\r\n    }\r\n    unclipArea(chart.ctx);\r\n  }\r\n}\r\nBarController.id = 'bar';\r\nBarController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'bar',\r\n  categoryPercentage: 0.8,\r\n  barPercentage: 0.9,\r\n  grouped: true,\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'base', 'width', 'height']\r\n    }\r\n  }\r\n};\r\nBarController.overrides = {\r\n  interaction: {\r\n    mode: 'index'\r\n  },\r\n  scales: {\r\n    _index_: {\r\n      type: 'category',\r\n      offset: true,\r\n      grid: {\r\n        offset: true\r\n      }\r\n    },\r\n    _value_: {\r\n      type: 'linear',\r\n      beginAtZero: true,\r\n    }\r\n  }\r\n};\r\n\r\nclass BubbleController extends DatasetController {\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const parsed = [];\r\n    let i, ilen, item;\r\n    for (i = start, ilen = start + count; i < ilen; ++i) {\r\n      item = data[i];\r\n      parsed.push({\r\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\r\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\r\n        _custom: item && item.r && +item.r\r\n      });\r\n    }\r\n    return parsed;\r\n  }\r\n  getMaxOverflow() {\r\n    const {data, _parsed} = this._cachedMeta;\r\n    let max = 0;\r\n    for (let i = data.length - 1; i >= 0; --i) {\r\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\r\n    }\r\n    return max > 0 && max;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const {xScale, yScale} = meta;\r\n    const parsed = me.getParsed(index);\r\n    const x = xScale.getLabelForValue(parsed.x);\r\n    const y = yScale.getLabelForValue(parsed.y);\r\n    const r = parsed._custom;\r\n    return {\r\n      label: meta.label,\r\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\r\n    };\r\n  }\r\n  update(mode) {\r\n    const me = this;\r\n    const points = me._cachedMeta.data;\r\n    me.updateElements(points, 0, points.length, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const me = this;\r\n    const reset = mode === 'reset';\r\n    const {xScale, yScale} = me._cachedMeta;\r\n    const firstOpts = me.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = me.getSharedOptions(firstOpts);\r\n    const includeOptions = me.includeOptions(mode, sharedOptions);\r\n    for (let i = start; i < start + count; i++) {\r\n      const point = points[i];\r\n      const parsed = !reset && me.getParsed(i);\r\n      const x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\r\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\r\n      const properties = {\r\n        x,\r\n        y,\r\n        skip: isNaN(x) || isNaN(y)\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = me.resolveDataElementOptions(i, mode);\r\n        if (reset) {\r\n          properties.options.radius = 0;\r\n        }\r\n      }\r\n      me.updateElement(point, i, properties, mode);\r\n    }\r\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  resolveDataElementOptions(index, mode) {\r\n    const parsed = this.getParsed(index);\r\n    let values = super.resolveDataElementOptions(index, mode);\r\n    if (values.$shared) {\r\n      values = Object.assign({}, values, {$shared: false});\r\n    }\r\n    const radius = values.radius;\r\n    if (mode !== 'active') {\r\n      values.radius = 0;\r\n    }\r\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\r\n    return values;\r\n  }\r\n}\r\nBubbleController.id = 'bubble';\r\nBubbleController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'point',\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'borderWidth', 'radius']\r\n    }\r\n  }\r\n};\r\nBubbleController.overrides = {\r\n  scales: {\r\n    x: {\r\n      type: 'linear'\r\n    },\r\n    y: {\r\n      type: 'linear'\r\n    }\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nfunction getRatioAndOffset(rotation, circumference, cutout) {\r\n  let ratioX = 1;\r\n  let ratioY = 1;\r\n  let offsetX = 0;\r\n  let offsetY = 0;\r\n  if (circumference < TAU) {\r\n    const startAngle = rotation;\r\n    const endAngle = startAngle + circumference;\r\n    const startX = Math.cos(startAngle);\r\n    const startY = Math.sin(startAngle);\r\n    const endX = Math.cos(endAngle);\r\n    const endY = Math.sin(endAngle);\r\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\r\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\r\n    const maxX = calcMax(0, startX, endX);\r\n    const maxY = calcMax(HALF_PI, startY, endY);\r\n    const minX = calcMin(PI, startX, endX);\r\n    const minY = calcMin(PI + HALF_PI, startY, endY);\r\n    ratioX = (maxX - minX) / 2;\r\n    ratioY = (maxY - minY) / 2;\r\n    offsetX = -(maxX + minX) / 2;\r\n    offsetY = -(maxY + minY) / 2;\r\n  }\r\n  return {ratioX, ratioY, offsetX, offsetY};\r\n}\r\nclass DoughnutController extends DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    super(chart, datasetIndex);\r\n    this.enableOptionSharing = true;\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n    this.offsetX = undefined;\r\n    this.offsetY = undefined;\r\n  }\r\n  linkScales() {}\r\n  parse(start, count) {\r\n    const data = this.getDataset().data;\r\n    const meta = this._cachedMeta;\r\n    let i, ilen;\r\n    for (i = start, ilen = start + count; i < ilen; ++i) {\r\n      meta._parsed[i] = +data[i];\r\n    }\r\n  }\r\n  _getRotation() {\r\n    return toRadians(this.options.rotation - 90);\r\n  }\r\n  _getCircumference() {\r\n    return toRadians(this.options.circumference);\r\n  }\r\n  _getRotationExtents() {\r\n    let min = TAU;\r\n    let max = -TAU;\r\n    const me = this;\r\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\r\n      if (me.chart.isDatasetVisible(i)) {\r\n        const controller = me.chart.getDatasetMeta(i).controller;\r\n        const rotation = controller._getRotation();\r\n        const circumference = controller._getCircumference();\r\n        min = Math.min(min, rotation);\r\n        max = Math.max(max, rotation + circumference);\r\n      }\r\n    }\r\n    return {\r\n      rotation: min,\r\n      circumference: max - min,\r\n    };\r\n  }\r\n  update(mode) {\r\n    const me = this;\r\n    const chart = me.chart;\r\n    const {chartArea} = chart;\r\n    const meta = me._cachedMeta;\r\n    const arcs = meta.data;\r\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\r\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\r\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\r\n    const chartWeight = me._getRingWeight(me.index);\r\n    const {circumference, rotation} = me._getRotationExtents();\r\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\r\n    const maxWidth = (chartArea.width - spacing) / ratioX;\r\n    const maxHeight = (chartArea.height - spacing) / ratioY;\r\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\r\n    const outerRadius = toDimension(me.options.radius, maxRadius);\r\n    const innerRadius = Math.max(outerRadius * cutout, 0);\r\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\r\n    me.offsetX = offsetX * outerRadius;\r\n    me.offsetY = offsetY * outerRadius;\r\n    meta.total = me.calculateTotal();\r\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\r\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\r\n    me.updateElements(arcs, 0, arcs.length, mode);\r\n  }\r\n  _circumference(i, reset) {\r\n    const me = this;\r\n    const opts = me.options;\r\n    const meta = me._cachedMeta;\r\n    const circumference = me._getCircumference();\r\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\r\n      return 0;\r\n    }\r\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\r\n  }\r\n  updateElements(arcs, start, count, mode) {\r\n    const me = this;\r\n    const reset = mode === 'reset';\r\n    const chart = me.chart;\r\n    const chartArea = chart.chartArea;\r\n    const opts = chart.options;\r\n    const animationOpts = opts.animation;\r\n    const centerX = (chartArea.left + chartArea.right) / 2;\r\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\r\n    const animateScale = reset && animationOpts.animateScale;\r\n    const innerRadius = animateScale ? 0 : me.innerRadius;\r\n    const outerRadius = animateScale ? 0 : me.outerRadius;\r\n    const firstOpts = me.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = me.getSharedOptions(firstOpts);\r\n    const includeOptions = me.includeOptions(mode, sharedOptions);\r\n    let startAngle = me._getRotation();\r\n    let i;\r\n    for (i = 0; i < start; ++i) {\r\n      startAngle += me._circumference(i, reset);\r\n    }\r\n    for (i = start; i < start + count; ++i) {\r\n      const circumference = me._circumference(i, reset);\r\n      const arc = arcs[i];\r\n      const properties = {\r\n        x: centerX + me.offsetX,\r\n        y: centerY + me.offsetY,\r\n        startAngle,\r\n        endAngle: startAngle + circumference,\r\n        circumference,\r\n        outerRadius,\r\n        innerRadius\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\r\n      }\r\n      startAngle += circumference;\r\n      me.updateElement(arc, i, properties, mode);\r\n    }\r\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  calculateTotal() {\r\n    const meta = this._cachedMeta;\r\n    const metaData = meta.data;\r\n    let total = 0;\r\n    let i;\r\n    for (i = 0; i < metaData.length; i++) {\r\n      const value = meta._parsed[i];\r\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\r\n        total += Math.abs(value);\r\n      }\r\n    }\r\n    return total;\r\n  }\r\n  calculateCircumference(value) {\r\n    const total = this._cachedMeta.total;\r\n    if (total > 0 && !isNaN(value)) {\r\n      return TAU * (Math.abs(value) / total);\r\n    }\r\n    return 0;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const chart = me.chart;\r\n    const labels = chart.data.labels || [];\r\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\r\n    return {\r\n      label: labels[index] || '',\r\n      value,\r\n    };\r\n  }\r\n  getMaxBorderWidth(arcs) {\r\n    const me = this;\r\n    let max = 0;\r\n    const chart = me.chart;\r\n    let i, ilen, meta, controller, options;\r\n    if (!arcs) {\r\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\r\n        if (chart.isDatasetVisible(i)) {\r\n          meta = chart.getDatasetMeta(i);\r\n          arcs = meta.data;\r\n          controller = meta.controller;\r\n          if (controller !== me) {\r\n            controller.configure();\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (!arcs) {\r\n      return 0;\r\n    }\r\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n      options = controller.resolveDataElementOptions(i);\r\n      if (options.borderAlign !== 'inner') {\r\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n  getMaxOffset(arcs) {\r\n    let max = 0;\r\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n      const options = this.resolveDataElementOptions(i);\r\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\r\n    }\r\n    return max;\r\n  }\r\n  _getRingWeightOffset(datasetIndex) {\r\n    let ringWeightOffset = 0;\r\n    for (let i = 0; i < datasetIndex; ++i) {\r\n      if (this.chart.isDatasetVisible(i)) {\r\n        ringWeightOffset += this._getRingWeight(i);\r\n      }\r\n    }\r\n    return ringWeightOffset;\r\n  }\r\n  _getRingWeight(datasetIndex) {\r\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\r\n  }\r\n  _getVisibleDatasetWeightTotal() {\r\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\r\n  }\r\n}\r\nDoughnutController.id = 'doughnut';\r\nDoughnutController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'arc',\r\n  animation: {\r\n    animateRotate: true,\r\n    animateScale: false\r\n  },\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\r\n    },\r\n  },\r\n  cutout: '50%',\r\n  rotation: 0,\r\n  circumference: 360,\r\n  radius: '100%',\r\n  indexAxis: 'r',\r\n};\r\nDoughnutController.overrides = {\r\n  aspectRatio: 1,\r\n  plugins: {\r\n    legend: {\r\n      labels: {\r\n        generateLabels(chart) {\r\n          const data = chart.data;\r\n          if (data.labels.length && data.datasets.length) {\r\n            return data.labels.map((label, i) => {\r\n              const meta = chart.getDatasetMeta(0);\r\n              const style = meta.controller.getStyle(i);\r\n              return {\r\n                text: label,\r\n                fillStyle: style.backgroundColor,\r\n                strokeStyle: style.borderColor,\r\n                lineWidth: style.borderWidth,\r\n                hidden: !chart.getDataVisibility(i),\r\n                index: i\r\n              };\r\n            });\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      onClick(e, legendItem, legend) {\r\n        legend.chart.toggleDataVisibility(legendItem.index);\r\n        legend.chart.update();\r\n      }\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(tooltipItem) {\r\n          let dataLabel = tooltipItem.label;\r\n          const value = ': ' + tooltipItem.formattedValue;\r\n          if (isArray(dataLabel)) {\r\n            dataLabel = dataLabel.slice();\r\n            dataLabel[0] += value;\r\n          } else {\r\n            dataLabel += value;\r\n          }\r\n          return dataLabel;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nclass LineController extends DatasetController {\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n  }\r\n  update(mode) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const {dataset: line, data: points = [], _dataset} = meta;\r\n    const animationsDisabled = me.chart._animationsDisabled;\r\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\r\n    me._drawStart = start;\r\n    me._drawCount = count;\r\n    if (scaleRangesChanged(meta)) {\r\n      start = 0;\r\n      count = points.length;\r\n    }\r\n    line._decimated = !!_dataset._decimated;\r\n    line.points = points;\r\n    const options = me.resolveDatasetElementOptions(mode);\r\n    if (!me.options.showLine) {\r\n      options.borderWidth = 0;\r\n    }\r\n    options.segment = me.options.segment;\r\n    me.updateElement(line, undefined, {\r\n      animated: !animationsDisabled,\r\n      options\r\n    }, mode);\r\n    me.updateElements(points, start, count, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const me = this;\r\n    const reset = mode === 'reset';\r\n    const {xScale, yScale, _stacked} = me._cachedMeta;\r\n    const firstOpts = me.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = me.getSharedOptions(firstOpts);\r\n    const includeOptions = me.includeOptions(mode, sharedOptions);\r\n    const spanGaps = me.options.spanGaps;\r\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\r\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\r\n    let prevParsed = start > 0 && me.getParsed(start - 1);\r\n    for (let i = start; i < start + count; ++i) {\r\n      const point = points[i];\r\n      const parsed = me.getParsed(i);\r\n      const properties = directUpdate ? point : {};\r\n      const nullData = isNullOrUndef(parsed.y);\r\n      const x = properties.x = xScale.getPixelForValue(parsed.x, i);\r\n      const y = properties.y = reset || nullData ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\r\n      properties.skip = isNaN(x) || isNaN(y) || nullData;\r\n      properties.stop = i > 0 && (parsed.x - prevParsed.x) > maxGapLength;\r\n      properties.parsed = parsed;\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\r\n      }\r\n      if (!directUpdate) {\r\n        me.updateElement(point, i, properties, mode);\r\n      }\r\n      prevParsed = parsed;\r\n    }\r\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  getMaxOverflow() {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const dataset = meta.dataset;\r\n    const border = dataset.options && dataset.options.borderWidth || 0;\r\n    const data = meta.data || [];\r\n    if (!data.length) {\r\n      return border;\r\n    }\r\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\r\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\r\n    return Math.max(border, firstPoint, lastPoint) / 2;\r\n  }\r\n  draw() {\r\n    this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\r\n    super.draw();\r\n  }\r\n}\r\nLineController.id = 'line';\r\nLineController.defaults = {\r\n  datasetElementType: 'line',\r\n  dataElementType: 'point',\r\n  showLine: true,\r\n  spanGaps: false,\r\n};\r\nLineController.overrides = {\r\n  scales: {\r\n    _index_: {\r\n      type: 'category',\r\n    },\r\n    _value_: {\r\n      type: 'linear',\r\n    },\r\n  }\r\n};\r\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\r\n  const pointCount = points.length;\r\n  let start = 0;\r\n  let count = pointCount;\r\n  if (meta._sorted) {\r\n    const {iScale, _parsed} = meta;\r\n    const axis = iScale.axis;\r\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\r\n    if (minDefined) {\r\n      start = _limitValue(Math.min(\r\n        _lookupByKey(_parsed, iScale.axis, min).lo,\r\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\r\n      0, pointCount - 1);\r\n    }\r\n    if (maxDefined) {\r\n      count = _limitValue(Math.max(\r\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\r\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\r\n      start, pointCount) - start;\r\n    } else {\r\n      count = pointCount - start;\r\n    }\r\n  }\r\n  return {start, count};\r\n}\r\nfunction scaleRangesChanged(meta) {\r\n  const {xScale, yScale, _scaleRanges} = meta;\r\n  const newRanges = {\r\n    xmin: xScale.min,\r\n    xmax: xScale.max,\r\n    ymin: yScale.min,\r\n    ymax: yScale.max\r\n  };\r\n  if (!_scaleRanges) {\r\n    meta._scaleRanges = newRanges;\r\n    return true;\r\n  }\r\n  const changed = _scaleRanges.xmin !== xScale.min\r\n\t\t|| _scaleRanges.xmax !== xScale.max\r\n\t\t|| _scaleRanges.ymin !== yScale.min\r\n\t\t|| _scaleRanges.ymax !== yScale.max;\r\n  Object.assign(_scaleRanges, newRanges);\r\n  return changed;\r\n}\r\n\r\nclass PolarAreaController extends DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    super(chart, datasetIndex);\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n  }\r\n  update(mode) {\r\n    const arcs = this._cachedMeta.data;\r\n    this._updateRadius();\r\n    this.updateElements(arcs, 0, arcs.length, mode);\r\n  }\r\n  _updateRadius() {\r\n    const me = this;\r\n    const chart = me.chart;\r\n    const chartArea = chart.chartArea;\r\n    const opts = chart.options;\r\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\r\n    const outerRadius = Math.max(minSize / 2, 0);\r\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\r\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\r\n    me.outerRadius = outerRadius - (radiusLength * me.index);\r\n    me.innerRadius = me.outerRadius - radiusLength;\r\n  }\r\n  updateElements(arcs, start, count, mode) {\r\n    const me = this;\r\n    const reset = mode === 'reset';\r\n    const chart = me.chart;\r\n    const dataset = me.getDataset();\r\n    const opts = chart.options;\r\n    const animationOpts = opts.animation;\r\n    const scale = me._cachedMeta.rScale;\r\n    const centerX = scale.xCenter;\r\n    const centerY = scale.yCenter;\r\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\r\n    let angle = datasetStartAngle;\r\n    let i;\r\n    const defaultAngle = 360 / me.countVisibleElements();\r\n    for (i = 0; i < start; ++i) {\r\n      angle += me._computeAngle(i, mode, defaultAngle);\r\n    }\r\n    for (i = start; i < start + count; i++) {\r\n      const arc = arcs[i];\r\n      let startAngle = angle;\r\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\r\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\r\n      angle = endAngle;\r\n      if (reset) {\r\n        if (animationOpts.animateScale) {\r\n          outerRadius = 0;\r\n        }\r\n        if (animationOpts.animateRotate) {\r\n          startAngle = endAngle = datasetStartAngle;\r\n        }\r\n      }\r\n      const properties = {\r\n        x: centerX,\r\n        y: centerY,\r\n        innerRadius: 0,\r\n        outerRadius,\r\n        startAngle,\r\n        endAngle,\r\n        options: me.resolveDataElementOptions(i, mode)\r\n      };\r\n      me.updateElement(arc, i, properties, mode);\r\n    }\r\n  }\r\n  countVisibleElements() {\r\n    const dataset = this.getDataset();\r\n    const meta = this._cachedMeta;\r\n    let count = 0;\r\n    meta.data.forEach((element, index) => {\r\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\r\n        count++;\r\n      }\r\n    });\r\n    return count;\r\n  }\r\n  _computeAngle(index, mode, defaultAngle) {\r\n    return this.chart.getDataVisibility(index)\r\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\r\n      : 0;\r\n  }\r\n}\r\nPolarAreaController.id = 'polarArea';\r\nPolarAreaController.defaults = {\r\n  dataElementType: 'arc',\r\n  animation: {\r\n    animateRotate: true,\r\n    animateScale: true\r\n  },\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\r\n    },\r\n  },\r\n  indexAxis: 'r',\r\n  startAngle: 0,\r\n};\r\nPolarAreaController.overrides = {\r\n  aspectRatio: 1,\r\n  plugins: {\r\n    legend: {\r\n      labels: {\r\n        generateLabels(chart) {\r\n          const data = chart.data;\r\n          if (data.labels.length && data.datasets.length) {\r\n            return data.labels.map((label, i) => {\r\n              const meta = chart.getDatasetMeta(0);\r\n              const style = meta.controller.getStyle(i);\r\n              return {\r\n                text: label,\r\n                fillStyle: style.backgroundColor,\r\n                strokeStyle: style.borderColor,\r\n                lineWidth: style.borderWidth,\r\n                hidden: !chart.getDataVisibility(i),\r\n                index: i\r\n              };\r\n            });\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      onClick(e, legendItem, legend) {\r\n        legend.chart.toggleDataVisibility(legendItem.index);\r\n        legend.chart.update();\r\n      }\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(context) {\r\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    r: {\r\n      type: 'radialLinear',\r\n      angleLines: {\r\n        display: false\r\n      },\r\n      beginAtZero: true,\r\n      grid: {\r\n        circular: true\r\n      },\r\n      pointLabels: {\r\n        display: false\r\n      },\r\n      startAngle: 0\r\n    }\r\n  }\r\n};\r\n\r\nclass PieController extends DoughnutController {\r\n}\r\nPieController.id = 'pie';\r\nPieController.defaults = {\r\n  cutout: 0,\r\n  rotation: 0,\r\n  circumference: 360,\r\n  radius: '100%'\r\n};\r\n\r\nclass RadarController extends DatasetController {\r\n  getLabelAndValue(index) {\r\n    const me = this;\r\n    const vScale = me._cachedMeta.vScale;\r\n    const parsed = me.getParsed(index);\r\n    return {\r\n      label: vScale.getLabels()[index],\r\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\r\n    };\r\n  }\r\n  update(mode) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const line = meta.dataset;\r\n    const points = meta.data || [];\r\n    const labels = meta.iScale.getLabels();\r\n    line.points = points;\r\n    if (mode !== 'resize') {\r\n      const options = me.resolveDatasetElementOptions(mode);\r\n      if (!me.options.showLine) {\r\n        options.borderWidth = 0;\r\n      }\r\n      const properties = {\r\n        _loop: true,\r\n        _fullLoop: labels.length === points.length,\r\n        options\r\n      };\r\n      me.updateElement(line, undefined, properties, mode);\r\n    }\r\n    me.updateElements(points, 0, points.length, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const me = this;\r\n    const dataset = me.getDataset();\r\n    const scale = me._cachedMeta.rScale;\r\n    const reset = mode === 'reset';\r\n    for (let i = start; i < start + count; i++) {\r\n      const point = points[i];\r\n      const options = me.resolveDataElementOptions(i, mode);\r\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\r\n      const x = reset ? scale.xCenter : pointPosition.x;\r\n      const y = reset ? scale.yCenter : pointPosition.y;\r\n      const properties = {\r\n        x,\r\n        y,\r\n        angle: pointPosition.angle,\r\n        skip: isNaN(x) || isNaN(y),\r\n        options\r\n      };\r\n      me.updateElement(point, i, properties, mode);\r\n    }\r\n  }\r\n}\r\nRadarController.id = 'radar';\r\nRadarController.defaults = {\r\n  datasetElementType: 'line',\r\n  dataElementType: 'point',\r\n  indexAxis: 'r',\r\n  showLine: true,\r\n  elements: {\r\n    line: {\r\n      fill: 'start'\r\n    }\r\n  },\r\n};\r\nRadarController.overrides = {\r\n  aspectRatio: 1,\r\n  scales: {\r\n    r: {\r\n      type: 'radialLinear',\r\n    }\r\n  }\r\n};\r\n\r\nclass ScatterController extends LineController {\r\n}\r\nScatterController.id = 'scatter';\r\nScatterController.defaults = {\r\n  showLine: false,\r\n  fill: false\r\n};\r\nScatterController.overrides = {\r\n  interaction: {\r\n    mode: 'point'\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(item) {\r\n          return '(' + item.label + ', ' + item.formattedValue + ')';\r\n        }\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    x: {\r\n      type: 'linear'\r\n    },\r\n    y: {\r\n      type: 'linear'\r\n    }\r\n  }\r\n};\r\n\r\nvar controllers = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nBarController: BarController,\r\nBubbleController: BubbleController,\r\nDoughnutController: DoughnutController,\r\nLineController: LineController,\r\nPolarAreaController: PolarAreaController,\r\nPieController: PieController,\r\nRadarController: RadarController,\r\nScatterController: ScatterController\r\n});\r\n\r\nfunction abstract() {\r\n  throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\r\n}\r\nclass DateAdapter {\r\n  constructor(options) {\r\n    this.options = options || {};\r\n  }\r\n  formats() {\r\n    return abstract();\r\n  }\r\n  parse(value, format) {\r\n    return abstract();\r\n  }\r\n  format(timestamp, format) {\r\n    return abstract();\r\n  }\r\n  add(timestamp, amount, unit) {\r\n    return abstract();\r\n  }\r\n  diff(a, b, unit) {\r\n    return abstract();\r\n  }\r\n  startOf(timestamp, unit, weekday) {\r\n    return abstract();\r\n  }\r\n  endOf(timestamp, unit) {\r\n    return abstract();\r\n  }\r\n}\r\nDateAdapter.override = function(members) {\r\n  Object.assign(DateAdapter.prototype, members);\r\n};\r\nvar adapters = {\r\n  _date: DateAdapter\r\n};\r\n\r\nfunction getRelativePosition(e, chart) {\r\n  if ('native' in e) {\r\n    return {\r\n      x: e.x,\r\n      y: e.y\r\n    };\r\n  }\r\n  return getRelativePosition$1(e, chart);\r\n}\r\nfunction evaluateAllVisibleItems(chart, handler) {\r\n  const metasets = chart.getSortedVisibleDatasetMetas();\r\n  let index, data, element;\r\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    ({index, data} = metasets[i]);\r\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\r\n      element = data[j];\r\n      if (!element.skip) {\r\n        handler(element, index, j);\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction binarySearch(metaset, axis, value, intersect) {\r\n  const {controller, data, _sorted} = metaset;\r\n  const iScale = controller._cachedMeta.iScale;\r\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\r\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\r\n    if (!intersect) {\r\n      return lookupMethod(data, axis, value);\r\n    } else if (controller._sharedOptions) {\r\n      const el = data[0];\r\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\r\n      if (range) {\r\n        const start = lookupMethod(data, axis, value - range);\r\n        const end = lookupMethod(data, axis, value + range);\r\n        return {lo: start.lo, hi: end.hi};\r\n      }\r\n    }\r\n  }\r\n  return {lo: 0, hi: data.length - 1};\r\n}\r\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\r\n  const metasets = chart.getSortedVisibleDatasetMetas();\r\n  const value = position[axis];\r\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    const {index, data} = metasets[i];\r\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\r\n    for (let j = lo; j <= hi; ++j) {\r\n      const element = data[j];\r\n      if (!element.skip) {\r\n        handler(element, index, j);\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction getDistanceMetricForAxis(axis) {\r\n  const useX = axis.indexOf('x') !== -1;\r\n  const useY = axis.indexOf('y') !== -1;\r\n  return function(pt1, pt2) {\r\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\r\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\r\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\r\n  };\r\n}\r\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\r\n  const items = [];\r\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\r\n    return items;\r\n  }\r\n  const evaluationFunc = function(element, datasetIndex, index) {\r\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  };\r\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\r\n  return items;\r\n}\r\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\r\n  const distanceMetric = getDistanceMetricForAxis(axis);\r\n  let minDistance = Number.POSITIVE_INFINITY;\r\n  let items = [];\r\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\r\n    return items;\r\n  }\r\n  const evaluationFunc = function(element, datasetIndex, index) {\r\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\r\n      return;\r\n    }\r\n    const center = element.getCenterPoint(useFinalPosition);\r\n    const distance = distanceMetric(position, center);\r\n    if (distance < minDistance) {\r\n      items = [{element, datasetIndex, index}];\r\n      minDistance = distance;\r\n    } else if (distance === minDistance) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  };\r\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\r\n  return items;\r\n}\r\nfunction getAxisItems(chart, e, options, useFinalPosition) {\r\n  const position = getRelativePosition(e, chart);\r\n  const items = [];\r\n  const axis = options.axis;\r\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\r\n  let intersectsItem = false;\r\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\r\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\r\n      intersectsItem = true;\r\n    }\r\n  });\r\n  if (options.intersect && !intersectsItem) {\r\n    return [];\r\n  }\r\n  return items;\r\n}\r\nvar Interaction = {\r\n  modes: {\r\n    index(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'x';\r\n      const items = options.intersect\r\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\r\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\r\n      const elements = [];\r\n      if (!items.length) {\r\n        return [];\r\n      }\r\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\r\n        const index = items[0].index;\r\n        const element = meta.data[index];\r\n        if (element && !element.skip) {\r\n          elements.push({element, datasetIndex: meta.index, index});\r\n        }\r\n      });\r\n      return elements;\r\n    },\r\n    dataset(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      let items = options.intersect\r\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\r\n        getNearestItems(chart, position, axis, false, useFinalPosition);\r\n      if (items.length > 0) {\r\n        const datasetIndex = items[0].datasetIndex;\r\n        const data = chart.getDatasetMeta(datasetIndex).data;\r\n        items = [];\r\n        for (let i = 0; i < data.length; ++i) {\r\n          items.push({element: data[i], datasetIndex, index: i});\r\n        }\r\n      }\r\n      return items;\r\n    },\r\n    point(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      return getIntersectItems(chart, position, axis, useFinalPosition);\r\n    },\r\n    nearest(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\r\n    },\r\n    x(chart, e, options, useFinalPosition) {\r\n      options.axis = 'x';\r\n      return getAxisItems(chart, e, options, useFinalPosition);\r\n    },\r\n    y(chart, e, options, useFinalPosition) {\r\n      options.axis = 'y';\r\n      return getAxisItems(chart, e, options, useFinalPosition);\r\n    }\r\n  }\r\n};\r\n\r\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\r\nfunction filterByPosition(array, position) {\r\n  return array.filter(v => v.pos === position);\r\n}\r\nfunction filterDynamicPositionByAxis(array, axis) {\r\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\r\n}\r\nfunction sortByWeight(array, reverse) {\r\n  return array.sort((a, b) => {\r\n    const v0 = reverse ? b : a;\r\n    const v1 = reverse ? a : b;\r\n    return v0.weight === v1.weight ?\r\n      v0.index - v1.index :\r\n      v0.weight - v1.weight;\r\n  });\r\n}\r\nfunction wrapBoxes(boxes) {\r\n  const layoutBoxes = [];\r\n  let i, ilen, box;\r\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\r\n    box = boxes[i];\r\n    layoutBoxes.push({\r\n      index: i,\r\n      box,\r\n      pos: box.position,\r\n      horizontal: box.isHorizontal(),\r\n      weight: box.weight\r\n    });\r\n  }\r\n  return layoutBoxes;\r\n}\r\nfunction setLayoutDims(layouts, params) {\r\n  let i, ilen, layout;\r\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\r\n    layout = layouts[i];\r\n    if (layout.horizontal) {\r\n      layout.width = layout.box.fullSize && params.availableWidth;\r\n      layout.height = params.hBoxMaxHeight;\r\n    } else {\r\n      layout.width = params.vBoxMaxWidth;\r\n      layout.height = layout.box.fullSize && params.availableHeight;\r\n    }\r\n  }\r\n}\r\nfunction buildLayoutBoxes(boxes) {\r\n  const layoutBoxes = wrapBoxes(boxes);\r\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\r\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\r\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\r\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\r\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\r\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\r\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\r\n  return {\r\n    fullSize,\r\n    leftAndTop: left.concat(top),\r\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\r\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\r\n    vertical: left.concat(right).concat(centerVertical),\r\n    horizontal: top.concat(bottom).concat(centerHorizontal)\r\n  };\r\n}\r\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\r\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\r\n}\r\nfunction updateMaxPadding(maxPadding, boxPadding) {\r\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\r\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\r\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\r\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\r\n}\r\nfunction updateDims(chartArea, params, layout) {\r\n  const box = layout.box;\r\n  const maxPadding = chartArea.maxPadding;\r\n  if (!isObject(layout.pos)) {\r\n    if (layout.size) {\r\n      chartArea[layout.pos] -= layout.size;\r\n    }\r\n    layout.size = layout.horizontal ? box.height : box.width;\r\n    chartArea[layout.pos] += layout.size;\r\n  }\r\n  if (box.getPadding) {\r\n    updateMaxPadding(maxPadding, box.getPadding());\r\n  }\r\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\r\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\r\n  const widthChanged = newWidth !== chartArea.w;\r\n  const heightChanged = newHeight !== chartArea.h;\r\n  chartArea.w = newWidth;\r\n  chartArea.h = newHeight;\r\n  return layout.horizontal\r\n    ? {same: widthChanged, other: heightChanged}\r\n    : {same: heightChanged, other: widthChanged};\r\n}\r\nfunction handleMaxPadding(chartArea) {\r\n  const maxPadding = chartArea.maxPadding;\r\n  function updatePos(pos) {\r\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\r\n    chartArea[pos] += change;\r\n    return change;\r\n  }\r\n  chartArea.y += updatePos('top');\r\n  chartArea.x += updatePos('left');\r\n  updatePos('right');\r\n  updatePos('bottom');\r\n}\r\nfunction getMargins(horizontal, chartArea) {\r\n  const maxPadding = chartArea.maxPadding;\r\n  function marginForPositions(positions) {\r\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\r\n    positions.forEach((pos) => {\r\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\r\n    });\r\n    return margin;\r\n  }\r\n  return horizontal\r\n    ? marginForPositions(['left', 'right'])\r\n    : marginForPositions(['top', 'bottom']);\r\n}\r\nfunction fitBoxes(boxes, chartArea, params) {\r\n  const refitBoxes = [];\r\n  let i, ilen, layout, box, refit, changed;\r\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\r\n    layout = boxes[i];\r\n    box = layout.box;\r\n    box.update(\r\n      layout.width || chartArea.w,\r\n      layout.height || chartArea.h,\r\n      getMargins(layout.horizontal, chartArea)\r\n    );\r\n    const {same, other} = updateDims(chartArea, params, layout);\r\n    refit |= same && refitBoxes.length;\r\n    changed = changed || other;\r\n    if (!box.fullSize) {\r\n      refitBoxes.push(layout);\r\n    }\r\n  }\r\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\r\n}\r\nfunction placeBoxes(boxes, chartArea, params) {\r\n  const userPadding = params.padding;\r\n  let x = chartArea.x;\r\n  let y = chartArea.y;\r\n  let i, ilen, layout, box;\r\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\r\n    layout = boxes[i];\r\n    box = layout.box;\r\n    if (layout.horizontal) {\r\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\r\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\r\n      box.top = y;\r\n      box.bottom = y + box.height;\r\n      box.width = box.right - box.left;\r\n      y = box.bottom;\r\n    } else {\r\n      box.left = x;\r\n      box.right = x + box.width;\r\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\r\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\r\n      box.height = box.bottom - box.top;\r\n      x = box.right;\r\n    }\r\n  }\r\n  chartArea.x = x;\r\n  chartArea.y = y;\r\n}\r\ndefaults.set('layout', {\r\n  padding: {\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0\r\n  }\r\n});\r\nvar layouts = {\r\n  addBox(chart, item) {\r\n    if (!chart.boxes) {\r\n      chart.boxes = [];\r\n    }\r\n    item.fullSize = item.fullSize || false;\r\n    item.position = item.position || 'top';\r\n    item.weight = item.weight || 0;\r\n    item._layers = item._layers || function() {\r\n      return [{\r\n        z: 0,\r\n        draw(chartArea) {\r\n          item.draw(chartArea);\r\n        }\r\n      }];\r\n    };\r\n    chart.boxes.push(item);\r\n  },\r\n  removeBox(chart, layoutItem) {\r\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n    if (index !== -1) {\r\n      chart.boxes.splice(index, 1);\r\n    }\r\n  },\r\n  configure(chart, item, options) {\r\n    item.fullSize = options.fullSize;\r\n    item.position = options.position;\r\n    item.weight = options.weight;\r\n  },\r\n  update(chart, width, height, minPadding) {\r\n    if (!chart) {\r\n      return;\r\n    }\r\n    const padding = toPadding(chart.options.layout.padding);\r\n    const availableWidth = width - padding.width;\r\n    const availableHeight = height - padding.height;\r\n    const boxes = buildLayoutBoxes(chart.boxes);\r\n    const verticalBoxes = boxes.vertical;\r\n    const horizontalBoxes = boxes.horizontal;\r\n    each(chart.boxes, box => {\r\n      if (typeof box.beforeLayout === 'function') {\r\n        box.beforeLayout();\r\n      }\r\n    });\r\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\r\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\r\n    const params = Object.freeze({\r\n      outerWidth: width,\r\n      outerHeight: height,\r\n      padding,\r\n      availableWidth,\r\n      availableHeight,\r\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\r\n      hBoxMaxHeight: availableHeight / 2\r\n    });\r\n    const maxPadding = Object.assign({}, padding);\r\n    updateMaxPadding(maxPadding, toPadding(minPadding));\r\n    const chartArea = Object.assign({\r\n      maxPadding,\r\n      w: availableWidth,\r\n      h: availableHeight,\r\n      x: padding.left,\r\n      y: padding.top\r\n    }, padding);\r\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\r\n    fitBoxes(boxes.fullSize, chartArea, params);\r\n    fitBoxes(verticalBoxes, chartArea, params);\r\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\r\n      fitBoxes(verticalBoxes, chartArea, params);\r\n    }\r\n    handleMaxPadding(chartArea);\r\n    placeBoxes(boxes.leftAndTop, chartArea, params);\r\n    chartArea.x += chartArea.w;\r\n    chartArea.y += chartArea.h;\r\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\r\n    chart.chartArea = {\r\n      left: chartArea.left,\r\n      top: chartArea.top,\r\n      right: chartArea.left + chartArea.w,\r\n      bottom: chartArea.top + chartArea.h,\r\n      height: chartArea.h,\r\n      width: chartArea.w,\r\n    };\r\n    each(boxes.chartArea, (layout) => {\r\n      const box = layout.box;\r\n      Object.assign(box, chart.chartArea);\r\n      box.update(chartArea.w, chartArea.h);\r\n    });\r\n  }\r\n};\r\n\r\nclass BasePlatform {\r\n  acquireContext(canvas, aspectRatio) {}\r\n  releaseContext(context) {\r\n    return false;\r\n  }\r\n  addEventListener(chart, type, listener) {}\r\n  removeEventListener(chart, type, listener) {}\r\n  getDevicePixelRatio() {\r\n    return 1;\r\n  }\r\n  getMaximumSize(element, width, height, aspectRatio) {\r\n    width = Math.max(0, width || element.width);\r\n    height = height || element.height;\r\n    return {\r\n      width,\r\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\r\n    };\r\n  }\r\n  isAttached(canvas) {\r\n    return true;\r\n  }\r\n}\r\n\r\nclass BasicPlatform extends BasePlatform {\r\n  acquireContext(item) {\r\n    return item && item.getContext && item.getContext('2d') || null;\r\n  }\r\n}\r\n\r\nconst EXPANDO_KEY = '$chartjs';\r\nconst EVENT_TYPES = {\r\n  touchstart: 'mousedown',\r\n  touchmove: 'mousemove',\r\n  touchend: 'mouseup',\r\n  pointerenter: 'mouseenter',\r\n  pointerdown: 'mousedown',\r\n  pointermove: 'mousemove',\r\n  pointerup: 'mouseup',\r\n  pointerleave: 'mouseout',\r\n  pointerout: 'mouseout'\r\n};\r\nconst isNullOrEmpty = value => value === null || value === '';\r\nfunction initCanvas(canvas, aspectRatio) {\r\n  const style = canvas.style;\r\n  const renderHeight = canvas.getAttribute('height');\r\n  const renderWidth = canvas.getAttribute('width');\r\n  canvas[EXPANDO_KEY] = {\r\n    initial: {\r\n      height: renderHeight,\r\n      width: renderWidth,\r\n      style: {\r\n        display: style.display,\r\n        height: style.height,\r\n        width: style.width\r\n      }\r\n    }\r\n  };\r\n  style.display = style.display || 'block';\r\n  style.boxSizing = style.boxSizing || 'border-box';\r\n  if (isNullOrEmpty(renderWidth)) {\r\n    const displayWidth = readUsedSize(canvas, 'width');\r\n    if (displayWidth !== undefined) {\r\n      canvas.width = displayWidth;\r\n    }\r\n  }\r\n  if (isNullOrEmpty(renderHeight)) {\r\n    if (canvas.style.height === '') {\r\n      canvas.height = canvas.width / (aspectRatio || 2);\r\n    } else {\r\n      const displayHeight = readUsedSize(canvas, 'height');\r\n      if (displayHeight !== undefined) {\r\n        canvas.height = displayHeight;\r\n      }\r\n    }\r\n  }\r\n  return canvas;\r\n}\r\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\r\nfunction addListener(node, type, listener) {\r\n  node.addEventListener(type, listener, eventListenerOptions);\r\n}\r\nfunction removeListener(chart, type, listener) {\r\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\r\n}\r\nfunction fromNativeEvent(event, chart) {\r\n  const type = EVENT_TYPES[event.type] || event.type;\r\n  const {x, y} = getRelativePosition$1(event, chart);\r\n  return {\r\n    type,\r\n    chart,\r\n    native: event,\r\n    x: x !== undefined ? x : null,\r\n    y: y !== undefined ? y : null,\r\n  };\r\n}\r\nfunction createAttachObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const container = canvas && _getParentNode(canvas);\r\n  const element = container || canvas;\r\n  const observer = new MutationObserver(entries => {\r\n    const parent = _getParentNode(element);\r\n    entries.forEach(entry => {\r\n      for (let i = 0; i < entry.addedNodes.length; i++) {\r\n        const added = entry.addedNodes[i];\r\n        if (added === element || added === parent) {\r\n          listener(entry.target);\r\n        }\r\n      }\r\n    });\r\n  });\r\n  observer.observe(document, {childList: true, subtree: true});\r\n  return observer;\r\n}\r\nfunction createDetachObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const container = canvas && _getParentNode(canvas);\r\n  if (!container) {\r\n    return;\r\n  }\r\n  const observer = new MutationObserver(entries => {\r\n    entries.forEach(entry => {\r\n      for (let i = 0; i < entry.removedNodes.length; i++) {\r\n        if (entry.removedNodes[i] === canvas) {\r\n          listener();\r\n          break;\r\n        }\r\n      }\r\n    });\r\n  });\r\n  observer.observe(container, {childList: true});\r\n  return observer;\r\n}\r\nconst drpListeningCharts = new Map();\r\nlet oldDevicePixelRatio = 0;\r\nfunction onWindowResize() {\r\n  const dpr = window.devicePixelRatio;\r\n  if (dpr === oldDevicePixelRatio) {\r\n    return;\r\n  }\r\n  oldDevicePixelRatio = dpr;\r\n  drpListeningCharts.forEach((resize, chart) => {\r\n    if (chart.currentDevicePixelRatio !== dpr) {\r\n      resize();\r\n    }\r\n  });\r\n}\r\nfunction listenDevicePixelRatioChanges(chart, resize) {\r\n  if (!drpListeningCharts.size) {\r\n    window.addEventListener('resize', onWindowResize);\r\n  }\r\n  drpListeningCharts.set(chart, resize);\r\n}\r\nfunction unlistenDevicePixelRatioChanges(chart) {\r\n  drpListeningCharts.delete(chart);\r\n  if (!drpListeningCharts.size) {\r\n    window.removeEventListener('resize', onWindowResize);\r\n  }\r\n}\r\nfunction createResizeObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const container = canvas && _getParentNode(canvas);\r\n  if (!container) {\r\n    return;\r\n  }\r\n  const resize = throttled((width, height) => {\r\n    const w = container.clientWidth;\r\n    listener(width, height);\r\n    if (w < container.clientWidth) {\r\n      listener();\r\n    }\r\n  }, window);\r\n  const observer = new ResizeObserver(entries => {\r\n    const entry = entries[0];\r\n    const width = entry.contentRect.width;\r\n    const height = entry.contentRect.height;\r\n    if (width === 0 && height === 0) {\r\n      return;\r\n    }\r\n    resize(width, height);\r\n  });\r\n  observer.observe(container);\r\n  listenDevicePixelRatioChanges(chart, resize);\r\n  return observer;\r\n}\r\nfunction releaseObserver(chart, type, observer) {\r\n  if (observer) {\r\n    observer.disconnect();\r\n  }\r\n  if (type === 'resize') {\r\n    unlistenDevicePixelRatioChanges(chart);\r\n  }\r\n}\r\nfunction createProxyAndListen(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const proxy = throttled((event) => {\r\n    if (chart.ctx !== null) {\r\n      listener(fromNativeEvent(event, chart));\r\n    }\r\n  }, chart, (args) => {\r\n    const event = args[0];\r\n    return [event, event.offsetX, event.offsetY];\r\n  });\r\n  addListener(canvas, type, proxy);\r\n  return proxy;\r\n}\r\nclass DomPlatform extends BasePlatform {\r\n  acquireContext(canvas, aspectRatio) {\r\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\r\n    if (context && context.canvas === canvas) {\r\n      initCanvas(canvas, aspectRatio);\r\n      return context;\r\n    }\r\n    return null;\r\n  }\r\n  releaseContext(context) {\r\n    const canvas = context.canvas;\r\n    if (!canvas[EXPANDO_KEY]) {\r\n      return false;\r\n    }\r\n    const initial = canvas[EXPANDO_KEY].initial;\r\n    ['height', 'width'].forEach((prop) => {\r\n      const value = initial[prop];\r\n      if (isNullOrUndef(value)) {\r\n        canvas.removeAttribute(prop);\r\n      } else {\r\n        canvas.setAttribute(prop, value);\r\n      }\r\n    });\r\n    const style = initial.style || {};\r\n    Object.keys(style).forEach((key) => {\r\n      canvas.style[key] = style[key];\r\n    });\r\n    canvas.width = canvas.width;\r\n    delete canvas[EXPANDO_KEY];\r\n    return true;\r\n  }\r\n  addEventListener(chart, type, listener) {\r\n    this.removeEventListener(chart, type);\r\n    const proxies = chart.$proxies || (chart.$proxies = {});\r\n    const handlers = {\r\n      attach: createAttachObserver,\r\n      detach: createDetachObserver,\r\n      resize: createResizeObserver\r\n    };\r\n    const handler = handlers[type] || createProxyAndListen;\r\n    proxies[type] = handler(chart, type, listener);\r\n  }\r\n  removeEventListener(chart, type) {\r\n    const proxies = chart.$proxies || (chart.$proxies = {});\r\n    const proxy = proxies[type];\r\n    if (!proxy) {\r\n      return;\r\n    }\r\n    const handlers = {\r\n      attach: releaseObserver,\r\n      detach: releaseObserver,\r\n      resize: releaseObserver\r\n    };\r\n    const handler = handlers[type] || removeListener;\r\n    handler(chart, type, proxy);\r\n    proxies[type] = undefined;\r\n  }\r\n  getDevicePixelRatio() {\r\n    return window.devicePixelRatio;\r\n  }\r\n  getMaximumSize(canvas, width, height, aspectRatio) {\r\n    return getMaximumSize(canvas, width, height, aspectRatio);\r\n  }\r\n  isAttached(canvas) {\r\n    const container = _getParentNode(canvas);\r\n    return !!(container && _getParentNode(container));\r\n  }\r\n}\r\n\r\nclass Element {\r\n  constructor() {\r\n    this.x = undefined;\r\n    this.y = undefined;\r\n    this.active = false;\r\n    this.options = undefined;\r\n    this.$animations = undefined;\r\n  }\r\n  tooltipPosition(useFinalPosition) {\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return {x, y};\r\n  }\r\n  hasValue() {\r\n    return isNumber(this.x) && isNumber(this.y);\r\n  }\r\n  getProps(props, final) {\r\n    const me = this;\r\n    const anims = this.$animations;\r\n    if (!final || !anims) {\r\n      return me;\r\n    }\r\n    const ret = {};\r\n    props.forEach(prop => {\r\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\r\n    });\r\n    return ret;\r\n  }\r\n}\r\nElement.defaults = {};\r\nElement.defaultRoutes = undefined;\r\n\r\nconst formatters = {\r\n  values(value) {\r\n    return isArray(value) ? value : '' + value;\r\n  },\r\n  numeric(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0';\r\n    }\r\n    const locale = this.chart.options.locale;\r\n    let notation;\r\n    let delta = tickValue;\r\n    if (ticks.length > 1) {\r\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\r\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\r\n        notation = 'scientific';\r\n      }\r\n      delta = calculateDelta(tickValue, ticks);\r\n    }\r\n    const logDelta = log10(Math.abs(delta));\r\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\r\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\r\n    Object.assign(options, this.options.ticks.format);\r\n    return formatNumber(tickValue, locale, options);\r\n  },\r\n  logarithmic(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0';\r\n    }\r\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\r\n    if (remain === 1 || remain === 2 || remain === 5) {\r\n      return formatters.numeric.call(this, tickValue, index, ticks);\r\n    }\r\n    return '';\r\n  }\r\n};\r\nfunction calculateDelta(tickValue, ticks) {\r\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\r\n  if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\r\n    delta = tickValue - Math.floor(tickValue);\r\n  }\r\n  return delta;\r\n}\r\nvar Ticks = {formatters};\r\n\r\ndefaults.set('scale', {\r\n  display: true,\r\n  offset: false,\r\n  reverse: false,\r\n  beginAtZero: false,\r\n  bounds: 'ticks',\r\n  grace: 0,\r\n  grid: {\r\n    display: true,\r\n    lineWidth: 1,\r\n    drawBorder: true,\r\n    drawOnChartArea: true,\r\n    drawTicks: true,\r\n    tickLength: 8,\r\n    tickWidth: (_ctx, options) => options.lineWidth,\r\n    tickColor: (_ctx, options) => options.color,\r\n    offset: false,\r\n    borderDash: [],\r\n    borderDashOffset: 0.0,\r\n    borderWidth: 1\r\n  },\r\n  title: {\r\n    display: false,\r\n    text: '',\r\n    padding: {\r\n      top: 4,\r\n      bottom: 4\r\n    }\r\n  },\r\n  ticks: {\r\n    minRotation: 0,\r\n    maxRotation: 50,\r\n    mirror: false,\r\n    textStrokeWidth: 0,\r\n    textStrokeColor: '',\r\n    padding: 3,\r\n    display: true,\r\n    autoSkip: true,\r\n    autoSkipPadding: 3,\r\n    labelOffset: 0,\r\n    callback: Ticks.formatters.values,\r\n    minor: {},\r\n    major: {},\r\n    align: 'center',\r\n    crossAlign: 'near',\r\n    showLabelBackdrop: false,\r\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\r\n    backdropPadding: 2,\r\n  }\r\n});\r\ndefaults.route('scale.ticks', 'color', '', 'color');\r\ndefaults.route('scale.grid', 'color', '', 'borderColor');\r\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\r\ndefaults.route('scale.title', 'color', '', 'color');\r\ndefaults.describe('scale', {\r\n  _fallback: false,\r\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\r\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\r\n});\r\ndefaults.describe('scales', {\r\n  _fallback: 'scale',\r\n});\r\n\r\nfunction autoSkip(scale, ticks) {\r\n  const tickOpts = scale.options.ticks;\r\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\r\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\r\n  const numMajorIndices = majorIndices.length;\r\n  const first = majorIndices[0];\r\n  const last = majorIndices[numMajorIndices - 1];\r\n  const newTicks = [];\r\n  if (numMajorIndices > ticksLimit) {\r\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\r\n    return newTicks;\r\n  }\r\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\r\n  if (numMajorIndices > 0) {\r\n    let i, ilen;\r\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\r\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\r\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\r\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\r\n    }\r\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\r\n    return newTicks;\r\n  }\r\n  skip(ticks, newTicks, spacing);\r\n  return newTicks;\r\n}\r\nfunction determineMaxTicks(scale) {\r\n  const offset = scale.options.offset;\r\n  const tickLength = scale._tickSize();\r\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\r\n  const maxChart = scale._maxLength / tickLength;\r\n  return Math.floor(Math.min(maxScale, maxChart));\r\n}\r\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\r\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\r\n  const spacing = ticks.length / ticksLimit;\r\n  if (!evenMajorSpacing) {\r\n    return Math.max(spacing, 1);\r\n  }\r\n  const factors = _factorize(evenMajorSpacing);\r\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\r\n    const factor = factors[i];\r\n    if (factor > spacing) {\r\n      return factor;\r\n    }\r\n  }\r\n  return Math.max(spacing, 1);\r\n}\r\nfunction getMajorIndices(ticks) {\r\n  const result = [];\r\n  let i, ilen;\r\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n    if (ticks[i].major) {\r\n      result.push(i);\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\r\n  let count = 0;\r\n  let next = majorIndices[0];\r\n  let i;\r\n  spacing = Math.ceil(spacing);\r\n  for (i = 0; i < ticks.length; i++) {\r\n    if (i === next) {\r\n      newTicks.push(ticks[i]);\r\n      count++;\r\n      next = majorIndices[count * spacing];\r\n    }\r\n  }\r\n}\r\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\r\n  const start = valueOrDefault(majorStart, 0);\r\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\r\n  let count = 0;\r\n  let length, i, next;\r\n  spacing = Math.ceil(spacing);\r\n  if (majorEnd) {\r\n    length = majorEnd - majorStart;\r\n    spacing = length / Math.floor(length / spacing);\r\n  }\r\n  next = start;\r\n  while (next < 0) {\r\n    count++;\r\n    next = Math.round(start + count * spacing);\r\n  }\r\n  for (i = Math.max(start, 0); i < end; i++) {\r\n    if (i === next) {\r\n      newTicks.push(ticks[i]);\r\n      count++;\r\n      next = Math.round(start + count * spacing);\r\n    }\r\n  }\r\n}\r\nfunction getEvenSpacing(arr) {\r\n  const len = arr.length;\r\n  let i, diff;\r\n  if (len < 2) {\r\n    return false;\r\n  }\r\n  for (diff = arr[0], i = 1; i < len; ++i) {\r\n    if (arr[i] - arr[i - 1] !== diff) {\r\n      return false;\r\n    }\r\n  }\r\n  return diff;\r\n}\r\n\r\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\r\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\r\nfunction sample(arr, numItems) {\r\n  const result = [];\r\n  const increment = arr.length / numItems;\r\n  const len = arr.length;\r\n  let i = 0;\r\n  for (; i < len; i += increment) {\r\n    result.push(arr[Math.floor(i)]);\r\n  }\r\n  return result;\r\n}\r\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\r\n  const length = scale.ticks.length;\r\n  const validIndex = Math.min(index, length - 1);\r\n  const start = scale._startPixel;\r\n  const end = scale._endPixel;\r\n  const epsilon = 1e-6;\r\n  let lineValue = scale.getPixelForTick(validIndex);\r\n  let offset;\r\n  if (offsetGridLines) {\r\n    if (length === 1) {\r\n      offset = Math.max(lineValue - start, end - lineValue);\r\n    } else if (index === 0) {\r\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\r\n    } else {\r\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\r\n    }\r\n    lineValue += validIndex < index ? offset : -offset;\r\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\r\n      return;\r\n    }\r\n  }\r\n  return lineValue;\r\n}\r\nfunction garbageCollect(caches, length) {\r\n  each(caches, (cache) => {\r\n    const gc = cache.gc;\r\n    const gcLen = gc.length / 2;\r\n    let i;\r\n    if (gcLen > length) {\r\n      for (i = 0; i < gcLen; ++i) {\r\n        delete cache.data[gc[i]];\r\n      }\r\n      gc.splice(0, gcLen);\r\n    }\r\n  });\r\n}\r\nfunction getTickMarkLength(options) {\r\n  return options.drawTicks ? options.tickLength : 0;\r\n}\r\nfunction getTitleHeight(options, fallback) {\r\n  if (!options.display) {\r\n    return 0;\r\n  }\r\n  const font = toFont(options.font, fallback);\r\n  const padding = toPadding(options.padding);\r\n  const lines = isArray(options.text) ? options.text.length : 1;\r\n  return (lines * font.lineHeight) + padding.height;\r\n}\r\nfunction createScaleContext(parent, scale) {\r\n  return Object.assign(Object.create(parent), {\r\n    scale,\r\n    type: 'scale'\r\n  });\r\n}\r\nfunction createTickContext(parent, index, tick) {\r\n  return Object.assign(Object.create(parent), {\r\n    tick,\r\n    index,\r\n    type: 'tick'\r\n  });\r\n}\r\nfunction titleAlign(align, position, reverse) {\r\n  let ret = _toLeftRightCenter(align);\r\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\r\n    ret = reverseAlign(ret);\r\n  }\r\n  return ret;\r\n}\r\nfunction titleArgs(scale, offset, position, align) {\r\n  const {top, left, bottom, right} = scale;\r\n  let rotation = 0;\r\n  let maxWidth, titleX, titleY;\r\n  if (scale.isHorizontal()) {\r\n    titleX = _alignStartEnd(align, left, right);\r\n    titleY = offsetFromEdge(scale, position, offset);\r\n    maxWidth = right - left;\r\n  } else {\r\n    titleX = offsetFromEdge(scale, position, offset);\r\n    titleY = _alignStartEnd(align, bottom, top);\r\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\r\n  }\r\n  return {titleX, titleY, maxWidth, rotation};\r\n}\r\nclass Scale extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.id = cfg.id;\r\n    this.type = cfg.type;\r\n    this.options = undefined;\r\n    this.ctx = cfg.ctx;\r\n    this.chart = cfg.chart;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this._margins = {\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    };\r\n    this.maxWidth = undefined;\r\n    this.maxHeight = undefined;\r\n    this.paddingTop = undefined;\r\n    this.paddingBottom = undefined;\r\n    this.paddingLeft = undefined;\r\n    this.paddingRight = undefined;\r\n    this.axis = undefined;\r\n    this.labelRotation = undefined;\r\n    this.min = undefined;\r\n    this.max = undefined;\r\n    this._range = undefined;\r\n    this.ticks = [];\r\n    this._gridLineItems = null;\r\n    this._labelItems = null;\r\n    this._labelSizes = null;\r\n    this._length = 0;\r\n    this._maxLength = 0;\r\n    this._longestTextCache = {};\r\n    this._startPixel = undefined;\r\n    this._endPixel = undefined;\r\n    this._reversePixels = false;\r\n    this._userMax = undefined;\r\n    this._userMin = undefined;\r\n    this._suggestedMax = undefined;\r\n    this._suggestedMin = undefined;\r\n    this._ticksLength = 0;\r\n    this._borderValue = 0;\r\n    this._cache = {};\r\n    this._dataLimitsCached = false;\r\n    this.$context = undefined;\r\n  }\r\n  init(options) {\r\n    const me = this;\r\n    me.options = options.setContext(me.getContext());\r\n    me.axis = options.axis;\r\n    me._userMin = me.parse(options.min);\r\n    me._userMax = me.parse(options.max);\r\n    me._suggestedMin = me.parse(options.suggestedMin);\r\n    me._suggestedMax = me.parse(options.suggestedMax);\r\n  }\r\n  parse(raw, index) {\r\n    return raw;\r\n  }\r\n  getUserBounds() {\r\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\r\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\r\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\r\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\r\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\r\n    return {\r\n      min: finiteOrDefault(_userMin, _suggestedMin),\r\n      max: finiteOrDefault(_userMax, _suggestedMax),\r\n      minDefined: isNumberFinite(_userMin),\r\n      maxDefined: isNumberFinite(_userMax)\r\n    };\r\n  }\r\n  getMinMax(canStack) {\r\n    const me = this;\r\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\r\n    let range;\r\n    if (minDefined && maxDefined) {\r\n      return {min, max};\r\n    }\r\n    const metas = me.getMatchingVisibleMetas();\r\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      range = metas[i].controller.getMinMax(me, canStack);\r\n      if (!minDefined) {\r\n        min = Math.min(min, range.min);\r\n      }\r\n      if (!maxDefined) {\r\n        max = Math.max(max, range.max);\r\n      }\r\n    }\r\n    return {\r\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\r\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\r\n    };\r\n  }\r\n  getPadding() {\r\n    const me = this;\r\n    return {\r\n      left: me.paddingLeft || 0,\r\n      top: me.paddingTop || 0,\r\n      right: me.paddingRight || 0,\r\n      bottom: me.paddingBottom || 0\r\n    };\r\n  }\r\n  getTicks() {\r\n    return this.ticks;\r\n  }\r\n  getLabels() {\r\n    const data = this.chart.data;\r\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\r\n  }\r\n  beforeLayout() {\r\n    this._cache = {};\r\n    this._dataLimitsCached = false;\r\n  }\r\n  beforeUpdate() {\r\n    callback(this.options.beforeUpdate, [this]);\r\n  }\r\n  update(maxWidth, maxHeight, margins) {\r\n    const me = this;\r\n    const tickOpts = me.options.ticks;\r\n    const sampleSize = tickOpts.sampleSize;\r\n    me.beforeUpdate();\r\n    me.maxWidth = maxWidth;\r\n    me.maxHeight = maxHeight;\r\n    me._margins = margins = Object.assign({\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    }, margins);\r\n    me.ticks = null;\r\n    me._labelSizes = null;\r\n    me._gridLineItems = null;\r\n    me._labelItems = null;\r\n    me.beforeSetDimensions();\r\n    me.setDimensions();\r\n    me.afterSetDimensions();\r\n    me._maxLength = me.isHorizontal()\r\n      ? me.width + margins.left + margins.right\r\n      : me.height + margins.top + margins.bottom;\r\n    if (!me._dataLimitsCached) {\r\n      me.beforeDataLimits();\r\n      me.determineDataLimits();\r\n      me.afterDataLimits();\r\n      me._range = _addGrace(me, me.options.grace);\r\n      me._dataLimitsCached = true;\r\n    }\r\n    me.beforeBuildTicks();\r\n    me.ticks = me.buildTicks() || [];\r\n    me.afterBuildTicks();\r\n    const samplingEnabled = sampleSize < me.ticks.length;\r\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\r\n    me.configure();\r\n    me.beforeCalculateLabelRotation();\r\n    me.calculateLabelRotation();\r\n    me.afterCalculateLabelRotation();\r\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\r\n      me.ticks = autoSkip(me, me.ticks);\r\n      me._labelSizes = null;\r\n    }\r\n    if (samplingEnabled) {\r\n      me._convertTicksToLabels(me.ticks);\r\n    }\r\n    me.beforeFit();\r\n    me.fit();\r\n    me.afterFit();\r\n    me.afterUpdate();\r\n  }\r\n  configure() {\r\n    const me = this;\r\n    let reversePixels = me.options.reverse;\r\n    let startPixel, endPixel;\r\n    if (me.isHorizontal()) {\r\n      startPixel = me.left;\r\n      endPixel = me.right;\r\n    } else {\r\n      startPixel = me.top;\r\n      endPixel = me.bottom;\r\n      reversePixels = !reversePixels;\r\n    }\r\n    me._startPixel = startPixel;\r\n    me._endPixel = endPixel;\r\n    me._reversePixels = reversePixels;\r\n    me._length = endPixel - startPixel;\r\n    me._alignToPixels = me.options.alignToPixels;\r\n  }\r\n  afterUpdate() {\r\n    callback(this.options.afterUpdate, [this]);\r\n  }\r\n  beforeSetDimensions() {\r\n    callback(this.options.beforeSetDimensions, [this]);\r\n  }\r\n  setDimensions() {\r\n    const me = this;\r\n    if (me.isHorizontal()) {\r\n      me.width = me.maxWidth;\r\n      me.left = 0;\r\n      me.right = me.width;\r\n    } else {\r\n      me.height = me.maxHeight;\r\n      me.top = 0;\r\n      me.bottom = me.height;\r\n    }\r\n    me.paddingLeft = 0;\r\n    me.paddingTop = 0;\r\n    me.paddingRight = 0;\r\n    me.paddingBottom = 0;\r\n  }\r\n  afterSetDimensions() {\r\n    callback(this.options.afterSetDimensions, [this]);\r\n  }\r\n  _callHooks(name) {\r\n    const me = this;\r\n    me.chart.notifyPlugins(name, me.getContext());\r\n    callback(me.options[name], [me]);\r\n  }\r\n  beforeDataLimits() {\r\n    this._callHooks('beforeDataLimits');\r\n  }\r\n  determineDataLimits() {}\r\n  afterDataLimits() {\r\n    this._callHooks('afterDataLimits');\r\n  }\r\n  beforeBuildTicks() {\r\n    this._callHooks('beforeBuildTicks');\r\n  }\r\n  buildTicks() {\r\n    return [];\r\n  }\r\n  afterBuildTicks() {\r\n    this._callHooks('afterBuildTicks');\r\n  }\r\n  beforeTickToLabelConversion() {\r\n    callback(this.options.beforeTickToLabelConversion, [this]);\r\n  }\r\n  generateTickLabels(ticks) {\r\n    const me = this;\r\n    const tickOpts = me.options.ticks;\r\n    let i, ilen, tick;\r\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n      tick = ticks[i];\r\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\r\n    }\r\n    for (i = 0; i < ilen; i++) {\r\n      if (isNullOrUndef(ticks[i].label)) {\r\n        ticks.splice(i, 1);\r\n        ilen--;\r\n        i--;\r\n      }\r\n    }\r\n  }\r\n  afterTickToLabelConversion() {\r\n    callback(this.options.afterTickToLabelConversion, [this]);\r\n  }\r\n  beforeCalculateLabelRotation() {\r\n    callback(this.options.beforeCalculateLabelRotation, [this]);\r\n  }\r\n  calculateLabelRotation() {\r\n    const me = this;\r\n    const options = me.options;\r\n    const tickOpts = options.ticks;\r\n    const numTicks = me.ticks.length;\r\n    const minRotation = tickOpts.minRotation || 0;\r\n    const maxRotation = tickOpts.maxRotation;\r\n    let labelRotation = minRotation;\r\n    let tickWidth, maxHeight, maxLabelDiagonal;\r\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\r\n      me.labelRotation = minRotation;\r\n      return;\r\n    }\r\n    const labelSizes = me._getLabelSizes();\r\n    const maxLabelWidth = labelSizes.widest.width;\r\n    const maxLabelHeight = labelSizes.highest.height;\r\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\r\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\r\n    if (maxLabelWidth + 6 > tickWidth) {\r\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\r\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\r\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\r\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\r\n      labelRotation = toDegrees(Math.min(\r\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\r\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\r\n      ));\r\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\r\n    }\r\n    me.labelRotation = labelRotation;\r\n  }\r\n  afterCalculateLabelRotation() {\r\n    callback(this.options.afterCalculateLabelRotation, [this]);\r\n  }\r\n  beforeFit() {\r\n    callback(this.options.beforeFit, [this]);\r\n  }\r\n  fit() {\r\n    const me = this;\r\n    const minSize = {\r\n      width: 0,\r\n      height: 0\r\n    };\r\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\r\n    const display = me._isVisible();\r\n    const isHorizontal = me.isHorizontal();\r\n    if (display) {\r\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\r\n      if (isHorizontal) {\r\n        minSize.width = me.maxWidth;\r\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\r\n      } else {\r\n        minSize.height = me.maxHeight;\r\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\r\n      }\r\n      if (tickOpts.display && me.ticks.length) {\r\n        const {first, last, widest, highest} = me._getLabelSizes();\r\n        const tickPadding = tickOpts.padding * 2;\r\n        const angleRadians = toRadians(me.labelRotation);\r\n        const cos = Math.cos(angleRadians);\r\n        const sin = Math.sin(angleRadians);\r\n        if (isHorizontal) {\r\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\r\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\r\n        } else {\r\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\r\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\r\n        }\r\n        me._calculatePadding(first, last, sin, cos);\r\n      }\r\n    }\r\n    me._handleMargins();\r\n    if (isHorizontal) {\r\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\r\n      me.height = minSize.height;\r\n    } else {\r\n      me.width = minSize.width;\r\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\r\n    }\r\n  }\r\n  _calculatePadding(first, last, sin, cos) {\r\n    const me = this;\r\n    const {ticks: {align, padding}, position} = me.options;\r\n    const isRotated = me.labelRotation !== 0;\r\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\r\n    if (me.isHorizontal()) {\r\n      const offsetLeft = me.getPixelForTick(0) - me.left;\r\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\r\n      let paddingLeft = 0;\r\n      let paddingRight = 0;\r\n      if (isRotated) {\r\n        if (labelsBelowTicks) {\r\n          paddingLeft = cos * first.width;\r\n          paddingRight = sin * last.height;\r\n        } else {\r\n          paddingLeft = sin * first.height;\r\n          paddingRight = cos * last.width;\r\n        }\r\n      } else if (align === 'start') {\r\n        paddingRight = last.width;\r\n      } else if (align === 'end') {\r\n        paddingLeft = first.width;\r\n      } else {\r\n        paddingLeft = first.width / 2;\r\n        paddingRight = last.width / 2;\r\n      }\r\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\r\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\r\n    } else {\r\n      let paddingTop = last.height / 2;\r\n      let paddingBottom = first.height / 2;\r\n      if (align === 'start') {\r\n        paddingTop = 0;\r\n        paddingBottom = first.height;\r\n      } else if (align === 'end') {\r\n        paddingTop = last.height;\r\n        paddingBottom = 0;\r\n      }\r\n      me.paddingTop = paddingTop + padding;\r\n      me.paddingBottom = paddingBottom + padding;\r\n    }\r\n  }\r\n  _handleMargins() {\r\n    const me = this;\r\n    if (me._margins) {\r\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\r\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\r\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\r\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\r\n    }\r\n  }\r\n  afterFit() {\r\n    callback(this.options.afterFit, [this]);\r\n  }\r\n  isHorizontal() {\r\n    const {axis, position} = this.options;\r\n    return position === 'top' || position === 'bottom' || axis === 'x';\r\n  }\r\n  isFullSize() {\r\n    return this.options.fullSize;\r\n  }\r\n  _convertTicksToLabels(ticks) {\r\n    const me = this;\r\n    me.beforeTickToLabelConversion();\r\n    me.generateTickLabels(ticks);\r\n    me.afterTickToLabelConversion();\r\n  }\r\n  _getLabelSizes() {\r\n    const me = this;\r\n    let labelSizes = me._labelSizes;\r\n    if (!labelSizes) {\r\n      const sampleSize = me.options.ticks.sampleSize;\r\n      let ticks = me.ticks;\r\n      if (sampleSize < ticks.length) {\r\n        ticks = sample(ticks, sampleSize);\r\n      }\r\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\r\n    }\r\n    return labelSizes;\r\n  }\r\n  _computeLabelSizes(ticks, length) {\r\n    const {ctx, _longestTextCache: caches} = this;\r\n    const widths = [];\r\n    const heights = [];\r\n    let widestLabelSize = 0;\r\n    let highestLabelSize = 0;\r\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\r\n    for (i = 0; i < length; ++i) {\r\n      label = ticks[i].label;\r\n      tickFont = this._resolveTickFontOptions(i);\r\n      ctx.font = fontString = tickFont.string;\r\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\r\n      lineHeight = tickFont.lineHeight;\r\n      width = height = 0;\r\n      if (!isNullOrUndef(label) && !isArray(label)) {\r\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\r\n        height = lineHeight;\r\n      } else if (isArray(label)) {\r\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\r\n          nestedLabel = label[j];\r\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\r\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\r\n            height += lineHeight;\r\n          }\r\n        }\r\n      }\r\n      widths.push(width);\r\n      heights.push(height);\r\n      widestLabelSize = Math.max(width, widestLabelSize);\r\n      highestLabelSize = Math.max(height, highestLabelSize);\r\n    }\r\n    garbageCollect(caches, length);\r\n    const widest = widths.indexOf(widestLabelSize);\r\n    const highest = heights.indexOf(highestLabelSize);\r\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\r\n    return {\r\n      first: valueAt(0),\r\n      last: valueAt(length - 1),\r\n      widest: valueAt(widest),\r\n      highest: valueAt(highest),\r\n      widths,\r\n      heights,\r\n    };\r\n  }\r\n  getLabelForValue(value) {\r\n    return value;\r\n  }\r\n  getPixelForValue(value, index) {\r\n    return NaN;\r\n  }\r\n  getValueForPixel(pixel) {}\r\n  getPixelForTick(index) {\r\n    const ticks = this.ticks;\r\n    if (index < 0 || index > ticks.length - 1) {\r\n      return null;\r\n    }\r\n    return this.getPixelForValue(ticks[index].value);\r\n  }\r\n  getPixelForDecimal(decimal) {\r\n    const me = this;\r\n    if (me._reversePixels) {\r\n      decimal = 1 - decimal;\r\n    }\r\n    const pixel = me._startPixel + decimal * me._length;\r\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\r\n  }\r\n  getDecimalForPixel(pixel) {\r\n    const decimal = (pixel - this._startPixel) / this._length;\r\n    return this._reversePixels ? 1 - decimal : decimal;\r\n  }\r\n  getBasePixel() {\r\n    return this.getPixelForValue(this.getBaseValue());\r\n  }\r\n  getBaseValue() {\r\n    const {min, max} = this;\r\n    return min < 0 && max < 0 ? max :\r\n      min > 0 && max > 0 ? min :\r\n      0;\r\n  }\r\n  getContext(index) {\r\n    const me = this;\r\n    const ticks = me.ticks || [];\r\n    if (index >= 0 && index < ticks.length) {\r\n      const tick = ticks[index];\r\n      return tick.$context ||\r\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\r\n    }\r\n    return me.$context ||\r\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\r\n  }\r\n  _tickSize() {\r\n    const me = this;\r\n    const optionTicks = me.options.ticks;\r\n    const rot = toRadians(me.labelRotation);\r\n    const cos = Math.abs(Math.cos(rot));\r\n    const sin = Math.abs(Math.sin(rot));\r\n    const labelSizes = me._getLabelSizes();\r\n    const padding = optionTicks.autoSkipPadding || 0;\r\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\r\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\r\n    return me.isHorizontal()\r\n      ? h * cos > w * sin ? w / cos : h / sin\r\n      : h * sin < w * cos ? h / cos : w / sin;\r\n  }\r\n  _isVisible() {\r\n    const display = this.options.display;\r\n    if (display !== 'auto') {\r\n      return !!display;\r\n    }\r\n    return this.getMatchingVisibleMetas().length > 0;\r\n  }\r\n  _computeGridLineItems(chartArea) {\r\n    const me = this;\r\n    const axis = me.axis;\r\n    const chart = me.chart;\r\n    const options = me.options;\r\n    const {grid, position} = options;\r\n    const offset = grid.offset;\r\n    const isHorizontal = me.isHorizontal();\r\n    const ticks = me.ticks;\r\n    const ticksLength = ticks.length + (offset ? 1 : 0);\r\n    const tl = getTickMarkLength(grid);\r\n    const items = [];\r\n    const borderOpts = grid.setContext(me.getContext());\r\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\r\n    const axisHalfWidth = axisWidth / 2;\r\n    const alignBorderValue = function(pixel) {\r\n      return _alignPixel(chart, pixel, axisWidth);\r\n    };\r\n    let borderValue, i, lineValue, alignedLineValue;\r\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\r\n    if (position === 'top') {\r\n      borderValue = alignBorderValue(me.bottom);\r\n      ty1 = me.bottom - tl;\r\n      ty2 = borderValue - axisHalfWidth;\r\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\r\n      y2 = chartArea.bottom;\r\n    } else if (position === 'bottom') {\r\n      borderValue = alignBorderValue(me.top);\r\n      y1 = chartArea.top;\r\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\r\n      ty1 = borderValue + axisHalfWidth;\r\n      ty2 = me.top + tl;\r\n    } else if (position === 'left') {\r\n      borderValue = alignBorderValue(me.right);\r\n      tx1 = me.right - tl;\r\n      tx2 = borderValue - axisHalfWidth;\r\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\r\n      x2 = chartArea.right;\r\n    } else if (position === 'right') {\r\n      borderValue = alignBorderValue(me.left);\r\n      x1 = chartArea.left;\r\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\r\n      tx1 = borderValue + axisHalfWidth;\r\n      tx2 = me.left + tl;\r\n    } else if (axis === 'x') {\r\n      if (position === 'center') {\r\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\r\n      }\r\n      y1 = chartArea.top;\r\n      y2 = chartArea.bottom;\r\n      ty1 = borderValue + axisHalfWidth;\r\n      ty2 = ty1 + tl;\r\n    } else if (axis === 'y') {\r\n      if (position === 'center') {\r\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\r\n      }\r\n      tx1 = borderValue - axisHalfWidth;\r\n      tx2 = tx1 - tl;\r\n      x1 = chartArea.left;\r\n      x2 = chartArea.right;\r\n    }\r\n    for (i = 0; i < ticksLength; ++i) {\r\n      const optsAtIndex = grid.setContext(me.getContext(i));\r\n      const lineWidth = optsAtIndex.lineWidth;\r\n      const lineColor = optsAtIndex.color;\r\n      const borderDash = grid.borderDash || [];\r\n      const borderDashOffset = optsAtIndex.borderDashOffset;\r\n      const tickWidth = optsAtIndex.tickWidth;\r\n      const tickColor = optsAtIndex.tickColor;\r\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\r\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\r\n      lineValue = getPixelForGridLine(me, i, offset);\r\n      if (lineValue === undefined) {\r\n        continue;\r\n      }\r\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\r\n      if (isHorizontal) {\r\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\r\n      } else {\r\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\r\n      }\r\n      items.push({\r\n        tx1,\r\n        ty1,\r\n        tx2,\r\n        ty2,\r\n        x1,\r\n        y1,\r\n        x2,\r\n        y2,\r\n        width: lineWidth,\r\n        color: lineColor,\r\n        borderDash,\r\n        borderDashOffset,\r\n        tickWidth,\r\n        tickColor,\r\n        tickBorderDash,\r\n        tickBorderDashOffset,\r\n      });\r\n    }\r\n    me._ticksLength = ticksLength;\r\n    me._borderValue = borderValue;\r\n    return items;\r\n  }\r\n  _computeLabelItems(chartArea) {\r\n    const me = this;\r\n    const axis = me.axis;\r\n    const options = me.options;\r\n    const {position, ticks: optionTicks} = options;\r\n    const isHorizontal = me.isHorizontal();\r\n    const ticks = me.ticks;\r\n    const {align, crossAlign, padding, mirror} = optionTicks;\r\n    const tl = getTickMarkLength(options.grid);\r\n    const tickAndPadding = tl + padding;\r\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\r\n    const rotation = -toRadians(me.labelRotation);\r\n    const items = [];\r\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\r\n    let textBaseline = 'middle';\r\n    if (position === 'top') {\r\n      y = me.bottom - hTickAndPadding;\r\n      textAlign = me._getXAxisLabelAlignment();\r\n    } else if (position === 'bottom') {\r\n      y = me.top + hTickAndPadding;\r\n      textAlign = me._getXAxisLabelAlignment();\r\n    } else if (position === 'left') {\r\n      const ret = me._getYAxisLabelAlignment(tl);\r\n      textAlign = ret.textAlign;\r\n      x = ret.x;\r\n    } else if (position === 'right') {\r\n      const ret = me._getYAxisLabelAlignment(tl);\r\n      textAlign = ret.textAlign;\r\n      x = ret.x;\r\n    } else if (axis === 'x') {\r\n      if (position === 'center') {\r\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\r\n      }\r\n      textAlign = me._getXAxisLabelAlignment();\r\n    } else if (axis === 'y') {\r\n      if (position === 'center') {\r\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\r\n      }\r\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\r\n    }\r\n    if (axis === 'y') {\r\n      if (align === 'start') {\r\n        textBaseline = 'top';\r\n      } else if (align === 'end') {\r\n        textBaseline = 'bottom';\r\n      }\r\n    }\r\n    const labelSizes = me._getLabelSizes();\r\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n      tick = ticks[i];\r\n      label = tick.label;\r\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\r\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\r\n      font = me._resolveTickFontOptions(i);\r\n      lineHeight = font.lineHeight;\r\n      lineCount = isArray(label) ? label.length : 1;\r\n      const halfCount = lineCount / 2;\r\n      const color = optsAtIndex.color;\r\n      const strokeColor = optsAtIndex.textStrokeColor;\r\n      const strokeWidth = optsAtIndex.textStrokeWidth;\r\n      if (isHorizontal) {\r\n        x = pixel;\r\n        if (position === 'top') {\r\n          if (crossAlign === 'near' || rotation !== 0) {\r\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\r\n          } else if (crossAlign === 'center') {\r\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\r\n          } else {\r\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\r\n          }\r\n        } else {\r\n          if (crossAlign === 'near' || rotation !== 0) {\r\n            textOffset = lineHeight / 2;\r\n          } else if (crossAlign === 'center') {\r\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\r\n          } else {\r\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\r\n          }\r\n        }\r\n        if (mirror) {\r\n          textOffset *= -1;\r\n        }\r\n      } else {\r\n        y = pixel;\r\n        textOffset = (1 - lineCount) * lineHeight / 2;\r\n      }\r\n      let backdrop;\r\n      if (optsAtIndex.showLabelBackdrop) {\r\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\r\n        const height = labelSizes.heights[i];\r\n        const width = labelSizes.widths[i];\r\n        let top = y + textOffset - labelPadding.top;\r\n        let left = x - labelPadding.left;\r\n        switch (textBaseline) {\r\n        case 'middle':\r\n          top -= height / 2;\r\n          break;\r\n        case 'bottom':\r\n          top -= height;\r\n          break;\r\n        }\r\n        switch (textAlign) {\r\n        case 'center':\r\n          left -= width / 2;\r\n          break;\r\n        case 'right':\r\n          left -= width;\r\n          break;\r\n        }\r\n        backdrop = {\r\n          left,\r\n          top,\r\n          width: width + labelPadding.width,\r\n          height: height + labelPadding.height,\r\n          color: optsAtIndex.backdropColor,\r\n        };\r\n      }\r\n      items.push({\r\n        rotation,\r\n        label,\r\n        font,\r\n        color,\r\n        strokeColor,\r\n        strokeWidth,\r\n        textOffset,\r\n        textAlign,\r\n        textBaseline,\r\n        translation: [x, y],\r\n        backdrop,\r\n      });\r\n    }\r\n    return items;\r\n  }\r\n  _getXAxisLabelAlignment() {\r\n    const me = this;\r\n    const {position, ticks} = me.options;\r\n    const rotation = -toRadians(me.labelRotation);\r\n    if (rotation) {\r\n      return position === 'top' ? 'left' : 'right';\r\n    }\r\n    let align = 'center';\r\n    if (ticks.align === 'start') {\r\n      align = 'left';\r\n    } else if (ticks.align === 'end') {\r\n      align = 'right';\r\n    }\r\n    return align;\r\n  }\r\n  _getYAxisLabelAlignment(tl) {\r\n    const me = this;\r\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\r\n    const labelSizes = me._getLabelSizes();\r\n    const tickAndPadding = tl + padding;\r\n    const widest = labelSizes.widest.width;\r\n    let textAlign;\r\n    let x;\r\n    if (position === 'left') {\r\n      if (mirror) {\r\n        textAlign = 'left';\r\n        x = me.right + padding;\r\n      } else {\r\n        x = me.right - tickAndPadding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'right';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x -= (widest / 2);\r\n        } else {\r\n          textAlign = 'left';\r\n          x = me.left;\r\n        }\r\n      }\r\n    } else if (position === 'right') {\r\n      if (mirror) {\r\n        textAlign = 'right';\r\n        x = me.left + padding;\r\n      } else {\r\n        x = me.left + tickAndPadding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'left';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x += widest / 2;\r\n        } else {\r\n          textAlign = 'right';\r\n          x = me.right;\r\n        }\r\n      }\r\n    } else {\r\n      textAlign = 'right';\r\n    }\r\n    return {textAlign, x};\r\n  }\r\n  _computeLabelArea() {\r\n    const me = this;\r\n    if (me.options.ticks.mirror) {\r\n      return;\r\n    }\r\n    const chart = me.chart;\r\n    const position = me.options.position;\r\n    if (position === 'left' || position === 'right') {\r\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\r\n    } if (position === 'top' || position === 'bottom') {\r\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\r\n    }\r\n  }\r\n  drawBackground() {\r\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\r\n    if (backgroundColor) {\r\n      ctx.save();\r\n      ctx.fillStyle = backgroundColor;\r\n      ctx.fillRect(left, top, width, height);\r\n      ctx.restore();\r\n    }\r\n  }\r\n  getLineWidthForValue(value) {\r\n    const me = this;\r\n    const grid = me.options.grid;\r\n    if (!me._isVisible() || !grid.display) {\r\n      return 0;\r\n    }\r\n    const ticks = me.ticks;\r\n    const index = ticks.findIndex(t => t.value === value);\r\n    if (index >= 0) {\r\n      const opts = grid.setContext(me.getContext(index));\r\n      return opts.lineWidth;\r\n    }\r\n    return 0;\r\n  }\r\n  drawGrid(chartArea) {\r\n    const me = this;\r\n    const grid = me.options.grid;\r\n    const ctx = me.ctx;\r\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\r\n    let i, ilen;\r\n    const drawLine = (p1, p2, style) => {\r\n      if (!style.width || !style.color) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n      ctx.lineWidth = style.width;\r\n      ctx.strokeStyle = style.color;\r\n      ctx.setLineDash(style.borderDash || []);\r\n      ctx.lineDashOffset = style.borderDashOffset;\r\n      ctx.beginPath();\r\n      ctx.moveTo(p1.x, p1.y);\r\n      ctx.lineTo(p2.x, p2.y);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    };\r\n    if (grid.display) {\r\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n        const item = items[i];\r\n        if (grid.drawOnChartArea) {\r\n          drawLine(\r\n            {x: item.x1, y: item.y1},\r\n            {x: item.x2, y: item.y2},\r\n            item\r\n          );\r\n        }\r\n        if (grid.drawTicks) {\r\n          drawLine(\r\n            {x: item.tx1, y: item.ty1},\r\n            {x: item.tx2, y: item.ty2},\r\n            {\r\n              color: item.tickColor,\r\n              width: item.tickWidth,\r\n              borderDash: item.tickBorderDash,\r\n              borderDashOffset: item.tickBorderDashOffset\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n  drawBorder() {\r\n    const me = this;\r\n    const {chart, ctx, options: {grid}} = me;\r\n    const borderOpts = grid.setContext(me.getContext());\r\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\r\n    if (!axisWidth) {\r\n      return;\r\n    }\r\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\r\n    const borderValue = me._borderValue;\r\n    let x1, x2, y1, y2;\r\n    if (me.isHorizontal()) {\r\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\r\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\r\n      y1 = y2 = borderValue;\r\n    } else {\r\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\r\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\r\n      x1 = x2 = borderValue;\r\n    }\r\n    ctx.save();\r\n    ctx.lineWidth = borderOpts.borderWidth;\r\n    ctx.strokeStyle = borderOpts.borderColor;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x1, y1);\r\n    ctx.lineTo(x2, y2);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n  }\r\n  drawLabels(chartArea) {\r\n    const me = this;\r\n    const optionTicks = me.options.ticks;\r\n    if (!optionTicks.display) {\r\n      return;\r\n    }\r\n    const ctx = me.ctx;\r\n    const area = me._computeLabelArea();\r\n    if (area) {\r\n      clipArea(ctx, area);\r\n    }\r\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\r\n    let i, ilen;\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      const item = items[i];\r\n      const tickFont = item.font;\r\n      const label = item.label;\r\n      if (item.backdrop) {\r\n        ctx.fillStyle = item.backdrop.color;\r\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\r\n      }\r\n      let y = item.textOffset;\r\n      renderText(ctx, label, 0, y, tickFont, item);\r\n    }\r\n    if (area) {\r\n      unclipArea(ctx);\r\n    }\r\n  }\r\n  drawTitle() {\r\n    const {ctx, options: {position, title, reverse}} = this;\r\n    if (!title.display) {\r\n      return;\r\n    }\r\n    const font = toFont(title.font);\r\n    const padding = toPadding(title.padding);\r\n    const align = title.align;\r\n    let offset = font.lineHeight / 2;\r\n    if (position === 'bottom') {\r\n      offset += padding.bottom;\r\n      if (isArray(title.text)) {\r\n        offset += font.lineHeight * (title.text.length - 1);\r\n      }\r\n    } else {\r\n      offset += padding.top;\r\n    }\r\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\r\n    renderText(ctx, title.text, 0, 0, font, {\r\n      color: title.color,\r\n      maxWidth,\r\n      rotation,\r\n      textAlign: titleAlign(align, position, reverse),\r\n      textBaseline: 'middle',\r\n      translation: [titleX, titleY],\r\n    });\r\n  }\r\n  draw(chartArea) {\r\n    const me = this;\r\n    if (!me._isVisible()) {\r\n      return;\r\n    }\r\n    me.drawBackground();\r\n    me.drawGrid(chartArea);\r\n    me.drawBorder();\r\n    me.drawTitle();\r\n    me.drawLabels(chartArea);\r\n  }\r\n  _layers() {\r\n    const me = this;\r\n    const opts = me.options;\r\n    const tz = opts.ticks && opts.ticks.z || 0;\r\n    const gz = opts.grid && opts.grid.z || 0;\r\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\r\n      return [{\r\n        z: tz,\r\n        draw(chartArea) {\r\n          me.draw(chartArea);\r\n        }\r\n      }];\r\n    }\r\n    return [{\r\n      z: gz,\r\n      draw(chartArea) {\r\n        me.drawBackground();\r\n        me.drawGrid(chartArea);\r\n        me.drawTitle();\r\n      }\r\n    }, {\r\n      z: gz + 1,\r\n      draw() {\r\n        me.drawBorder();\r\n      }\r\n    }, {\r\n      z: tz,\r\n      draw(chartArea) {\r\n        me.drawLabels(chartArea);\r\n      }\r\n    }];\r\n  }\r\n  getMatchingVisibleMetas(type) {\r\n    const me = this;\r\n    const metas = me.chart.getSortedVisibleDatasetMetas();\r\n    const axisID = me.axis + 'AxisID';\r\n    const result = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      const meta = metas[i];\r\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\r\n        result.push(meta);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  _resolveTickFontOptions(index) {\r\n    const opts = this.options.ticks.setContext(this.getContext(index));\r\n    return toFont(opts.font);\r\n  }\r\n  _maxDigits() {\r\n    const me = this;\r\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\r\n    return me.isHorizontal() ? me.width / fontSize / 0.7 : me.height / fontSize;\r\n  }\r\n}\r\n\r\nclass TypedRegistry {\r\n  constructor(type, scope, override) {\r\n    this.type = type;\r\n    this.scope = scope;\r\n    this.override = override;\r\n    this.items = Object.create(null);\r\n  }\r\n  isForType(type) {\r\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\r\n  }\r\n  register(item) {\r\n    const me = this;\r\n    const proto = Object.getPrototypeOf(item);\r\n    let parentScope;\r\n    if (isIChartComponent(proto)) {\r\n      parentScope = me.register(proto);\r\n    }\r\n    const items = me.items;\r\n    const id = item.id;\r\n    const scope = me.scope + '.' + id;\r\n    if (!id) {\r\n      throw new Error('class does not have id: ' + item);\r\n    }\r\n    if (id in items) {\r\n      return scope;\r\n    }\r\n    items[id] = item;\r\n    registerDefaults(item, scope, parentScope);\r\n    if (me.override) {\r\n      defaults.override(item.id, item.overrides);\r\n    }\r\n    return scope;\r\n  }\r\n  get(id) {\r\n    return this.items[id];\r\n  }\r\n  unregister(item) {\r\n    const items = this.items;\r\n    const id = item.id;\r\n    const scope = this.scope;\r\n    if (id in items) {\r\n      delete items[id];\r\n    }\r\n    if (scope && id in defaults[scope]) {\r\n      delete defaults[scope][id];\r\n      if (this.override) {\r\n        delete overrides[id];\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction registerDefaults(item, scope, parentScope) {\r\n  const itemDefaults = merge(Object.create(null), [\r\n    parentScope ? defaults.get(parentScope) : {},\r\n    defaults.get(scope),\r\n    item.defaults\r\n  ]);\r\n  defaults.set(scope, itemDefaults);\r\n  if (item.defaultRoutes) {\r\n    routeDefaults(scope, item.defaultRoutes);\r\n  }\r\n  if (item.descriptors) {\r\n    defaults.describe(scope, item.descriptors);\r\n  }\r\n}\r\nfunction routeDefaults(scope, routes) {\r\n  Object.keys(routes).forEach(property => {\r\n    const propertyParts = property.split('.');\r\n    const sourceName = propertyParts.pop();\r\n    const sourceScope = [scope].concat(propertyParts).join('.');\r\n    const parts = routes[property].split('.');\r\n    const targetName = parts.pop();\r\n    const targetScope = parts.join('.');\r\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\r\n  });\r\n}\r\nfunction isIChartComponent(proto) {\r\n  return 'id' in proto && 'defaults' in proto;\r\n}\r\n\r\nclass Registry {\r\n  constructor() {\r\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\r\n    this.elements = new TypedRegistry(Element, 'elements');\r\n    this.plugins = new TypedRegistry(Object, 'plugins');\r\n    this.scales = new TypedRegistry(Scale, 'scales');\r\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\r\n  }\r\n  add(...args) {\r\n    this._each('register', args);\r\n  }\r\n  remove(...args) {\r\n    this._each('unregister', args);\r\n  }\r\n  addControllers(...args) {\r\n    this._each('register', args, this.controllers);\r\n  }\r\n  addElements(...args) {\r\n    this._each('register', args, this.elements);\r\n  }\r\n  addPlugins(...args) {\r\n    this._each('register', args, this.plugins);\r\n  }\r\n  addScales(...args) {\r\n    this._each('register', args, this.scales);\r\n  }\r\n  getController(id) {\r\n    return this._get(id, this.controllers, 'controller');\r\n  }\r\n  getElement(id) {\r\n    return this._get(id, this.elements, 'element');\r\n  }\r\n  getPlugin(id) {\r\n    return this._get(id, this.plugins, 'plugin');\r\n  }\r\n  getScale(id) {\r\n    return this._get(id, this.scales, 'scale');\r\n  }\r\n  removeControllers(...args) {\r\n    this._each('unregister', args, this.controllers);\r\n  }\r\n  removeElements(...args) {\r\n    this._each('unregister', args, this.elements);\r\n  }\r\n  removePlugins(...args) {\r\n    this._each('unregister', args, this.plugins);\r\n  }\r\n  removeScales(...args) {\r\n    this._each('unregister', args, this.scales);\r\n  }\r\n  _each(method, args, typedRegistry) {\r\n    const me = this;\r\n    [...args].forEach(arg => {\r\n      const reg = typedRegistry || me._getRegistryForType(arg);\r\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\r\n        me._exec(method, reg, arg);\r\n      } else {\r\n        each(arg, item => {\r\n          const itemReg = typedRegistry || me._getRegistryForType(item);\r\n          me._exec(method, itemReg, item);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  _exec(method, registry, component) {\r\n    const camelMethod = _capitalize(method);\r\n    callback(component['before' + camelMethod], [], component);\r\n    registry[method](component);\r\n    callback(component['after' + camelMethod], [], component);\r\n  }\r\n  _getRegistryForType(type) {\r\n    for (let i = 0; i < this._typedRegistries.length; i++) {\r\n      const reg = this._typedRegistries[i];\r\n      if (reg.isForType(type)) {\r\n        return reg;\r\n      }\r\n    }\r\n    return this.plugins;\r\n  }\r\n  _get(id, typedRegistry, type) {\r\n    const item = typedRegistry.get(id);\r\n    if (item === undefined) {\r\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\r\n    }\r\n    return item;\r\n  }\r\n}\r\nvar registry = new Registry();\r\n\r\nclass PluginService {\r\n  constructor() {\r\n    this._init = [];\r\n  }\r\n  notify(chart, hook, args, filter) {\r\n    const me = this;\r\n    if (hook === 'beforeInit') {\r\n      me._init = me._createDescriptors(chart, true);\r\n      me._notify(me._init, chart, 'install');\r\n    }\r\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\r\n    const result = me._notify(descriptors, chart, hook, args);\r\n    if (hook === 'destroy') {\r\n      me._notify(descriptors, chart, 'stop');\r\n      me._notify(me._init, chart, 'uninstall');\r\n    }\r\n    return result;\r\n  }\r\n  _notify(descriptors, chart, hook, args) {\r\n    args = args || {};\r\n    for (const descriptor of descriptors) {\r\n      const plugin = descriptor.plugin;\r\n      const method = plugin[hook];\r\n      const params = [chart, args, descriptor.options];\r\n      if (callback(method, params, plugin) === false && args.cancelable) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  invalidate() {\r\n    if (!isNullOrUndef(this._cache)) {\r\n      this._oldCache = this._cache;\r\n      this._cache = undefined;\r\n    }\r\n  }\r\n  _descriptors(chart) {\r\n    if (this._cache) {\r\n      return this._cache;\r\n    }\r\n    const descriptors = this._cache = this._createDescriptors(chart);\r\n    this._notifyStateChanges(chart);\r\n    return descriptors;\r\n  }\r\n  _createDescriptors(chart, all) {\r\n    const config = chart && chart.config;\r\n    const options = valueOrDefault(config.options && config.options.plugins, {});\r\n    const plugins = allPlugins(config);\r\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\r\n  }\r\n  _notifyStateChanges(chart) {\r\n    const previousDescriptors = this._oldCache || [];\r\n    const descriptors = this._cache;\r\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\r\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\r\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\r\n  }\r\n}\r\nfunction allPlugins(config) {\r\n  const plugins = [];\r\n  const keys = Object.keys(registry.plugins.items);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    plugins.push(registry.getPlugin(keys[i]));\r\n  }\r\n  const local = config.plugins || [];\r\n  for (let i = 0; i < local.length; i++) {\r\n    const plugin = local[i];\r\n    if (plugins.indexOf(plugin) === -1) {\r\n      plugins.push(plugin);\r\n    }\r\n  }\r\n  return plugins;\r\n}\r\nfunction getOpts(options, all) {\r\n  if (!all && options === false) {\r\n    return null;\r\n  }\r\n  if (options === true) {\r\n    return {};\r\n  }\r\n  return options;\r\n}\r\nfunction createDescriptors(chart, plugins, options, all) {\r\n  const result = [];\r\n  const context = chart.getContext();\r\n  for (let i = 0; i < plugins.length; i++) {\r\n    const plugin = plugins[i];\r\n    const id = plugin.id;\r\n    const opts = getOpts(options[id], all);\r\n    if (opts === null) {\r\n      continue;\r\n    }\r\n    result.push({\r\n      plugin,\r\n      options: pluginOpts(chart.config, plugin, opts, context)\r\n    });\r\n  }\r\n  return result;\r\n}\r\nfunction pluginOpts(config, plugin, opts, context) {\r\n  const keys = config.pluginScopeKeys(plugin);\r\n  const scopes = config.getOptionScopes(opts, keys);\r\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\r\n}\r\n\r\nfunction getIndexAxis(type, options) {\r\n  const datasetDefaults = defaults.datasets[type] || {};\r\n  const datasetOptions = (options.datasets || {})[type] || {};\r\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\r\n}\r\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\r\n  let axis = id;\r\n  if (id === '_index_') {\r\n    axis = indexAxis;\r\n  } else if (id === '_value_') {\r\n    axis = indexAxis === 'x' ? 'y' : 'x';\r\n  }\r\n  return axis;\r\n}\r\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\r\n  return axis === indexAxis ? '_index_' : '_value_';\r\n}\r\nfunction axisFromPosition(position) {\r\n  if (position === 'top' || position === 'bottom') {\r\n    return 'x';\r\n  }\r\n  if (position === 'left' || position === 'right') {\r\n    return 'y';\r\n  }\r\n}\r\nfunction determineAxis(id, scaleOptions) {\r\n  if (id === 'x' || id === 'y') {\r\n    return id;\r\n  }\r\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\r\n}\r\nfunction mergeScaleConfig(config, options) {\r\n  const chartDefaults = overrides[config.type] || {scales: {}};\r\n  const configScales = options.scales || {};\r\n  const chartIndexAxis = getIndexAxis(config.type, options);\r\n  const firstIDs = Object.create(null);\r\n  const scales = Object.create(null);\r\n  Object.keys(configScales).forEach(id => {\r\n    const scaleConf = configScales[id];\r\n    const axis = determineAxis(id, scaleConf);\r\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\r\n    const defaultScaleOptions = chartDefaults.scales || {};\r\n    firstIDs[axis] = firstIDs[axis] || id;\r\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\r\n  });\r\n  config.data.datasets.forEach(dataset => {\r\n    const type = dataset.type || config.type;\r\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\r\n    const datasetDefaults = overrides[type] || {};\r\n    const defaultScaleOptions = datasetDefaults.scales || {};\r\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\r\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\r\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\r\n      scales[id] = scales[id] || Object.create(null);\r\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\r\n    });\r\n  });\r\n  Object.keys(scales).forEach(key => {\r\n    const scale = scales[key];\r\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\r\n  });\r\n  return scales;\r\n}\r\nfunction initOptions(config) {\r\n  const options = config.options || (config.options = {});\r\n  options.plugins = valueOrDefault(options.plugins, {});\r\n  options.scales = mergeScaleConfig(config, options);\r\n}\r\nfunction initData(data) {\r\n  data = data || {};\r\n  data.datasets = data.datasets || [];\r\n  data.labels = data.labels || [];\r\n  return data;\r\n}\r\nfunction initConfig(config) {\r\n  config = config || {};\r\n  config.data = initData(config.data);\r\n  initOptions(config);\r\n  return config;\r\n}\r\nconst keyCache = new Map();\r\nconst keysCached = new Set();\r\nfunction cachedKeys(cacheKey, generate) {\r\n  let keys = keyCache.get(cacheKey);\r\n  if (!keys) {\r\n    keys = generate();\r\n    keyCache.set(cacheKey, keys);\r\n    keysCached.add(keys);\r\n  }\r\n  return keys;\r\n}\r\nconst addIfFound = (set, obj, key) => {\r\n  const opts = resolveObjectKey(obj, key);\r\n  if (opts !== undefined) {\r\n    set.add(opts);\r\n  }\r\n};\r\nclass Config {\r\n  constructor(config) {\r\n    this._config = initConfig(config);\r\n    this._scopeCache = new Map();\r\n    this._resolverCache = new Map();\r\n  }\r\n  get type() {\r\n    return this._config.type;\r\n  }\r\n  set type(type) {\r\n    this._config.type = type;\r\n  }\r\n  get data() {\r\n    return this._config.data;\r\n  }\r\n  set data(data) {\r\n    this._config.data = initData(data);\r\n  }\r\n  get options() {\r\n    return this._config.options;\r\n  }\r\n  set options(options) {\r\n    this._config.options = options;\r\n  }\r\n  get plugins() {\r\n    return this._config.plugins;\r\n  }\r\n  update() {\r\n    const config = this._config;\r\n    this.clearCache();\r\n    initOptions(config);\r\n  }\r\n  clearCache() {\r\n    this._scopeCache.clear();\r\n    this._resolverCache.clear();\r\n  }\r\n  datasetScopeKeys(datasetType) {\r\n    return cachedKeys(datasetType,\r\n      () => [[\r\n        `datasets.${datasetType}`,\r\n        ''\r\n      ]]);\r\n  }\r\n  datasetAnimationScopeKeys(datasetType, transition) {\r\n    return cachedKeys(`${datasetType}.transition.${transition}`,\r\n      () => [\r\n        [\r\n          `datasets.${datasetType}.transitions.${transition}`,\r\n          `transitions.${transition}`,\r\n        ],\r\n        [\r\n          `datasets.${datasetType}`,\r\n          ''\r\n        ]\r\n      ]);\r\n  }\r\n  datasetElementScopeKeys(datasetType, elementType) {\r\n    return cachedKeys(`${datasetType}-${elementType}`,\r\n      () => [[\r\n        `datasets.${datasetType}.elements.${elementType}`,\r\n        `datasets.${datasetType}`,\r\n        `elements.${elementType}`,\r\n        ''\r\n      ]]);\r\n  }\r\n  pluginScopeKeys(plugin) {\r\n    const id = plugin.id;\r\n    const type = this.type;\r\n    return cachedKeys(`${type}-plugin-${id}`,\r\n      () => [[\r\n        `plugins.${id}`,\r\n        ...plugin.additionalOptionScopes || [],\r\n      ]]);\r\n  }\r\n  _cachedScopes(mainScope, resetCache) {\r\n    const _scopeCache = this._scopeCache;\r\n    let cache = _scopeCache.get(mainScope);\r\n    if (!cache || resetCache) {\r\n      cache = new Map();\r\n      _scopeCache.set(mainScope, cache);\r\n    }\r\n    return cache;\r\n  }\r\n  getOptionScopes(mainScope, keyLists, resetCache) {\r\n    const {options, type} = this;\r\n    const cache = this._cachedScopes(mainScope, resetCache);\r\n    const cached = cache.get(keyLists);\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    const scopes = new Set();\r\n    keyLists.forEach(keys => {\r\n      if (mainScope) {\r\n        scopes.add(mainScope);\r\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\r\n      }\r\n      keys.forEach(key => addIfFound(scopes, options, key));\r\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\r\n      keys.forEach(key => addIfFound(scopes, defaults, key));\r\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\r\n    });\r\n    const array = [...scopes];\r\n    if (keysCached.has(keyLists)) {\r\n      cache.set(keyLists, array);\r\n    }\r\n    return array;\r\n  }\r\n  chartOptionScopes() {\r\n    const {options, type} = this;\r\n    return [\r\n      options,\r\n      overrides[type] || {},\r\n      defaults.datasets[type] || {},\r\n      {type},\r\n      defaults,\r\n      descriptors\r\n    ];\r\n  }\r\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\r\n    const result = {$shared: true};\r\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\r\n    let options = resolver;\r\n    if (needContext(resolver, names)) {\r\n      result.$shared = false;\r\n      context = isFunction(context) ? context() : context;\r\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\r\n      options = _attachContext(resolver, context, subResolver);\r\n    }\r\n    for (const prop of names) {\r\n      result[prop] = options[prop];\r\n    }\r\n    return result;\r\n  }\r\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\r\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\r\n    return isObject(context)\r\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\r\n      : resolver;\r\n  }\r\n}\r\nfunction getResolver(resolverCache, scopes, prefixes) {\r\n  let cache = resolverCache.get(scopes);\r\n  if (!cache) {\r\n    cache = new Map();\r\n    resolverCache.set(scopes, cache);\r\n  }\r\n  const cacheKey = prefixes.join();\r\n  let cached = cache.get(cacheKey);\r\n  if (!cached) {\r\n    const resolver = _createResolver(scopes, prefixes);\r\n    cached = {\r\n      resolver,\r\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\r\n    };\r\n    cache.set(cacheKey, cached);\r\n  }\r\n  return cached;\r\n}\r\nfunction needContext(proxy, names) {\r\n  const {isScriptable, isIndexable} = _descriptors(proxy);\r\n  for (const prop of names) {\r\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\r\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nvar version = \"3.2.1\";\r\n\r\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\r\nfunction positionIsHorizontal(position, axis) {\r\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\r\n}\r\nfunction compare2Level(l1, l2) {\r\n  return function(a, b) {\r\n    return a[l1] === b[l1]\r\n      ? a[l2] - b[l2]\r\n      : a[l1] - b[l1];\r\n  };\r\n}\r\nfunction onAnimationsComplete(context) {\r\n  const chart = context.chart;\r\n  const animationOptions = chart.options.animation;\r\n  chart.notifyPlugins('afterRender');\r\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\r\n}\r\nfunction onAnimationProgress(context) {\r\n  const chart = context.chart;\r\n  const animationOptions = chart.options.animation;\r\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\r\n}\r\nfunction isDomSupported() {\r\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\r\n}\r\nfunction getCanvas(item) {\r\n  if (isDomSupported() && typeof item === 'string') {\r\n    item = document.getElementById(item);\r\n  } else if (item && item.length) {\r\n    item = item[0];\r\n  }\r\n  if (item && item.canvas) {\r\n    item = item.canvas;\r\n  }\r\n  return item;\r\n}\r\nconst instances = {};\r\nconst getChart = (key) => {\r\n  const canvas = getCanvas(key);\r\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\r\n};\r\nclass Chart {\r\n  constructor(item, config) {\r\n    const me = this;\r\n    this.config = config = new Config(config);\r\n    const initialCanvas = getCanvas(item);\r\n    const existingChart = getChart(initialCanvas);\r\n    if (existingChart) {\r\n      throw new Error(\r\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\r\n\t\t\t\t' must be destroyed before the canvas can be reused.'\r\n      );\r\n    }\r\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\r\n    this.platform = me._initializePlatform(initialCanvas, config);\r\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\r\n    const canvas = context && context.canvas;\r\n    const height = canvas && canvas.height;\r\n    const width = canvas && canvas.width;\r\n    this.id = uid();\r\n    this.ctx = context;\r\n    this.canvas = canvas;\r\n    this.width = width;\r\n    this.height = height;\r\n    this._options = options;\r\n    this._aspectRatio = this.aspectRatio;\r\n    this._layers = [];\r\n    this._metasets = [];\r\n    this._stacks = undefined;\r\n    this.boxes = [];\r\n    this.currentDevicePixelRatio = undefined;\r\n    this.chartArea = undefined;\r\n    this._active = [];\r\n    this._lastEvent = undefined;\r\n    this._listeners = {};\r\n    this._sortedMetasets = [];\r\n    this.scales = {};\r\n    this.scale = undefined;\r\n    this._plugins = new PluginService();\r\n    this.$proxies = {};\r\n    this._hiddenIndices = {};\r\n    this.attached = false;\r\n    this._animationsDisabled = undefined;\r\n    this.$context = undefined;\r\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\r\n    instances[me.id] = me;\r\n    if (!context || !canvas) {\r\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n      return;\r\n    }\r\n    animator.listen(me, 'complete', onAnimationsComplete);\r\n    animator.listen(me, 'progress', onAnimationProgress);\r\n    me._initialize();\r\n    if (me.attached) {\r\n      me.update();\r\n    }\r\n  }\r\n  get aspectRatio() {\r\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\r\n    if (!isNullOrUndef(aspectRatio)) {\r\n      return aspectRatio;\r\n    }\r\n    if (maintainAspectRatio && _aspectRatio) {\r\n      return _aspectRatio;\r\n    }\r\n    return height ? width / height : null;\r\n  }\r\n  get data() {\r\n    return this.config.data;\r\n  }\r\n  set data(data) {\r\n    this.config.data = data;\r\n  }\r\n  get options() {\r\n    return this._options;\r\n  }\r\n  set options(options) {\r\n    this.config.options = options;\r\n  }\r\n  _initialize() {\r\n    const me = this;\r\n    me.notifyPlugins('beforeInit');\r\n    if (me.options.responsive) {\r\n      me.resize();\r\n    } else {\r\n      retinaScale(me, me.options.devicePixelRatio);\r\n    }\r\n    me.bindEvents();\r\n    me.notifyPlugins('afterInit');\r\n    return me;\r\n  }\r\n  _initializePlatform(canvas, config) {\r\n    if (config.platform) {\r\n      return new config.platform();\r\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\r\n      return new BasicPlatform();\r\n    }\r\n    return new DomPlatform();\r\n  }\r\n  clear() {\r\n    clearCanvas(this.canvas, this.ctx);\r\n    return this;\r\n  }\r\n  stop() {\r\n    animator.stop(this);\r\n    return this;\r\n  }\r\n  resize(width, height) {\r\n    if (!animator.running(this)) {\r\n      this._resize(width, height);\r\n    } else {\r\n      this._resizeBeforeDraw = {width, height};\r\n    }\r\n  }\r\n  _resize(width, height) {\r\n    const me = this;\r\n    const options = me.options;\r\n    const canvas = me.canvas;\r\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\r\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\r\n    const oldRatio = me.currentDevicePixelRatio;\r\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\r\n    if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\r\n      return;\r\n    }\r\n    me.width = newSize.width;\r\n    me.height = newSize.height;\r\n    me._aspectRatio = me.aspectRatio;\r\n    retinaScale(me, newRatio, true);\r\n    me.notifyPlugins('resize', {size: newSize});\r\n    callback(options.onResize, [me, newSize], me);\r\n    if (me.attached) {\r\n      if (me._doResize()) {\r\n        me.render();\r\n      }\r\n    }\r\n  }\r\n  ensureScalesHaveIDs() {\r\n    const options = this.options;\r\n    const scalesOptions = options.scales || {};\r\n    each(scalesOptions, (axisOptions, axisID) => {\r\n      axisOptions.id = axisID;\r\n    });\r\n  }\r\n  buildOrUpdateScales() {\r\n    const me = this;\r\n    const options = me.options;\r\n    const scaleOpts = options.scales;\r\n    const scales = me.scales;\r\n    const updated = Object.keys(scales).reduce((obj, id) => {\r\n      obj[id] = false;\r\n      return obj;\r\n    }, {});\r\n    let items = [];\r\n    if (scaleOpts) {\r\n      items = items.concat(\r\n        Object.keys(scaleOpts).map((id) => {\r\n          const scaleOptions = scaleOpts[id];\r\n          const axis = determineAxis(id, scaleOptions);\r\n          const isRadial = axis === 'r';\r\n          const isHorizontal = axis === 'x';\r\n          return {\r\n            options: scaleOptions,\r\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\r\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\r\n          };\r\n        })\r\n      );\r\n    }\r\n    each(items, (item) => {\r\n      const scaleOptions = item.options;\r\n      const id = scaleOptions.id;\r\n      const axis = determineAxis(id, scaleOptions);\r\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\r\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\r\n        scaleOptions.position = item.dposition;\r\n      }\r\n      updated[id] = true;\r\n      let scale = null;\r\n      if (id in scales && scales[id].type === scaleType) {\r\n        scale = scales[id];\r\n      } else {\r\n        const scaleClass = registry.getScale(scaleType);\r\n        scale = new scaleClass({\r\n          id,\r\n          type: scaleType,\r\n          ctx: me.ctx,\r\n          chart: me\r\n        });\r\n        scales[scale.id] = scale;\r\n      }\r\n      scale.init(scaleOptions, options);\r\n    });\r\n    each(updated, (hasUpdated, id) => {\r\n      if (!hasUpdated) {\r\n        delete scales[id];\r\n      }\r\n    });\r\n    each(scales, (scale) => {\r\n      layouts.configure(me, scale, scale.options);\r\n      layouts.addBox(me, scale);\r\n    });\r\n  }\r\n  _updateMetasetIndex(meta, index) {\r\n    const metasets = this._metasets;\r\n    const oldIndex = meta.index;\r\n    if (oldIndex !== index) {\r\n      metasets[oldIndex] = metasets[index];\r\n      metasets[index] = meta;\r\n      meta.index = index;\r\n    }\r\n  }\r\n  _updateMetasets() {\r\n    const me = this;\r\n    const metasets = me._metasets;\r\n    const numData = me.data.datasets.length;\r\n    const numMeta = metasets.length;\r\n    if (numMeta > numData) {\r\n      for (let i = numData; i < numMeta; ++i) {\r\n        me._destroyDatasetMeta(i);\r\n      }\r\n      metasets.splice(numData, numMeta - numData);\r\n    }\r\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\r\n  }\r\n  _removeUnreferencedMetasets() {\r\n    const me = this;\r\n    const {_metasets: metasets, data: {datasets}} = me;\r\n    if (metasets.length > datasets.length) {\r\n      delete me._stacks;\r\n    }\r\n    metasets.forEach((meta, index) => {\r\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\r\n        me._destroyDatasetMeta(index);\r\n      }\r\n    });\r\n  }\r\n  buildOrUpdateControllers() {\r\n    const me = this;\r\n    const newControllers = [];\r\n    const datasets = me.data.datasets;\r\n    let i, ilen;\r\n    me._removeUnreferencedMetasets();\r\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\r\n      const dataset = datasets[i];\r\n      let meta = me.getDatasetMeta(i);\r\n      const type = dataset.type || me.config.type;\r\n      if (meta.type && meta.type !== type) {\r\n        me._destroyDatasetMeta(i);\r\n        meta = me.getDatasetMeta(i);\r\n      }\r\n      meta.type = type;\r\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\r\n      meta.order = dataset.order || 0;\r\n      me._updateMetasetIndex(meta, i);\r\n      meta.label = '' + dataset.label;\r\n      meta.visible = me.isDatasetVisible(i);\r\n      if (meta.controller) {\r\n        meta.controller.updateIndex(i);\r\n        meta.controller.linkScales();\r\n      } else {\r\n        const ControllerClass = registry.getController(type);\r\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\r\n        Object.assign(ControllerClass.prototype, {\r\n          dataElementType: registry.getElement(dataElementType),\r\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\r\n        });\r\n        meta.controller = new ControllerClass(me, i);\r\n        newControllers.push(meta.controller);\r\n      }\r\n    }\r\n    me._updateMetasets();\r\n    return newControllers;\r\n  }\r\n  _resetElements() {\r\n    const me = this;\r\n    each(me.data.datasets, (dataset, datasetIndex) => {\r\n      me.getDatasetMeta(datasetIndex).controller.reset();\r\n    }, me);\r\n  }\r\n  reset() {\r\n    this._resetElements();\r\n    this.notifyPlugins('reset');\r\n  }\r\n  update(mode) {\r\n    const me = this;\r\n    const config = me.config;\r\n    config.update();\r\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\r\n    each(me.scales, (scale) => {\r\n      layouts.removeBox(me, scale);\r\n    });\r\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\r\n    me.ensureScalesHaveIDs();\r\n    me.buildOrUpdateScales();\r\n    const existingEvents = new Set(Object.keys(me._listeners));\r\n    const newEvents = new Set(me.options.events);\r\n    if (!setsEqual(existingEvents, newEvents)) {\r\n      me.unbindEvents();\r\n      me.bindEvents();\r\n    }\r\n    me._plugins.invalidate();\r\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const newControllers = me.buildOrUpdateControllers();\r\n    me.notifyPlugins('beforeElementsUpdate');\r\n    let minPadding = 0;\r\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\r\n      const {controller} = me.getDatasetMeta(i);\r\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\r\n      controller.buildOrUpdateElements(reset);\r\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\r\n    }\r\n    me._minPadding = minPadding;\r\n    me._updateLayout(minPadding);\r\n    if (!animsDisabled) {\r\n      each(newControllers, (controller) => {\r\n        controller.reset();\r\n      });\r\n    }\r\n    me._updateDatasets(mode);\r\n    me.notifyPlugins('afterUpdate', {mode});\r\n    me._layers.sort(compare2Level('z', '_idx'));\r\n    if (me._lastEvent) {\r\n      me._eventHandler(me._lastEvent, true);\r\n    }\r\n    me.render();\r\n  }\r\n  _updateLayout(minPadding) {\r\n    const me = this;\r\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    layouts.update(me, me.width, me.height, minPadding);\r\n    const area = me.chartArea;\r\n    const noArea = area.width <= 0 || area.height <= 0;\r\n    me._layers = [];\r\n    each(me.boxes, (box) => {\r\n      if (noArea && box.position === 'chartArea') {\r\n        return;\r\n      }\r\n      if (box.configure) {\r\n        box.configure();\r\n      }\r\n      me._layers.push(...box._layers());\r\n    }, me);\r\n    me._layers.forEach((item, index) => {\r\n      item._idx = index;\r\n    });\r\n    me.notifyPlugins('afterLayout');\r\n  }\r\n  _updateDatasets(mode) {\r\n    const me = this;\r\n    const isFunction = typeof mode === 'function';\r\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\r\n    }\r\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\r\n  }\r\n  _updateDataset(index, mode) {\r\n    const me = this;\r\n    const meta = me.getDatasetMeta(index);\r\n    const args = {meta, index, mode, cancelable: true};\r\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\r\n      return;\r\n    }\r\n    meta.controller._update(mode);\r\n    args.cancelable = false;\r\n    me.notifyPlugins('afterDatasetUpdate', args);\r\n  }\r\n  render() {\r\n    const me = this;\r\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    if (animator.has(me)) {\r\n      if (me.attached && !animator.running(me)) {\r\n        animator.start(me);\r\n      }\r\n    } else {\r\n      me.draw();\r\n      onAnimationsComplete({chart: me});\r\n    }\r\n  }\r\n  draw() {\r\n    const me = this;\r\n    let i;\r\n    if (me._resizeBeforeDraw) {\r\n      const {width, height} = me._resizeBeforeDraw;\r\n      me._resize(width, height);\r\n      me._resizeBeforeDraw = null;\r\n    }\r\n    me.clear();\r\n    if (me.width <= 0 || me.height <= 0) {\r\n      return;\r\n    }\r\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const layers = me._layers;\r\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\r\n      layers[i].draw(me.chartArea);\r\n    }\r\n    me._drawDatasets();\r\n    for (; i < layers.length; ++i) {\r\n      layers[i].draw(me.chartArea);\r\n    }\r\n    me.notifyPlugins('afterDraw');\r\n  }\r\n  _getSortedDatasetMetas(filterVisible) {\r\n    const me = this;\r\n    const metasets = me._sortedMetasets;\r\n    const result = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n      const meta = metasets[i];\r\n      if (!filterVisible || meta.visible) {\r\n        result.push(meta);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  getSortedVisibleDatasetMetas() {\r\n    return this._getSortedDatasetMetas(true);\r\n  }\r\n  _drawDatasets() {\r\n    const me = this;\r\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const metasets = me.getSortedVisibleDatasetMetas();\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      me._drawDataset(metasets[i]);\r\n    }\r\n    me.notifyPlugins('afterDatasetsDraw');\r\n  }\r\n  _drawDataset(meta) {\r\n    const me = this;\r\n    const ctx = me.ctx;\r\n    const clip = meta._clip;\r\n    const area = me.chartArea;\r\n    const args = {\r\n      meta,\r\n      index: meta.index,\r\n      cancelable: true\r\n    };\r\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\r\n      return;\r\n    }\r\n    clipArea(ctx, {\r\n      left: clip.left === false ? 0 : area.left - clip.left,\r\n      right: clip.right === false ? me.width : area.right + clip.right,\r\n      top: clip.top === false ? 0 : area.top - clip.top,\r\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\r\n    });\r\n    meta.controller.draw();\r\n    unclipArea(ctx);\r\n    args.cancelable = false;\r\n    me.notifyPlugins('afterDatasetDraw', args);\r\n  }\r\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\r\n    const method = Interaction.modes[mode];\r\n    if (typeof method === 'function') {\r\n      return method(this, e, options, useFinalPosition);\r\n    }\r\n    return [];\r\n  }\r\n  getDatasetMeta(datasetIndex) {\r\n    const me = this;\r\n    const dataset = me.data.datasets[datasetIndex];\r\n    const metasets = me._metasets;\r\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\r\n    if (!meta) {\r\n      meta = metasets[datasetIndex] = {\r\n        type: null,\r\n        data: [],\r\n        dataset: null,\r\n        controller: null,\r\n        hidden: null,\r\n        xAxisID: null,\r\n        yAxisID: null,\r\n        order: dataset && dataset.order || 0,\r\n        index: datasetIndex,\r\n        _dataset: dataset,\r\n        _parsed: [],\r\n        _sorted: false\r\n      };\r\n    }\r\n    return meta;\r\n  }\r\n  getContext() {\r\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\r\n  }\r\n  getVisibleDatasetCount() {\r\n    return this.getSortedVisibleDatasetMetas().length;\r\n  }\r\n  isDatasetVisible(datasetIndex) {\r\n    const dataset = this.data.datasets[datasetIndex];\r\n    if (!dataset) {\r\n      return false;\r\n    }\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\r\n  }\r\n  setDatasetVisibility(datasetIndex, visible) {\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    meta.hidden = !visible;\r\n  }\r\n  toggleDataVisibility(index) {\r\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\r\n  }\r\n  getDataVisibility(index) {\r\n    return !this._hiddenIndices[index];\r\n  }\r\n  _updateDatasetVisibility(datasetIndex, visible) {\r\n    const me = this;\r\n    const mode = visible ? 'show' : 'hide';\r\n    const meta = me.getDatasetMeta(datasetIndex);\r\n    const anims = meta.controller._resolveAnimations(undefined, mode);\r\n    me.setDatasetVisibility(datasetIndex, visible);\r\n    anims.update(meta, {visible});\r\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\r\n  }\r\n  hide(datasetIndex) {\r\n    this._updateDatasetVisibility(datasetIndex, false);\r\n  }\r\n  show(datasetIndex) {\r\n    this._updateDatasetVisibility(datasetIndex, true);\r\n  }\r\n  _destroyDatasetMeta(datasetIndex) {\r\n    const me = this;\r\n    const meta = me._metasets && me._metasets[datasetIndex];\r\n    if (meta && meta.controller) {\r\n      meta.controller._destroy();\r\n      delete me._metasets[datasetIndex];\r\n    }\r\n  }\r\n  destroy() {\r\n    const me = this;\r\n    const {canvas, ctx} = me;\r\n    let i, ilen;\r\n    me.stop();\r\n    animator.remove(me);\r\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n      me._destroyDatasetMeta(i);\r\n    }\r\n    me.config.clearCache();\r\n    if (canvas) {\r\n      me.unbindEvents();\r\n      clearCanvas(canvas, ctx);\r\n      me.platform.releaseContext(ctx);\r\n      me.canvas = null;\r\n      me.ctx = null;\r\n    }\r\n    me.notifyPlugins('destroy');\r\n    delete instances[me.id];\r\n  }\r\n  toBase64Image(...args) {\r\n    return this.canvas.toDataURL(...args);\r\n  }\r\n  bindEvents() {\r\n    const me = this;\r\n    const listeners = me._listeners;\r\n    const platform = me.platform;\r\n    const _add = (type, listener) => {\r\n      platform.addEventListener(me, type, listener);\r\n      listeners[type] = listener;\r\n    };\r\n    const _remove = (type, listener) => {\r\n      if (listeners[type]) {\r\n        platform.removeEventListener(me, type, listener);\r\n        delete listeners[type];\r\n      }\r\n    };\r\n    let listener = function(e, x, y) {\r\n      e.offsetX = x;\r\n      e.offsetY = y;\r\n      me._eventHandler(e);\r\n    };\r\n    each(me.options.events, (type) => _add(type, listener));\r\n    if (me.options.responsive) {\r\n      listener = (width, height) => {\r\n        if (me.canvas) {\r\n          me.resize(width, height);\r\n        }\r\n      };\r\n      let detached;\r\n      const attached = () => {\r\n        _remove('attach', attached);\r\n        me.attached = true;\r\n        me.resize();\r\n        _add('resize', listener);\r\n        _add('detach', detached);\r\n      };\r\n      detached = () => {\r\n        me.attached = false;\r\n        _remove('resize', listener);\r\n        _add('attach', attached);\r\n      };\r\n      if (platform.isAttached(me.canvas)) {\r\n        attached();\r\n      } else {\r\n        detached();\r\n      }\r\n    } else {\r\n      me.attached = true;\r\n    }\r\n  }\r\n  unbindEvents() {\r\n    const me = this;\r\n    const listeners = me._listeners;\r\n    if (!listeners) {\r\n      return;\r\n    }\r\n    me._listeners = {};\r\n    each(listeners, (listener, type) => {\r\n      me.platform.removeEventListener(me, type, listener);\r\n    });\r\n  }\r\n  updateHoverStyle(items, mode, enabled) {\r\n    const prefix = enabled ? 'set' : 'remove';\r\n    let meta, item, i, ilen;\r\n    if (mode === 'dataset') {\r\n      meta = this.getDatasetMeta(items[0].datasetIndex);\r\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\r\n    }\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      item = items[i];\r\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\r\n      if (controller) {\r\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\r\n      }\r\n    }\r\n  }\r\n  getActiveElements() {\r\n    return this._active || [];\r\n  }\r\n  setActiveElements(activeElements) {\r\n    const me = this;\r\n    const lastActive = me._active || [];\r\n    const active = activeElements.map(({datasetIndex, index}) => {\r\n      const meta = me.getDatasetMeta(datasetIndex);\r\n      if (!meta) {\r\n        throw new Error('No dataset found at index ' + datasetIndex);\r\n      }\r\n      return {\r\n        datasetIndex,\r\n        element: meta.data[index],\r\n        index,\r\n      };\r\n    });\r\n    const changed = !_elementsEqual(active, lastActive);\r\n    if (changed) {\r\n      me._active = active;\r\n      me._updateHoverStyles(active, lastActive);\r\n    }\r\n  }\r\n  notifyPlugins(hook, args, filter) {\r\n    return this._plugins.notify(this, hook, args, filter);\r\n  }\r\n  _updateHoverStyles(active, lastActive, replay) {\r\n    const me = this;\r\n    const hoverOptions = me.options.hover;\r\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\r\n    const deactivated = diff(lastActive, active);\r\n    const activated = replay ? active : diff(active, lastActive);\r\n    if (deactivated.length) {\r\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\r\n    }\r\n    if (activated.length && hoverOptions.mode) {\r\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\r\n    }\r\n  }\r\n  _eventHandler(e, replay) {\r\n    const me = this;\r\n    const args = {event: e, replay, cancelable: true};\r\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\r\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\r\n      return;\r\n    }\r\n    const changed = me._handleEvent(e, replay);\r\n    args.cancelable = false;\r\n    me.notifyPlugins('afterEvent', args, eventFilter);\r\n    if (changed || args.changed) {\r\n      me.render();\r\n    }\r\n    return me;\r\n  }\r\n  _handleEvent(e, replay) {\r\n    const me = this;\r\n    const {_active: lastActive = [], options} = me;\r\n    const hoverOptions = options.hover;\r\n    const useFinalPosition = replay;\r\n    let active = [];\r\n    let changed = false;\r\n    let lastEvent = null;\r\n    if (e.type !== 'mouseout') {\r\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\r\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\r\n    }\r\n    me._lastEvent = null;\r\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\r\n      callback(options.onHover, [e, active, me], me);\r\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\r\n        callback(options.onClick, [e, active, me], me);\r\n      }\r\n    }\r\n    changed = !_elementsEqual(active, lastActive);\r\n    if (changed || replay) {\r\n      me._active = active;\r\n      me._updateHoverStyles(active, lastActive, replay);\r\n    }\r\n    me._lastEvent = lastEvent;\r\n    return changed;\r\n  }\r\n}\r\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\r\nconst enumerable = true;\r\nObject.defineProperties(Chart, {\r\n  defaults: {\r\n    enumerable,\r\n    value: defaults\r\n  },\r\n  instances: {\r\n    enumerable,\r\n    value: instances\r\n  },\r\n  overrides: {\r\n    enumerable,\r\n    value: overrides\r\n  },\r\n  registry: {\r\n    enumerable,\r\n    value: registry\r\n  },\r\n  version: {\r\n    enumerable,\r\n    value: version\r\n  },\r\n  getChart: {\r\n    enumerable,\r\n    value: getChart\r\n  },\r\n  register: {\r\n    enumerable,\r\n    value: (...items) => {\r\n      registry.add(...items);\r\n      invalidatePlugins();\r\n    }\r\n  },\r\n  unregister: {\r\n    enumerable,\r\n    value: (...items) => {\r\n      registry.remove(...items);\r\n      invalidatePlugins();\r\n    }\r\n  }\r\n});\r\n\r\nfunction clipArc(ctx, element) {\r\n  const {startAngle, endAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\r\n  let angleMargin = pixelMargin / outerRadius;\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\r\n  if (innerRadius > pixelMargin) {\r\n    angleMargin = pixelMargin / innerRadius;\r\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\r\n  } else {\r\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\r\n  }\r\n  ctx.closePath();\r\n  ctx.clip();\r\n}\r\nfunction toRadiusCorners(value) {\r\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\r\n}\r\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\r\n  const o = toRadiusCorners(arc.options.borderRadius);\r\n  const halfThickness = (outerRadius - innerRadius) / 2;\r\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\r\n  const computeOuterLimit = (val) => {\r\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\r\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\r\n  };\r\n  return {\r\n    outerStart: computeOuterLimit(o.outerStart),\r\n    outerEnd: computeOuterLimit(o.outerEnd),\r\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\r\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\r\n  };\r\n}\r\nfunction rThetaToXY(r, theta, x, y) {\r\n  return {\r\n    x: x + r * Math.cos(theta),\r\n    y: y + r * Math.sin(theta),\r\n  };\r\n}\r\nfunction pathArc(ctx, element) {\r\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\r\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\r\n  const innerRadius = element.innerRadius + pixelMargin;\r\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\r\n  const outerStartAdjustedRadius = outerRadius - outerStart;\r\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\r\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\r\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\r\n  const innerStartAdjustedRadius = innerRadius + innerStart;\r\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\r\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\r\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\r\n  if (outerEnd > 0) {\r\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\r\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\r\n  }\r\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\r\n  ctx.lineTo(p4.x, p4.y);\r\n  if (innerEnd > 0) {\r\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\r\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\r\n  }\r\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\r\n  if (innerStart > 0) {\r\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\r\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\r\n  }\r\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\r\n  ctx.lineTo(p8.x, p8.y);\r\n  if (outerStart > 0) {\r\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\r\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\r\n  }\r\n  ctx.closePath();\r\n}\r\nfunction drawArc(ctx, element) {\r\n  if (element.fullCircles) {\r\n    element.endAngle = element.startAngle + TAU;\r\n    pathArc(ctx, element);\r\n    for (let i = 0; i < element.fullCircles; ++i) {\r\n      ctx.fill();\r\n    }\r\n  }\r\n  if (!isNaN(element.circumference)) {\r\n    element.endAngle = element.startAngle + element.circumference % TAU;\r\n  }\r\n  pathArc(ctx, element);\r\n  ctx.fill();\r\n}\r\nfunction drawFullCircleBorders(ctx, element, inner) {\r\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\r\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\r\n  const innerRadius = element.innerRadius + pixelMargin;\r\n  let i;\r\n  if (inner) {\r\n    element.endAngle = element.startAngle + TAU;\r\n    clipArc(ctx, element);\r\n    element.endAngle = endAngle;\r\n    if (element.endAngle === element.startAngle) {\r\n      element.endAngle += TAU;\r\n      element.fullCircles--;\r\n    }\r\n  }\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\r\n  for (i = 0; i < element.fullCircles; ++i) {\r\n    ctx.stroke();\r\n  }\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\r\n  for (i = 0; i < element.fullCircles; ++i) {\r\n    ctx.stroke();\r\n  }\r\n}\r\nfunction drawBorder(ctx, element) {\r\n  const {options} = element;\r\n  const inner = options.borderAlign === 'inner';\r\n  if (!options.borderWidth) {\r\n    return;\r\n  }\r\n  if (inner) {\r\n    ctx.lineWidth = options.borderWidth * 2;\r\n    ctx.lineJoin = 'round';\r\n  } else {\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.lineJoin = 'bevel';\r\n  }\r\n  if (element.fullCircles) {\r\n    drawFullCircleBorders(ctx, element, inner);\r\n  }\r\n  if (inner) {\r\n    clipArc(ctx, element);\r\n  }\r\n  pathArc(ctx, element);\r\n  ctx.stroke();\r\n}\r\nclass ArcElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.circumference = undefined;\r\n    this.startAngle = undefined;\r\n    this.endAngle = undefined;\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n    this.pixelMargin = 0;\r\n    this.fullCircles = 0;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  inRange(chartX, chartY, useFinalPosition) {\r\n    const point = this.getProps(['x', 'y'], useFinalPosition);\r\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\r\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\r\n      'startAngle',\r\n      'endAngle',\r\n      'innerRadius',\r\n      'outerRadius',\r\n      'circumference'\r\n    ], useFinalPosition);\r\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\r\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\r\n    return (betweenAngles && withinRadius);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\r\n      'x',\r\n      'y',\r\n      'startAngle',\r\n      'endAngle',\r\n      'innerRadius',\r\n      'outerRadius'\r\n    ], useFinalPosition);\r\n    const halfAngle = (startAngle + endAngle) / 2;\r\n    const halfRadius = (innerRadius + outerRadius) / 2;\r\n    return {\r\n      x: x + Math.cos(halfAngle) * halfRadius,\r\n      y: y + Math.sin(halfAngle) * halfRadius\r\n    };\r\n  }\r\n  tooltipPosition(useFinalPosition) {\r\n    return this.getCenterPoint(useFinalPosition);\r\n  }\r\n  draw(ctx) {\r\n    const me = this;\r\n    const options = me.options;\r\n    const offset = options.offset || 0;\r\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\r\n    me.fullCircles = Math.floor(me.circumference / TAU);\r\n    if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\r\n      return;\r\n    }\r\n    ctx.save();\r\n    if (offset && me.circumference < TAU) {\r\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\r\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\r\n    }\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.strokeStyle = options.borderColor;\r\n    drawArc(ctx, me);\r\n    drawBorder(ctx, me);\r\n    ctx.restore();\r\n  }\r\n}\r\nArcElement.id = 'arc';\r\nArcElement.defaults = {\r\n  borderAlign: 'center',\r\n  borderColor: '#fff',\r\n  borderRadius: 0,\r\n  borderWidth: 2,\r\n  offset: 0,\r\n  angle: undefined,\r\n};\r\nArcElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor'\r\n};\r\n\r\nfunction setStyle(ctx, options, style = options) {\r\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\r\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\r\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\r\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\r\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\r\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\r\n}\r\nfunction lineTo(ctx, previous, target) {\r\n  ctx.lineTo(target.x, target.y);\r\n}\r\nfunction getLineMethod(options) {\r\n  if (options.stepped) {\r\n    return _steppedLineTo;\r\n  }\r\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\r\n    return _bezierCurveTo;\r\n  }\r\n  return lineTo;\r\n}\r\nfunction pathVars(points, segment, params = {}) {\r\n  const count = points.length;\r\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\r\n  const {start: segmentStart, end: segmentEnd} = segment;\r\n  const start = Math.max(paramsStart, segmentStart);\r\n  const end = Math.min(paramsEnd, segmentEnd);\r\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\r\n  return {\r\n    count,\r\n    start,\r\n    loop: segment.loop,\r\n    ilen: end < start && !outside ? count + end - start : end - start\r\n  };\r\n}\r\nfunction pathSegment(ctx, line, segment, params) {\r\n  const {points, options} = line;\r\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\r\n  const lineMethod = getLineMethod(options);\r\n  let {move = true, reverse} = params || {};\r\n  let i, point, prev;\r\n  for (i = 0; i <= ilen; ++i) {\r\n    point = points[(start + (reverse ? ilen - i : i)) % count];\r\n    if (point.skip) {\r\n      continue;\r\n    } else if (move) {\r\n      ctx.moveTo(point.x, point.y);\r\n      move = false;\r\n    } else {\r\n      lineMethod(ctx, prev, point, reverse, options.stepped);\r\n    }\r\n    prev = point;\r\n  }\r\n  if (loop) {\r\n    point = points[(start + (reverse ? ilen : 0)) % count];\r\n    lineMethod(ctx, prev, point, reverse, options.stepped);\r\n  }\r\n  return !!loop;\r\n}\r\nfunction fastPathSegment(ctx, line, segment, params) {\r\n  const points = line.points;\r\n  const {count, start, ilen} = pathVars(points, segment, params);\r\n  const {move = true, reverse} = params || {};\r\n  let avgX = 0;\r\n  let countX = 0;\r\n  let i, point, prevX, minY, maxY, lastY;\r\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\r\n  const drawX = () => {\r\n    if (minY !== maxY) {\r\n      ctx.lineTo(avgX, maxY);\r\n      ctx.lineTo(avgX, minY);\r\n      ctx.lineTo(avgX, lastY);\r\n    }\r\n  };\r\n  if (move) {\r\n    point = points[pointIndex(0)];\r\n    ctx.moveTo(point.x, point.y);\r\n  }\r\n  for (i = 0; i <= ilen; ++i) {\r\n    point = points[pointIndex(i)];\r\n    if (point.skip) {\r\n      continue;\r\n    }\r\n    const x = point.x;\r\n    const y = point.y;\r\n    const truncX = x | 0;\r\n    if (truncX === prevX) {\r\n      if (y < minY) {\r\n        minY = y;\r\n      } else if (y > maxY) {\r\n        maxY = y;\r\n      }\r\n      avgX = (countX * avgX + x) / ++countX;\r\n    } else {\r\n      drawX();\r\n      ctx.lineTo(x, y);\r\n      prevX = truncX;\r\n      countX = 0;\r\n      minY = maxY = y;\r\n    }\r\n    lastY = y;\r\n  }\r\n  drawX();\r\n}\r\nfunction _getSegmentMethod(line) {\r\n  const opts = line.options;\r\n  const borderDash = opts.borderDash && opts.borderDash.length;\r\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\r\n  return useFastPath ? fastPathSegment : pathSegment;\r\n}\r\nfunction _getInterpolationMethod(options) {\r\n  if (options.stepped) {\r\n    return _steppedInterpolation;\r\n  }\r\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\r\n    return _bezierInterpolation;\r\n  }\r\n  return _pointInLine;\r\n}\r\nfunction strokePathWithCache(ctx, line, start, count) {\r\n  let path = line._path;\r\n  if (!path) {\r\n    path = line._path = new Path2D();\r\n    if (line.path(path, start, count)) {\r\n      path.closePath();\r\n    }\r\n  }\r\n  setStyle(ctx, line.options);\r\n  ctx.stroke(path);\r\n}\r\nfunction strokePathDirect(ctx, line, start, count) {\r\n  const {segments, options} = line;\r\n  const segmentMethod = _getSegmentMethod(line);\r\n  for (const segment of segments) {\r\n    setStyle(ctx, options, segment.style);\r\n    ctx.beginPath();\r\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\r\n      ctx.closePath();\r\n    }\r\n    ctx.stroke();\r\n  }\r\n}\r\nconst usePath2D = typeof Path2D === 'function';\r\nfunction draw(ctx, line, start, count) {\r\n  if (usePath2D && line.segments.length === 1) {\r\n    strokePathWithCache(ctx, line, start, count);\r\n  } else {\r\n    strokePathDirect(ctx, line, start, count);\r\n  }\r\n}\r\nclass LineElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.animated = true;\r\n    this.options = undefined;\r\n    this._loop = undefined;\r\n    this._fullLoop = undefined;\r\n    this._path = undefined;\r\n    this._points = undefined;\r\n    this._segments = undefined;\r\n    this._decimated = false;\r\n    this._pointsUpdated = false;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  updateControlPoints(chartArea) {\r\n    const me = this;\r\n    const options = me.options;\r\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\r\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\r\n      _updateBezierControlPoints(me._points, options, chartArea, loop);\r\n      me._pointsUpdated = true;\r\n    }\r\n  }\r\n  set points(points) {\r\n    const me = this;\r\n    me._points = points;\r\n    delete me._segments;\r\n    delete me._path;\r\n    me._pointsUpdated = false;\r\n  }\r\n  get points() {\r\n    return this._points;\r\n  }\r\n  get segments() {\r\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\r\n  }\r\n  first() {\r\n    const segments = this.segments;\r\n    const points = this.points;\r\n    return segments.length && points[segments[0].start];\r\n  }\r\n  last() {\r\n    const segments = this.segments;\r\n    const points = this.points;\r\n    const count = segments.length;\r\n    return count && points[segments[count - 1].end];\r\n  }\r\n  interpolate(point, property) {\r\n    const me = this;\r\n    const options = me.options;\r\n    const value = point[property];\r\n    const points = me.points;\r\n    const segments = _boundSegments(me, {property, start: value, end: value});\r\n    if (!segments.length) {\r\n      return;\r\n    }\r\n    const result = [];\r\n    const _interpolate = _getInterpolationMethod(options);\r\n    let i, ilen;\r\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\r\n      const {start, end} = segments[i];\r\n      const p1 = points[start];\r\n      const p2 = points[end];\r\n      if (p1 === p2) {\r\n        result.push(p1);\r\n        continue;\r\n      }\r\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\r\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\r\n      interpolated[property] = point[property];\r\n      result.push(interpolated);\r\n    }\r\n    return result.length === 1 ? result[0] : result;\r\n  }\r\n  pathSegment(ctx, segment, params) {\r\n    const segmentMethod = _getSegmentMethod(this);\r\n    return segmentMethod(ctx, this, segment, params);\r\n  }\r\n  path(ctx, start, count) {\r\n    const me = this;\r\n    const segments = me.segments;\r\n    const segmentMethod = _getSegmentMethod(me);\r\n    let loop = me._loop;\r\n    start = start || 0;\r\n    count = count || (me.points.length - start);\r\n    for (const segment of segments) {\r\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\r\n    }\r\n    return !!loop;\r\n  }\r\n  draw(ctx, chartArea, start, count) {\r\n    const me = this;\r\n    const options = me.options || {};\r\n    const points = me.points || [];\r\n    if (!points.length || !options.borderWidth) {\r\n      return;\r\n    }\r\n    ctx.save();\r\n    draw(ctx, me, start, count);\r\n    ctx.restore();\r\n    if (me.animated) {\r\n      me._pointsUpdated = false;\r\n      me._path = undefined;\r\n    }\r\n  }\r\n}\r\nLineElement.id = 'line';\r\nLineElement.defaults = {\r\n  borderCapStyle: 'butt',\r\n  borderDash: [],\r\n  borderDashOffset: 0,\r\n  borderJoinStyle: 'miter',\r\n  borderWidth: 3,\r\n  capBezierPoints: true,\r\n  cubicInterpolationMode: 'default',\r\n  fill: false,\r\n  spanGaps: false,\r\n  stepped: false,\r\n  tension: 0,\r\n};\r\nLineElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\nLineElement.descriptors = {\r\n  _scriptable: true,\r\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\r\n};\r\n\r\nfunction inRange$1(el, pos, axis, useFinalPosition) {\r\n  const options = el.options;\r\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\r\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\r\n}\r\nclass PointElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.parsed = undefined;\r\n    this.skip = undefined;\r\n    this.stop = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  inRange(mouseX, mouseY, useFinalPosition) {\r\n    const options = this.options;\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\r\n  }\r\n  inXRange(mouseX, useFinalPosition) {\r\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\r\n  }\r\n  inYRange(mouseY, useFinalPosition) {\r\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return {x, y};\r\n  }\r\n  size(options) {\r\n    options = options || this.options || {};\r\n    let radius = options.radius || 0;\r\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\r\n    const borderWidth = radius && options.borderWidth || 0;\r\n    return (radius + borderWidth) * 2;\r\n  }\r\n  draw(ctx) {\r\n    const me = this;\r\n    const options = me.options;\r\n    if (me.skip || options.radius < 0.1) {\r\n      return;\r\n    }\r\n    ctx.strokeStyle = options.borderColor;\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.fillStyle = options.backgroundColor;\r\n    drawPoint(ctx, options, me.x, me.y);\r\n  }\r\n  getRange() {\r\n    const options = this.options || {};\r\n    return options.radius + options.hitRadius;\r\n  }\r\n}\r\nPointElement.id = 'point';\r\nPointElement.defaults = {\r\n  borderWidth: 1,\r\n  hitRadius: 1,\r\n  hoverBorderWidth: 1,\r\n  hoverRadius: 4,\r\n  pointStyle: 'circle',\r\n  radius: 3,\r\n  rotation: 0\r\n};\r\nPointElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\n\r\nfunction getBarBounds(bar, useFinalPosition) {\r\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\r\n  let left, right, top, bottom, half;\r\n  if (bar.horizontal) {\r\n    half = height / 2;\r\n    left = Math.min(x, base);\r\n    right = Math.max(x, base);\r\n    top = y - half;\r\n    bottom = y + half;\r\n  } else {\r\n    half = width / 2;\r\n    left = x - half;\r\n    right = x + half;\r\n    top = Math.min(y, base);\r\n    bottom = Math.max(y, base);\r\n  }\r\n  return {left, top, right, bottom};\r\n}\r\nfunction parseBorderSkipped(bar) {\r\n  let edge = bar.options.borderSkipped;\r\n  const res = {};\r\n  if (!edge) {\r\n    return res;\r\n  }\r\n  edge = bar.horizontal\r\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\r\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\r\n  res[edge] = true;\r\n  return res;\r\n}\r\nfunction parseEdge(edge, a, b, reverse) {\r\n  if (reverse) {\r\n    edge = swap(edge, a, b);\r\n    edge = startEnd(edge, b, a);\r\n  } else {\r\n    edge = startEnd(edge, a, b);\r\n  }\r\n  return edge;\r\n}\r\nfunction swap(orig, v1, v2) {\r\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\r\n}\r\nfunction startEnd(v, start, end) {\r\n  return v === 'start' ? start : v === 'end' ? end : v;\r\n}\r\nfunction skipOrLimit(skip, value, min, max) {\r\n  return skip ? 0 : Math.max(Math.min(value, max), min);\r\n}\r\nfunction parseBorderWidth(bar, maxW, maxH) {\r\n  const value = bar.options.borderWidth;\r\n  const skip = parseBorderSkipped(bar);\r\n  const o = toTRBL(value);\r\n  return {\r\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\r\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\r\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\r\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\r\n  };\r\n}\r\nfunction parseBorderRadius(bar, maxW, maxH) {\r\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\r\n  const value = bar.options.borderRadius;\r\n  const o = toTRBLCorners(value);\r\n  const maxR = Math.min(maxW, maxH);\r\n  const skip = parseBorderSkipped(bar);\r\n  const enableBorder = enableBorderRadius || isObject(value);\r\n  return {\r\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\r\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\r\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\r\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\r\n  };\r\n}\r\nfunction boundingRects(bar) {\r\n  const bounds = getBarBounds(bar);\r\n  const width = bounds.right - bounds.left;\r\n  const height = bounds.bottom - bounds.top;\r\n  const border = parseBorderWidth(bar, width / 2, height / 2);\r\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\r\n  return {\r\n    outer: {\r\n      x: bounds.left,\r\n      y: bounds.top,\r\n      w: width,\r\n      h: height,\r\n      radius\r\n    },\r\n    inner: {\r\n      x: bounds.left + border.l,\r\n      y: bounds.top + border.t,\r\n      w: width - border.l - border.r,\r\n      h: height - border.t - border.b,\r\n      radius: {\r\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\r\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\r\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\r\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\r\n      }\r\n    }\r\n  };\r\n}\r\nfunction inRange(bar, x, y, useFinalPosition) {\r\n  const skipX = x === null;\r\n  const skipY = y === null;\r\n  const skipBoth = skipX && skipY;\r\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\r\n  return bounds\r\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\r\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\r\n}\r\nfunction hasRadius(radius) {\r\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\r\n}\r\nfunction addNormalRectPath(ctx, rect) {\r\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\r\n}\r\nclass BarElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.horizontal = undefined;\r\n    this.base = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    const options = this.options;\r\n    const {inner, outer} = boundingRects(this);\r\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\r\n    ctx.save();\r\n    if (outer.w !== inner.w || outer.h !== inner.h) {\r\n      ctx.beginPath();\r\n      addRectPath(ctx, outer);\r\n      ctx.clip();\r\n      addRectPath(ctx, inner);\r\n      ctx.fillStyle = options.borderColor;\r\n      ctx.fill('evenodd');\r\n    }\r\n    ctx.beginPath();\r\n    addRectPath(ctx, inner);\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n  inRange(mouseX, mouseY, useFinalPosition) {\r\n    return inRange(this, mouseX, mouseY, useFinalPosition);\r\n  }\r\n  inXRange(mouseX, useFinalPosition) {\r\n    return inRange(this, mouseX, null, useFinalPosition);\r\n  }\r\n  inYRange(mouseY, useFinalPosition) {\r\n    return inRange(this, null, mouseY, useFinalPosition);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\r\n    return {\r\n      x: horizontal ? (x + base) / 2 : x,\r\n      y: horizontal ? y : (y + base) / 2\r\n    };\r\n  }\r\n  getRange(axis) {\r\n    return axis === 'x' ? this.width / 2 : this.height / 2;\r\n  }\r\n}\r\nBarElement.id = 'bar';\r\nBarElement.defaults = {\r\n  borderSkipped: 'start',\r\n  borderWidth: 0,\r\n  borderRadius: 0,\r\n  enableBorderRadius: true,\r\n  pointStyle: undefined\r\n};\r\nBarElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\n\r\nvar elements = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nArcElement: ArcElement,\r\nLineElement: LineElement,\r\nPointElement: PointElement,\r\nBarElement: BarElement\r\n});\r\n\r\nfunction lttbDecimation(data, start, count, availableWidth, options) {\r\n  const samples = options.samples || availableWidth;\r\n  if (samples >= count) {\r\n    return data.slice(start, start + count);\r\n  }\r\n  const decimated = [];\r\n  const bucketWidth = (count - 2) / (samples - 2);\r\n  let sampledIndex = 0;\r\n  const endIndex = start + count - 1;\r\n  let a = start;\r\n  let i, maxAreaPoint, maxArea, area, nextA;\r\n  decimated[sampledIndex++] = data[a];\r\n  for (i = 0; i < samples - 2; i++) {\r\n    let avgX = 0;\r\n    let avgY = 0;\r\n    let j;\r\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\r\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\r\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\r\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\r\n      avgX += data[j].x;\r\n      avgY += data[j].y;\r\n    }\r\n    avgX /= avgRangeLength;\r\n    avgY /= avgRangeLength;\r\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\r\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\r\n    const {x: pointAx, y: pointAy} = data[a];\r\n    maxArea = area = -1;\r\n    for (j = rangeOffs; j < rangeTo; j++) {\r\n      area = 0.5 * Math.abs(\r\n        (pointAx - avgX) * (data[j].y - pointAy) -\r\n        (pointAx - data[j].x) * (avgY - pointAy)\r\n      );\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        maxAreaPoint = data[j];\r\n        nextA = j;\r\n      }\r\n    }\r\n    decimated[sampledIndex++] = maxAreaPoint;\r\n    a = nextA;\r\n  }\r\n  decimated[sampledIndex++] = data[endIndex];\r\n  return decimated;\r\n}\r\nfunction minMaxDecimation(data, start, count, availableWidth) {\r\n  let avgX = 0;\r\n  let countX = 0;\r\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\r\n  const decimated = [];\r\n  const endIndex = start + count - 1;\r\n  const xMin = data[start].x;\r\n  const xMax = data[endIndex].x;\r\n  const dx = xMax - xMin;\r\n  for (i = start; i < start + count; ++i) {\r\n    point = data[i];\r\n    x = (point.x - xMin) / dx * availableWidth;\r\n    y = point.y;\r\n    const truncX = x | 0;\r\n    if (truncX === prevX) {\r\n      if (y < minY) {\r\n        minY = y;\r\n        minIndex = i;\r\n      } else if (y > maxY) {\r\n        maxY = y;\r\n        maxIndex = i;\r\n      }\r\n      avgX = (countX * avgX + point.x) / ++countX;\r\n    } else {\r\n      const lastIndex = i - 1;\r\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\r\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\r\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\r\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\r\n          decimated.push({\r\n            ...data[intermediateIndex1],\r\n            x: avgX,\r\n          });\r\n        }\r\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\r\n          decimated.push({\r\n            ...data[intermediateIndex2],\r\n            x: avgX\r\n          });\r\n        }\r\n      }\r\n      if (i > 0 && lastIndex !== startIndex) {\r\n        decimated.push(data[lastIndex]);\r\n      }\r\n      decimated.push(point);\r\n      prevX = truncX;\r\n      countX = 0;\r\n      minY = maxY = y;\r\n      minIndex = maxIndex = startIndex = i;\r\n    }\r\n  }\r\n  return decimated;\r\n}\r\nfunction cleanDecimatedDataset(dataset) {\r\n  if (dataset._decimated) {\r\n    const data = dataset._data;\r\n    delete dataset._decimated;\r\n    delete dataset._data;\r\n    Object.defineProperty(dataset, 'data', {value: data});\r\n  }\r\n}\r\nfunction cleanDecimatedData(chart) {\r\n  chart.data.datasets.forEach((dataset) => {\r\n    cleanDecimatedDataset(dataset);\r\n  });\r\n}\r\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\r\n  const pointCount = points.length;\r\n  let start = 0;\r\n  let count;\r\n  const {iScale} = meta;\r\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\r\n  if (minDefined) {\r\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\r\n  }\r\n  if (maxDefined) {\r\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\r\n  } else {\r\n    count = pointCount - start;\r\n  }\r\n  return {start, count};\r\n}\r\nvar plugin_decimation = {\r\n  id: 'decimation',\r\n  defaults: {\r\n    algorithm: 'min-max',\r\n    enabled: false,\r\n  },\r\n  beforeElementsUpdate: (chart, args, options) => {\r\n    if (!options.enabled) {\r\n      cleanDecimatedData(chart);\r\n      return;\r\n    }\r\n    const availableWidth = chart.width;\r\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\r\n      const {_data, indexAxis} = dataset;\r\n      const meta = chart.getDatasetMeta(datasetIndex);\r\n      const data = _data || dataset.data;\r\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\r\n        return;\r\n      }\r\n      if (meta.type !== 'line') {\r\n        return;\r\n      }\r\n      const xAxis = chart.scales[meta.xAxisID];\r\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\r\n        return;\r\n      }\r\n      if (chart.options.parsing) {\r\n        return;\r\n      }\r\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\r\n      if (count <= 4 * availableWidth) {\r\n        cleanDecimatedDataset(dataset);\r\n        return;\r\n      }\r\n      if (isNullOrUndef(_data)) {\r\n        dataset._data = data;\r\n        delete dataset.data;\r\n        Object.defineProperty(dataset, 'data', {\r\n          configurable: true,\r\n          enumerable: true,\r\n          get: function() {\r\n            return this._decimated;\r\n          },\r\n          set: function(d) {\r\n            this._data = d;\r\n          }\r\n        });\r\n      }\r\n      let decimated;\r\n      switch (options.algorithm) {\r\n      case 'lttb':\r\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\r\n        break;\r\n      case 'min-max':\r\n        decimated = minMaxDecimation(data, start, count, availableWidth);\r\n        break;\r\n      default:\r\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\r\n      }\r\n      dataset._decimated = decimated;\r\n    });\r\n  },\r\n  destroy(chart) {\r\n    cleanDecimatedData(chart);\r\n  }\r\n};\r\n\r\nfunction getLineByIndex(chart, index) {\r\n  const meta = chart.getDatasetMeta(index);\r\n  const visible = meta && chart.isDatasetVisible(index);\r\n  return visible ? meta.dataset : null;\r\n}\r\nfunction parseFillOption(line) {\r\n  const options = line.options;\r\n  const fillOption = options.fill;\r\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\r\n  if (fill === undefined) {\r\n    fill = !!options.backgroundColor;\r\n  }\r\n  if (fill === false || fill === null) {\r\n    return false;\r\n  }\r\n  if (fill === true) {\r\n    return 'origin';\r\n  }\r\n  return fill;\r\n}\r\nfunction decodeFill(line, index, count) {\r\n  const fill = parseFillOption(line);\r\n  if (isObject(fill)) {\r\n    return isNaN(fill.value) ? false : fill;\r\n  }\r\n  let target = parseFloat(fill);\r\n  if (isNumberFinite(target) && Math.floor(target) === target) {\r\n    if (fill[0] === '-' || fill[0] === '+') {\r\n      target = index + target;\r\n    }\r\n    if (target === index || target < 0 || target >= count) {\r\n      return false;\r\n    }\r\n    return target;\r\n  }\r\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\r\n}\r\nfunction computeLinearBoundary(source) {\r\n  const {scale = {}, fill} = source;\r\n  let target = null;\r\n  let horizontal;\r\n  if (fill === 'start') {\r\n    target = scale.bottom;\r\n  } else if (fill === 'end') {\r\n    target = scale.top;\r\n  } else if (isObject(fill)) {\r\n    target = scale.getPixelForValue(fill.value);\r\n  } else if (scale.getBasePixel) {\r\n    target = scale.getBasePixel();\r\n  }\r\n  if (isNumberFinite(target)) {\r\n    horizontal = scale.isHorizontal();\r\n    return {\r\n      x: horizontal ? target : null,\r\n      y: horizontal ? null : target\r\n    };\r\n  }\r\n  return null;\r\n}\r\nclass simpleArc {\r\n  constructor(opts) {\r\n    this.x = opts.x;\r\n    this.y = opts.y;\r\n    this.radius = opts.radius;\r\n  }\r\n  pathSegment(ctx, bounds, opts) {\r\n    const {x, y, radius} = this;\r\n    bounds = bounds || {start: 0, end: TAU};\r\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\r\n    return !opts.bounds;\r\n  }\r\n  interpolate(point) {\r\n    const {x, y, radius} = this;\r\n    const angle = point.angle;\r\n    return {\r\n      x: x + Math.cos(angle) * radius,\r\n      y: y + Math.sin(angle) * radius,\r\n      angle\r\n    };\r\n  }\r\n}\r\nfunction computeCircularBoundary(source) {\r\n  const {scale, fill} = source;\r\n  const options = scale.options;\r\n  const length = scale.getLabels().length;\r\n  const target = [];\r\n  const start = options.reverse ? scale.max : scale.min;\r\n  const end = options.reverse ? scale.min : scale.max;\r\n  let i, center, value;\r\n  if (fill === 'start') {\r\n    value = start;\r\n  } else if (fill === 'end') {\r\n    value = end;\r\n  } else if (isObject(fill)) {\r\n    value = fill.value;\r\n  } else {\r\n    value = scale.getBaseValue();\r\n  }\r\n  if (options.grid.circular) {\r\n    center = scale.getPointPositionForValue(0, start);\r\n    return new simpleArc({\r\n      x: center.x,\r\n      y: center.y,\r\n      radius: scale.getDistanceFromCenterForValue(value)\r\n    });\r\n  }\r\n  for (i = 0; i < length; ++i) {\r\n    target.push(scale.getPointPositionForValue(i, value));\r\n  }\r\n  return target;\r\n}\r\nfunction computeBoundary(source) {\r\n  const scale = source.scale || {};\r\n  if (scale.getPointPositionForValue) {\r\n    return computeCircularBoundary(source);\r\n  }\r\n  return computeLinearBoundary(source);\r\n}\r\nfunction pointsFromSegments(boundary, line) {\r\n  const {x = null, y = null} = boundary || {};\r\n  const linePoints = line.points;\r\n  const points = [];\r\n  line.segments.forEach((segment) => {\r\n    const first = linePoints[segment.start];\r\n    const last = linePoints[segment.end];\r\n    if (y !== null) {\r\n      points.push({x: first.x, y});\r\n      points.push({x: last.x, y});\r\n    } else if (x !== null) {\r\n      points.push({x, y: first.y});\r\n      points.push({x, y: last.y});\r\n    }\r\n  });\r\n  return points;\r\n}\r\nfunction buildStackLine(source) {\r\n  const {chart, scale, index, line} = source;\r\n  const points = [];\r\n  const segments = line.segments;\r\n  const sourcePoints = line.points;\r\n  const linesBelow = getLinesBelow(chart, index);\r\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    for (let j = segment.start; j <= segment.end; j++) {\r\n      addPointsBelow(points, sourcePoints[j], linesBelow);\r\n    }\r\n  }\r\n  return new LineElement({points, options: {}});\r\n}\r\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\r\nfunction getLinesBelow(chart, index) {\r\n  const below = [];\r\n  const metas = chart.getSortedVisibleDatasetMetas();\r\n  for (let i = 0; i < metas.length; i++) {\r\n    const meta = metas[i];\r\n    if (meta.index === index) {\r\n      break;\r\n    }\r\n    if (isLineAndNotInHideAnimation(meta)) {\r\n      below.unshift(meta.dataset);\r\n    }\r\n  }\r\n  return below;\r\n}\r\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\r\n  const postponed = [];\r\n  for (let j = 0; j < linesBelow.length; j++) {\r\n    const line = linesBelow[j];\r\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\r\n    if (!point || (first && last)) {\r\n      continue;\r\n    }\r\n    if (first) {\r\n      postponed.unshift(point);\r\n    } else {\r\n      points.push(point);\r\n      if (!last) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  points.push(...postponed);\r\n}\r\nfunction findPoint(line, sourcePoint, property) {\r\n  const point = line.interpolate(sourcePoint, property);\r\n  if (!point) {\r\n    return {};\r\n  }\r\n  const pointValue = point[property];\r\n  const segments = line.segments;\r\n  const linePoints = line.points;\r\n  let first = false;\r\n  let last = false;\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    const firstValue = linePoints[segment.start][property];\r\n    const lastValue = linePoints[segment.end][property];\r\n    if (pointValue >= firstValue && pointValue <= lastValue) {\r\n      first = pointValue === firstValue;\r\n      last = pointValue === lastValue;\r\n      break;\r\n    }\r\n  }\r\n  return {first, last, point};\r\n}\r\nfunction getTarget(source) {\r\n  const {chart, fill, line} = source;\r\n  if (isNumberFinite(fill)) {\r\n    return getLineByIndex(chart, fill);\r\n  }\r\n  if (fill === 'stack') {\r\n    return buildStackLine(source);\r\n  }\r\n  const boundary = computeBoundary(source);\r\n  if (boundary instanceof simpleArc) {\r\n    return boundary;\r\n  }\r\n  return createBoundaryLine(boundary, line);\r\n}\r\nfunction createBoundaryLine(boundary, line) {\r\n  let points = [];\r\n  let _loop = false;\r\n  if (isArray(boundary)) {\r\n    _loop = true;\r\n    points = boundary;\r\n  } else {\r\n    points = pointsFromSegments(boundary, line);\r\n  }\r\n  return points.length ? new LineElement({\r\n    points,\r\n    options: {tension: 0},\r\n    _loop,\r\n    _fullLoop: _loop\r\n  }) : null;\r\n}\r\nfunction resolveTarget(sources, index, propagate) {\r\n  const source = sources[index];\r\n  let fill = source.fill;\r\n  const visited = [index];\r\n  let target;\r\n  if (!propagate) {\r\n    return fill;\r\n  }\r\n  while (fill !== false && visited.indexOf(fill) === -1) {\r\n    if (!isNumberFinite(fill)) {\r\n      return fill;\r\n    }\r\n    target = sources[fill];\r\n    if (!target) {\r\n      return false;\r\n    }\r\n    if (target.visible) {\r\n      return fill;\r\n    }\r\n    visited.push(fill);\r\n    fill = target.fill;\r\n  }\r\n  return false;\r\n}\r\nfunction _clip(ctx, target, clipY) {\r\n  ctx.beginPath();\r\n  target.path(ctx);\r\n  ctx.lineTo(target.last().x, clipY);\r\n  ctx.lineTo(target.first().x, clipY);\r\n  ctx.closePath();\r\n  ctx.clip();\r\n}\r\nfunction getBounds(property, first, last, loop) {\r\n  if (loop) {\r\n    return;\r\n  }\r\n  let start = first[property];\r\n  let end = last[property];\r\n  if (property === 'angle') {\r\n    start = _normalizeAngle(start);\r\n    end = _normalizeAngle(end);\r\n  }\r\n  return {property, start, end};\r\n}\r\nfunction _getEdge(a, b, prop, fn) {\r\n  if (a && b) {\r\n    return fn(a[prop], b[prop]);\r\n  }\r\n  return a ? a[prop] : b ? b[prop] : 0;\r\n}\r\nfunction _segments(line, target, property) {\r\n  const segments = line.segments;\r\n  const points = line.points;\r\n  const tpoints = target.points;\r\n  const parts = [];\r\n  for (const segment of segments) {\r\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\r\n    if (!target.segments) {\r\n      parts.push({\r\n        source: segment,\r\n        target: bounds,\r\n        start: points[segment.start],\r\n        end: points[segment.end]\r\n      });\r\n      continue;\r\n    }\r\n    const targetSegments = _boundSegments(target, bounds);\r\n    for (const tgt of targetSegments) {\r\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\r\n      const fillSources = _boundSegment(segment, points, subBounds);\r\n      for (const fillSource of fillSources) {\r\n        parts.push({\r\n          source: fillSource,\r\n          target: tgt,\r\n          start: {\r\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\r\n          },\r\n          end: {\r\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return parts;\r\n}\r\nfunction clipBounds(ctx, scale, bounds) {\r\n  const {top, bottom} = scale.chart.chartArea;\r\n  const {property, start, end} = bounds || {};\r\n  if (property === 'x') {\r\n    ctx.beginPath();\r\n    ctx.rect(start, top, end - start, bottom - top);\r\n    ctx.clip();\r\n  }\r\n}\r\nfunction interpolatedLineTo(ctx, target, point, property) {\r\n  const interpolatedPoint = target.interpolate(point, property);\r\n  if (interpolatedPoint) {\r\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\r\n  }\r\n}\r\nfunction _fill(ctx, cfg) {\r\n  const {line, target, property, color, scale} = cfg;\r\n  const segments = _segments(line, target, property);\r\n  for (const {source: src, target: tgt, start, end} of segments) {\r\n    const {style: {backgroundColor = color} = {}} = src;\r\n    ctx.save();\r\n    ctx.fillStyle = backgroundColor;\r\n    clipBounds(ctx, scale, getBounds(property, start, end));\r\n    ctx.beginPath();\r\n    const lineLoop = !!line.pathSegment(ctx, src);\r\n    if (lineLoop) {\r\n      ctx.closePath();\r\n    } else {\r\n      interpolatedLineTo(ctx, target, end, property);\r\n    }\r\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\r\n    const loop = lineLoop && targetLoop;\r\n    if (!loop) {\r\n      interpolatedLineTo(ctx, target, start, property);\r\n    }\r\n    ctx.closePath();\r\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\r\n    ctx.restore();\r\n  }\r\n}\r\nfunction doFill(ctx, cfg) {\r\n  const {line, target, above, below, area, scale} = cfg;\r\n  const property = line._loop ? 'angle' : cfg.axis;\r\n  ctx.save();\r\n  if (property === 'x' && below !== above) {\r\n    _clip(ctx, target, area.top);\r\n    _fill(ctx, {line, target, color: above, scale, property});\r\n    ctx.restore();\r\n    ctx.save();\r\n    _clip(ctx, target, area.bottom);\r\n  }\r\n  _fill(ctx, {line, target, color: below, scale, property});\r\n  ctx.restore();\r\n}\r\nfunction drawfill(ctx, source, area) {\r\n  const target = getTarget(source);\r\n  const {line, scale, axis} = source;\r\n  const lineOpts = line.options;\r\n  const fillOption = lineOpts.fill;\r\n  const color = lineOpts.backgroundColor;\r\n  const {above = color, below = color} = fillOption || {};\r\n  if (target && line.points.length) {\r\n    clipArea(ctx, area);\r\n    doFill(ctx, {line, target, above, below, area, scale, axis});\r\n    unclipArea(ctx);\r\n  }\r\n}\r\nvar plugin_filler = {\r\n  id: 'filler',\r\n  afterDatasetsUpdate(chart, _args, options) {\r\n    const count = (chart.data.datasets || []).length;\r\n    const sources = [];\r\n    let meta, i, line, source;\r\n    for (i = 0; i < count; ++i) {\r\n      meta = chart.getDatasetMeta(i);\r\n      line = meta.dataset;\r\n      source = null;\r\n      if (line && line.options && line instanceof LineElement) {\r\n        source = {\r\n          visible: chart.isDatasetVisible(i),\r\n          index: i,\r\n          fill: decodeFill(line, i, count),\r\n          chart,\r\n          axis: meta.controller.options.indexAxis,\r\n          scale: meta.vScale,\r\n          line,\r\n        };\r\n      }\r\n      meta.$filler = source;\r\n      sources.push(source);\r\n    }\r\n    for (i = 0; i < count; ++i) {\r\n      source = sources[i];\r\n      if (!source || source.fill === false) {\r\n        continue;\r\n      }\r\n      source.fill = resolveTarget(sources, i, options.propagate);\r\n    }\r\n  },\r\n  beforeDraw(chart, _args, options) {\r\n    const draw = options.drawTime === 'beforeDraw';\r\n    const metasets = chart.getSortedVisibleDatasetMetas();\r\n    const area = chart.chartArea;\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      const source = metasets[i].$filler;\r\n      if (!source) {\r\n        continue;\r\n      }\r\n      source.line.updateControlPoints(area);\r\n      if (draw) {\r\n        drawfill(chart.ctx, source, area);\r\n      }\r\n    }\r\n  },\r\n  beforeDatasetsDraw(chart, _args, options) {\r\n    if (options.drawTime !== 'beforeDatasetsDraw') {\r\n      return;\r\n    }\r\n    const metasets = chart.getSortedVisibleDatasetMetas();\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      const source = metasets[i].$filler;\r\n      if (source) {\r\n        drawfill(chart.ctx, source, chart.chartArea);\r\n      }\r\n    }\r\n  },\r\n  beforeDatasetDraw(chart, args, options) {\r\n    const source = args.meta.$filler;\r\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\r\n      return;\r\n    }\r\n    drawfill(chart.ctx, source, chart.chartArea);\r\n  },\r\n  defaults: {\r\n    propagate: true,\r\n    drawTime: 'beforeDatasetDraw'\r\n  }\r\n};\r\n\r\nconst getBoxSize = (labelOpts, fontSize) => {\r\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\r\n  if (labelOpts.usePointStyle) {\r\n    boxHeight = Math.min(boxHeight, fontSize);\r\n    boxWidth = Math.min(boxWidth, fontSize);\r\n  }\r\n  return {\r\n    boxWidth,\r\n    boxHeight,\r\n    itemHeight: Math.max(fontSize, boxHeight)\r\n  };\r\n};\r\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\r\nclass Legend extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this._added = false;\r\n    this.legendHitBoxes = [];\r\n    this._hoveredItem = null;\r\n    this.doughnutMode = false;\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.ctx = config.ctx;\r\n    this.legendItems = undefined;\r\n    this.columnSizes = undefined;\r\n    this.lineWidths = undefined;\r\n    this.maxHeight = undefined;\r\n    this.maxWidth = undefined;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this._margins = undefined;\r\n    this.position = undefined;\r\n    this.weight = undefined;\r\n    this.fullSize = undefined;\r\n  }\r\n  update(maxWidth, maxHeight, margins) {\r\n    const me = this;\r\n    me.maxWidth = maxWidth;\r\n    me.maxHeight = maxHeight;\r\n    me._margins = margins;\r\n    me.setDimensions();\r\n    me.buildLabels();\r\n    me.fit();\r\n  }\r\n  setDimensions() {\r\n    const me = this;\r\n    if (me.isHorizontal()) {\r\n      me.width = me.maxWidth;\r\n      me.left = 0;\r\n      me.right = me.width;\r\n    } else {\r\n      me.height = me.maxHeight;\r\n      me.top = 0;\r\n      me.bottom = me.height;\r\n    }\r\n  }\r\n  buildLabels() {\r\n    const me = this;\r\n    const labelOpts = me.options.labels || {};\r\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\r\n    if (labelOpts.filter) {\r\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\r\n    }\r\n    if (labelOpts.sort) {\r\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\r\n    }\r\n    if (me.options.reverse) {\r\n      legendItems.reverse();\r\n    }\r\n    me.legendItems = legendItems;\r\n  }\r\n  fit() {\r\n    const me = this;\r\n    const {options, ctx} = me;\r\n    if (!options.display) {\r\n      me.width = me.height = 0;\r\n      return;\r\n    }\r\n    const labelOpts = options.labels;\r\n    const labelFont = toFont(labelOpts.font);\r\n    const fontSize = labelFont.size;\r\n    const titleHeight = me._computeTitleHeight();\r\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n    let width, height;\r\n    ctx.font = labelFont.string;\r\n    if (me.isHorizontal()) {\r\n      width = me.maxWidth;\r\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n    } else {\r\n      height = me.maxHeight;\r\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n    }\r\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\r\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\r\n  }\r\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\r\n    const me = this;\r\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\r\n    const hitboxes = me.legendHitBoxes = [];\r\n    const lineWidths = me.lineWidths = [0];\r\n    const lineHeight = itemHeight + padding;\r\n    let totalHeight = titleHeight;\r\n    ctx.textAlign = 'left';\r\n    ctx.textBaseline = 'middle';\r\n    let row = -1;\r\n    let top = -lineHeight;\r\n    me.legendItems.forEach((legendItem, i) => {\r\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\r\n        totalHeight += lineHeight;\r\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\r\n        top += lineHeight;\r\n        row++;\r\n      }\r\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\r\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\r\n    });\r\n    return totalHeight;\r\n  }\r\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\r\n    const me = this;\r\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\r\n    const hitboxes = me.legendHitBoxes = [];\r\n    const columnSizes = me.columnSizes = [];\r\n    const heightLimit = maxHeight - titleHeight;\r\n    let totalWidth = padding;\r\n    let currentColWidth = 0;\r\n    let currentColHeight = 0;\r\n    let left = 0;\r\n    let top = 0;\r\n    let col = 0;\r\n    me.legendItems.forEach((legendItem, i) => {\r\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\r\n        totalWidth += currentColWidth + padding;\r\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\r\n        left += currentColWidth + padding;\r\n        col++;\r\n        top = 0;\r\n        currentColWidth = currentColHeight = 0;\r\n      }\r\n      currentColWidth = Math.max(currentColWidth, itemWidth);\r\n      currentColHeight += fontSize + padding;\r\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\r\n      top += itemHeight + padding;\r\n    });\r\n    totalWidth += currentColWidth;\r\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\r\n    return totalWidth;\r\n  }\r\n  adjustHitBoxes() {\r\n    const me = this;\r\n    if (!me.options.display) {\r\n      return;\r\n    }\r\n    const titleHeight = me._computeTitleHeight();\r\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\r\n    if (this.isHorizontal()) {\r\n      let row = 0;\r\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\r\n      for (const hitbox of hitboxes) {\r\n        if (row !== hitbox.row) {\r\n          row = hitbox.row;\r\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\r\n        }\r\n        hitbox.top += me.top + titleHeight + padding;\r\n        hitbox.left = left;\r\n        left += hitbox.width + padding;\r\n      }\r\n    } else {\r\n      let col = 0;\r\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\r\n      for (const hitbox of hitboxes) {\r\n        if (hitbox.col !== col) {\r\n          col = hitbox.col;\r\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\r\n        }\r\n        hitbox.top = top;\r\n        hitbox.left += me.left + padding;\r\n        top += hitbox.height + padding;\r\n      }\r\n    }\r\n  }\r\n  isHorizontal() {\r\n    return this.options.position === 'top' || this.options.position === 'bottom';\r\n  }\r\n  draw() {\r\n    const me = this;\r\n    if (me.options.display) {\r\n      const ctx = me.ctx;\r\n      clipArea(ctx, me);\r\n      me._draw();\r\n      unclipArea(ctx);\r\n    }\r\n  }\r\n  _draw() {\r\n    const me = this;\r\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\r\n    const {align, labels: labelOpts} = opts;\r\n    const defaultColor = defaults.color;\r\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\r\n    const labelFont = toFont(labelOpts.font);\r\n    const {color: fontColor, padding} = labelOpts;\r\n    const fontSize = labelFont.size;\r\n    const halfFontSize = fontSize / 2;\r\n    let cursor;\r\n    me.drawTitle();\r\n    ctx.textAlign = rtlHelper.textAlign('left');\r\n    ctx.textBaseline = 'middle';\r\n    ctx.lineWidth = 0.5;\r\n    ctx.font = labelFont.string;\r\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n    const drawLegendBox = function(x, y, legendItem) {\r\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\r\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\r\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\r\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\r\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\r\n      ctx.lineWidth = lineWidth;\r\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\r\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\r\n      if (labelOpts.usePointStyle) {\r\n        const drawOptions = {\r\n          radius: boxWidth * Math.SQRT2 / 2,\r\n          pointStyle: legendItem.pointStyle,\r\n          rotation: legendItem.rotation,\r\n          borderWidth: lineWidth\r\n        };\r\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\r\n        const centerY = y + halfFontSize;\r\n        drawPoint(ctx, drawOptions, centerX, centerY);\r\n      } else {\r\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\r\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\r\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\r\n        ctx.beginPath();\r\n        if (Object.values(borderRadius).some(v => v !== 0)) {\r\n          addRoundedRectPath(ctx, {\r\n            x: xBoxLeft,\r\n            y: yBoxTop,\r\n            w: boxWidth,\r\n            h: boxHeight,\r\n            radius: borderRadius,\r\n          });\r\n        } else {\r\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\r\n        }\r\n        ctx.fill();\r\n        if (lineWidth !== 0) {\r\n          ctx.stroke();\r\n        }\r\n      }\r\n      ctx.restore();\r\n    };\r\n    const fillText = function(x, y, legendItem) {\r\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\r\n        strikethrough: legendItem.hidden,\r\n        textAlign: legendItem.textAlign\r\n      });\r\n    };\r\n    const isHorizontal = me.isHorizontal();\r\n    const titleHeight = this._computeTitleHeight();\r\n    if (isHorizontal) {\r\n      cursor = {\r\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\r\n        y: me.top + padding + titleHeight,\r\n        line: 0\r\n      };\r\n    } else {\r\n      cursor = {\r\n        x: me.left + padding,\r\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\r\n        line: 0\r\n      };\r\n    }\r\n    overrideTextDirection(me.ctx, opts.textDirection);\r\n    const lineHeight = itemHeight + padding;\r\n    me.legendItems.forEach((legendItem, i) => {\r\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\r\n      ctx.fillStyle = legendItem.fontColor || fontColor;\r\n      const textWidth = ctx.measureText(legendItem.text).width;\r\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\r\n      const width = boxWidth + (fontSize / 2) + textWidth;\r\n      let x = cursor.x;\r\n      let y = cursor.y;\r\n      rtlHelper.setWidth(me.width);\r\n      if (isHorizontal) {\r\n        if (i > 0 && x + width + padding > me.right) {\r\n          y = cursor.y += lineHeight;\r\n          cursor.line++;\r\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\r\n        }\r\n      } else if (i > 0 && y + lineHeight > me.bottom) {\r\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\r\n        cursor.line++;\r\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\r\n      }\r\n      const realX = rtlHelper.x(x);\r\n      drawLegendBox(realX, y, legendItem);\r\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\r\n      fillText(rtlHelper.x(x), y, legendItem);\r\n      if (isHorizontal) {\r\n        cursor.x += width + padding;\r\n      } else {\r\n        cursor.y += lineHeight;\r\n      }\r\n    });\r\n    restoreTextDirection(me.ctx, opts.textDirection);\r\n  }\r\n  drawTitle() {\r\n    const me = this;\r\n    const opts = me.options;\r\n    const titleOpts = opts.title;\r\n    const titleFont = toFont(titleOpts.font);\r\n    const titlePadding = toPadding(titleOpts.padding);\r\n    if (!titleOpts.display) {\r\n      return;\r\n    }\r\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\r\n    const ctx = me.ctx;\r\n    const position = titleOpts.position;\r\n    const halfFontSize = titleFont.size / 2;\r\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\r\n    let y;\r\n    let left = me.left;\r\n    let maxWidth = me.width;\r\n    if (this.isHorizontal()) {\r\n      maxWidth = Math.max(...me.lineWidths);\r\n      y = me.top + topPaddingPlusHalfFontSize;\r\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\r\n    } else {\r\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\r\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\r\n    }\r\n    const x = _alignStartEnd(position, left, left + maxWidth);\r\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\r\n    ctx.textBaseline = 'middle';\r\n    ctx.strokeStyle = titleOpts.color;\r\n    ctx.fillStyle = titleOpts.color;\r\n    ctx.font = titleFont.string;\r\n    renderText(ctx, titleOpts.text, x, y, titleFont);\r\n  }\r\n  _computeTitleHeight() {\r\n    const titleOpts = this.options.title;\r\n    const titleFont = toFont(titleOpts.font);\r\n    const titlePadding = toPadding(titleOpts.padding);\r\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\r\n  }\r\n  _getLegendItemAt(x, y) {\r\n    const me = this;\r\n    let i, hitBox, lh;\r\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\r\n      lh = me.legendHitBoxes;\r\n      for (i = 0; i < lh.length; ++i) {\r\n        hitBox = lh[i];\r\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n          return me.legendItems[i];\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  handleEvent(e) {\r\n    const me = this;\r\n    const opts = me.options;\r\n    if (!isListened(e.type, opts)) {\r\n      return;\r\n    }\r\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\r\n    if (e.type === 'mousemove') {\r\n      const previous = me._hoveredItem;\r\n      const sameItem = itemsEqual(previous, hoveredItem);\r\n      if (previous && !sameItem) {\r\n        callback(opts.onLeave, [e, previous, me], me);\r\n      }\r\n      me._hoveredItem = hoveredItem;\r\n      if (hoveredItem && !sameItem) {\r\n        callback(opts.onHover, [e, hoveredItem, me], me);\r\n      }\r\n    } else if (hoveredItem) {\r\n      callback(opts.onClick, [e, hoveredItem, me], me);\r\n    }\r\n  }\r\n}\r\nfunction isListened(type, opts) {\r\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\r\n    return true;\r\n  }\r\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nvar plugin_legend = {\r\n  id: 'legend',\r\n  _element: Legend,\r\n  start(chart, _args, options) {\r\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\r\n    layouts.configure(chart, legend, options);\r\n    layouts.addBox(chart, legend);\r\n  },\r\n  stop(chart) {\r\n    layouts.removeBox(chart, chart.legend);\r\n    delete chart.legend;\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const legend = chart.legend;\r\n    layouts.configure(chart, legend, options);\r\n    legend.options = options;\r\n  },\r\n  afterUpdate(chart) {\r\n    const legend = chart.legend;\r\n    legend.buildLabels();\r\n    legend.adjustHitBoxes();\r\n  },\r\n  afterEvent(chart, args) {\r\n    if (!args.replay) {\r\n      chart.legend.handleEvent(args.event);\r\n    }\r\n  },\r\n  defaults: {\r\n    display: true,\r\n    position: 'top',\r\n    align: 'center',\r\n    fullSize: true,\r\n    reverse: false,\r\n    weight: 1000,\r\n    onClick(e, legendItem, legend) {\r\n      const index = legendItem.datasetIndex;\r\n      const ci = legend.chart;\r\n      if (ci.isDatasetVisible(index)) {\r\n        ci.hide(index);\r\n        legendItem.hidden = true;\r\n      } else {\r\n        ci.show(index);\r\n        legendItem.hidden = false;\r\n      }\r\n    },\r\n    onHover: null,\r\n    onLeave: null,\r\n    labels: {\r\n      color: (ctx) => ctx.chart.options.color,\r\n      boxWidth: 40,\r\n      padding: 10,\r\n      generateLabels(chart) {\r\n        const datasets = chart.data.datasets;\r\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\r\n        return chart._getSortedDatasetMetas().map((meta) => {\r\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\r\n          const borderWidth = toPadding(style.borderWidth);\r\n          return {\r\n            text: datasets[meta.index].label,\r\n            fillStyle: style.backgroundColor,\r\n            fontColor: color,\r\n            hidden: !meta.visible,\r\n            lineCap: style.borderCapStyle,\r\n            lineDash: style.borderDash,\r\n            lineDashOffset: style.borderDashOffset,\r\n            lineJoin: style.borderJoinStyle,\r\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\r\n            strokeStyle: style.borderColor,\r\n            pointStyle: pointStyle || style.pointStyle,\r\n            rotation: style.rotation,\r\n            textAlign: textAlign || style.textAlign,\r\n            borderRadius: 0,\r\n            datasetIndex: meta.index\r\n          };\r\n        }, this);\r\n      }\r\n    },\r\n    title: {\r\n      color: (ctx) => ctx.chart.options.color,\r\n      display: false,\r\n      position: 'center',\r\n      text: '',\r\n    }\r\n  },\r\n  descriptors: {\r\n    _scriptable: (name) => !name.startsWith('on'),\r\n    labels: {\r\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\r\n    }\r\n  },\r\n};\r\n\r\nclass Title extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.ctx = config.ctx;\r\n    this._padding = undefined;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this.position = undefined;\r\n    this.weight = undefined;\r\n    this.fullSize = undefined;\r\n  }\r\n  update(maxWidth, maxHeight) {\r\n    const me = this;\r\n    const opts = me.options;\r\n    me.left = 0;\r\n    me.top = 0;\r\n    if (!opts.display) {\r\n      me.width = me.height = me.right = me.bottom = 0;\r\n      return;\r\n    }\r\n    me.width = me.right = maxWidth;\r\n    me.height = me.bottom = maxHeight;\r\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\r\n    me._padding = toPadding(opts.padding);\r\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\r\n    if (me.isHorizontal()) {\r\n      me.height = textSize;\r\n    } else {\r\n      me.width = textSize;\r\n    }\r\n  }\r\n  isHorizontal() {\r\n    const pos = this.options.position;\r\n    return pos === 'top' || pos === 'bottom';\r\n  }\r\n  _drawArgs(offset) {\r\n    const {top, left, bottom, right, options} = this;\r\n    const align = options.align;\r\n    let rotation = 0;\r\n    let maxWidth, titleX, titleY;\r\n    if (this.isHorizontal()) {\r\n      titleX = _alignStartEnd(align, left, right);\r\n      titleY = top + offset;\r\n      maxWidth = right - left;\r\n    } else {\r\n      if (options.position === 'left') {\r\n        titleX = left + offset;\r\n        titleY = _alignStartEnd(align, bottom, top);\r\n        rotation = PI * -0.5;\r\n      } else {\r\n        titleX = right - offset;\r\n        titleY = _alignStartEnd(align, top, bottom);\r\n        rotation = PI * 0.5;\r\n      }\r\n      maxWidth = bottom - top;\r\n    }\r\n    return {titleX, titleY, maxWidth, rotation};\r\n  }\r\n  draw() {\r\n    const me = this;\r\n    const ctx = me.ctx;\r\n    const opts = me.options;\r\n    if (!opts.display) {\r\n      return;\r\n    }\r\n    const fontOpts = toFont(opts.font);\r\n    const lineHeight = fontOpts.lineHeight;\r\n    const offset = lineHeight / 2 + me._padding.top;\r\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\r\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\r\n      color: opts.color,\r\n      maxWidth,\r\n      rotation,\r\n      textAlign: _toLeftRightCenter(opts.align),\r\n      textBaseline: 'middle',\r\n      translation: [titleX, titleY],\r\n    });\r\n  }\r\n}\r\nfunction createTitle(chart, titleOpts) {\r\n  const title = new Title({\r\n    ctx: chart.ctx,\r\n    options: titleOpts,\r\n    chart\r\n  });\r\n  layouts.configure(chart, title, titleOpts);\r\n  layouts.addBox(chart, title);\r\n  chart.titleBlock = title;\r\n}\r\nvar plugin_title = {\r\n  id: 'title',\r\n  _element: Title,\r\n  start(chart, _args, options) {\r\n    createTitle(chart, options);\r\n  },\r\n  stop(chart) {\r\n    const titleBlock = chart.titleBlock;\r\n    layouts.removeBox(chart, titleBlock);\r\n    delete chart.titleBlock;\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const title = chart.titleBlock;\r\n    layouts.configure(chart, title, options);\r\n    title.options = options;\r\n  },\r\n  defaults: {\r\n    align: 'center',\r\n    display: false,\r\n    font: {\r\n      weight: 'bold',\r\n    },\r\n    fullSize: true,\r\n    padding: 10,\r\n    position: 'top',\r\n    text: '',\r\n    weight: 2000\r\n  },\r\n  defaultRoutes: {\r\n    color: 'color'\r\n  },\r\n  descriptors: {\r\n    _scriptable: true,\r\n    _indexable: false,\r\n  },\r\n};\r\n\r\nconst positioners = {\r\n  average(items) {\r\n    if (!items.length) {\r\n      return false;\r\n    }\r\n    let i, len;\r\n    let x = 0;\r\n    let y = 0;\r\n    let count = 0;\r\n    for (i = 0, len = items.length; i < len; ++i) {\r\n      const el = items[i].element;\r\n      if (el && el.hasValue()) {\r\n        const pos = el.tooltipPosition();\r\n        x += pos.x;\r\n        y += pos.y;\r\n        ++count;\r\n      }\r\n    }\r\n    return {\r\n      x: x / count,\r\n      y: y / count\r\n    };\r\n  },\r\n  nearest(items, eventPosition) {\r\n    if (!items.length) {\r\n      return false;\r\n    }\r\n    let x = eventPosition.x;\r\n    let y = eventPosition.y;\r\n    let minDistance = Number.POSITIVE_INFINITY;\r\n    let i, len, nearestElement;\r\n    for (i = 0, len = items.length; i < len; ++i) {\r\n      const el = items[i].element;\r\n      if (el && el.hasValue()) {\r\n        const center = el.getCenterPoint();\r\n        const d = distanceBetweenPoints(eventPosition, center);\r\n        if (d < minDistance) {\r\n          minDistance = d;\r\n          nearestElement = el;\r\n        }\r\n      }\r\n    }\r\n    if (nearestElement) {\r\n      const tp = nearestElement.tooltipPosition();\r\n      x = tp.x;\r\n      y = tp.y;\r\n    }\r\n    return {\r\n      x,\r\n      y\r\n    };\r\n  }\r\n};\r\nfunction pushOrConcat(base, toPush) {\r\n  if (toPush) {\r\n    if (isArray(toPush)) {\r\n      Array.prototype.push.apply(base, toPush);\r\n    } else {\r\n      base.push(toPush);\r\n    }\r\n  }\r\n  return base;\r\n}\r\nfunction splitNewlines(str) {\r\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\r\n    return str.split('\\n');\r\n  }\r\n  return str;\r\n}\r\nfunction createTooltipItem(chart, item) {\r\n  const {element, datasetIndex, index} = item;\r\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\r\n  const {label, value} = controller.getLabelAndValue(index);\r\n  return {\r\n    chart,\r\n    label,\r\n    parsed: controller.getParsed(index),\r\n    raw: chart.data.datasets[datasetIndex].data[index],\r\n    formattedValue: value,\r\n    dataset: controller.getDataset(),\r\n    dataIndex: index,\r\n    datasetIndex,\r\n    element\r\n  };\r\n}\r\nfunction getTooltipSize(tooltip, options) {\r\n  const ctx = tooltip._chart.ctx;\r\n  const {body, footer, title} = tooltip;\r\n  const {boxWidth, boxHeight} = options;\r\n  const bodyFont = toFont(options.bodyFont);\r\n  const titleFont = toFont(options.titleFont);\r\n  const footerFont = toFont(options.footerFont);\r\n  const titleLineCount = title.length;\r\n  const footerLineCount = footer.length;\r\n  const bodyLineItemCount = body.length;\r\n  const padding = toPadding(options.padding);\r\n  let height = padding.height;\r\n  let width = 0;\r\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\r\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\r\n  if (titleLineCount) {\r\n    height += titleLineCount * titleFont.lineHeight\r\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\r\n\t\t\t+ options.titleMarginBottom;\r\n  }\r\n  if (combinedBodyLength) {\r\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\r\n    height += bodyLineItemCount * bodyLineHeight\r\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\r\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\r\n  }\r\n  if (footerLineCount) {\r\n    height += options.footerMarginTop\r\n\t\t\t+ footerLineCount * footerFont.lineHeight\r\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\r\n  }\r\n  let widthPadding = 0;\r\n  const maxLineWidth = function(line) {\r\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n  };\r\n  ctx.save();\r\n  ctx.font = titleFont.string;\r\n  each(tooltip.title, maxLineWidth);\r\n  ctx.font = bodyFont.string;\r\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\r\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\r\n  each(body, (bodyItem) => {\r\n    each(bodyItem.before, maxLineWidth);\r\n    each(bodyItem.lines, maxLineWidth);\r\n    each(bodyItem.after, maxLineWidth);\r\n  });\r\n  widthPadding = 0;\r\n  ctx.font = footerFont.string;\r\n  each(tooltip.footer, maxLineWidth);\r\n  ctx.restore();\r\n  width += padding.width;\r\n  return {width, height};\r\n}\r\nfunction determineYAlign(chart, size) {\r\n  const {y, height} = size;\r\n  if (y < height / 2) {\r\n    return 'top';\r\n  } else if (y > (chart.height - height / 2)) {\r\n    return 'bottom';\r\n  }\r\n  return 'center';\r\n}\r\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\r\n  const {x, width} = size;\r\n  const caret = options.caretSize + options.caretPadding;\r\n  if (xAlign === 'left' && x + width + caret > chart.width) {\r\n    return true;\r\n  }\r\n  if (xAlign === 'right' && x - width - caret < 0) {\r\n    return true;\r\n  }\r\n}\r\nfunction determineXAlign(chart, options, size, yAlign) {\r\n  const {x, width} = size;\r\n  const {width: chartWidth, chartArea: {left, right}} = chart;\r\n  let xAlign = 'center';\r\n  if (yAlign === 'center') {\r\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\r\n  } else if (x <= width / 2) {\r\n    xAlign = 'left';\r\n  } else if (x >= chartWidth - width / 2) {\r\n    xAlign = 'right';\r\n  }\r\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\r\n    xAlign = 'center';\r\n  }\r\n  return xAlign;\r\n}\r\nfunction determineAlignment(chart, options, size) {\r\n  const yAlign = options.yAlign || determineYAlign(chart, size);\r\n  return {\r\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\r\n    yAlign\r\n  };\r\n}\r\nfunction alignX(size, xAlign) {\r\n  let {x, width} = size;\r\n  if (xAlign === 'right') {\r\n    x -= width;\r\n  } else if (xAlign === 'center') {\r\n    x -= (width / 2);\r\n  }\r\n  return x;\r\n}\r\nfunction alignY(size, yAlign, paddingAndSize) {\r\n  let {y, height} = size;\r\n  if (yAlign === 'top') {\r\n    y += paddingAndSize;\r\n  } else if (yAlign === 'bottom') {\r\n    y -= height + paddingAndSize;\r\n  } else {\r\n    y -= (height / 2);\r\n  }\r\n  return y;\r\n}\r\nfunction getBackgroundPoint(options, size, alignment, chart) {\r\n  const {caretSize, caretPadding, cornerRadius} = options;\r\n  const {xAlign, yAlign} = alignment;\r\n  const paddingAndSize = caretSize + caretPadding;\r\n  const radiusAndPadding = cornerRadius + caretPadding;\r\n  let x = alignX(size, xAlign);\r\n  const y = alignY(size, yAlign, paddingAndSize);\r\n  if (yAlign === 'center') {\r\n    if (xAlign === 'left') {\r\n      x += paddingAndSize;\r\n    } else if (xAlign === 'right') {\r\n      x -= paddingAndSize;\r\n    }\r\n  } else if (xAlign === 'left') {\r\n    x -= radiusAndPadding;\r\n  } else if (xAlign === 'right') {\r\n    x += radiusAndPadding;\r\n  }\r\n  return {\r\n    x: _limitValue(x, 0, chart.width - size.width),\r\n    y: _limitValue(y, 0, chart.height - size.height)\r\n  };\r\n}\r\nfunction getAlignedX(tooltip, align, options) {\r\n  const padding = toPadding(options.padding);\r\n  return align === 'center'\r\n    ? tooltip.x + tooltip.width / 2\r\n    : align === 'right'\r\n      ? tooltip.x + tooltip.width - padding.right\r\n      : tooltip.x + padding.left;\r\n}\r\nfunction getBeforeAfterBodyLines(callback) {\r\n  return pushOrConcat([], splitNewlines(callback));\r\n}\r\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\r\n  return Object.assign(Object.create(parent), {\r\n    tooltip,\r\n    tooltipItems,\r\n    type: 'tooltip'\r\n  });\r\n}\r\nfunction overrideCallbacks(callbacks, context) {\r\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\r\n  return override ? callbacks.override(override) : callbacks;\r\n}\r\nclass Tooltip extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this.opacity = 0;\r\n    this._active = [];\r\n    this._chart = config._chart;\r\n    this._eventPosition = undefined;\r\n    this._size = undefined;\r\n    this._cachedAnimations = undefined;\r\n    this._tooltipItems = [];\r\n    this.$animations = undefined;\r\n    this.$context = undefined;\r\n    this.options = config.options;\r\n    this.dataPoints = undefined;\r\n    this.title = undefined;\r\n    this.beforeBody = undefined;\r\n    this.body = undefined;\r\n    this.afterBody = undefined;\r\n    this.footer = undefined;\r\n    this.xAlign = undefined;\r\n    this.yAlign = undefined;\r\n    this.x = undefined;\r\n    this.y = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this.caretX = undefined;\r\n    this.caretY = undefined;\r\n    this.labelColors = undefined;\r\n    this.labelPointStyles = undefined;\r\n    this.labelTextColors = undefined;\r\n  }\r\n  initialize(options) {\r\n    this.options = options;\r\n    this._cachedAnimations = undefined;\r\n    this.$context = undefined;\r\n  }\r\n  _resolveAnimations() {\r\n    const me = this;\r\n    const cached = me._cachedAnimations;\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    const chart = me._chart;\r\n    const options = me.options.setContext(me.getContext());\r\n    const opts = options.enabled && chart.options.animation && options.animations;\r\n    const animations = new Animations(me._chart, opts);\r\n    if (opts._cacheable) {\r\n      me._cachedAnimations = Object.freeze(animations);\r\n    }\r\n    return animations;\r\n  }\r\n  getContext() {\r\n    const me = this;\r\n    return me.$context ||\r\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\r\n  }\r\n  getTitle(context, options) {\r\n    const me = this;\r\n    const {callbacks} = options;\r\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\r\n    const title = callbacks.title.apply(me, [context]);\r\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\r\n    let lines = [];\r\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\r\n    lines = pushOrConcat(lines, splitNewlines(title));\r\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\r\n    return lines;\r\n  }\r\n  getBeforeBody(tooltipItems, options) {\r\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\r\n  }\r\n  getBody(tooltipItems, options) {\r\n    const me = this;\r\n    const {callbacks} = options;\r\n    const bodyItems = [];\r\n    each(tooltipItems, (context) => {\r\n      const bodyItem = {\r\n        before: [],\r\n        lines: [],\r\n        after: []\r\n      };\r\n      const scoped = overrideCallbacks(callbacks, context);\r\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\r\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\r\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\r\n      bodyItems.push(bodyItem);\r\n    });\r\n    return bodyItems;\r\n  }\r\n  getAfterBody(tooltipItems, options) {\r\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\r\n  }\r\n  getFooter(tooltipItems, options) {\r\n    const me = this;\r\n    const {callbacks} = options;\r\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\r\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\r\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\r\n    let lines = [];\r\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\r\n    lines = pushOrConcat(lines, splitNewlines(footer));\r\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\r\n    return lines;\r\n  }\r\n  _createItems(options) {\r\n    const me = this;\r\n    const active = me._active;\r\n    const data = me._chart.data;\r\n    const labelColors = [];\r\n    const labelPointStyles = [];\r\n    const labelTextColors = [];\r\n    let tooltipItems = [];\r\n    let i, len;\r\n    for (i = 0, len = active.length; i < len; ++i) {\r\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\r\n    }\r\n    if (options.filter) {\r\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\r\n    }\r\n    if (options.itemSort) {\r\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\r\n    }\r\n    each(tooltipItems, (context) => {\r\n      const scoped = overrideCallbacks(options.callbacks, context);\r\n      labelColors.push(scoped.labelColor.call(me, context));\r\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\r\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\r\n    });\r\n    me.labelColors = labelColors;\r\n    me.labelPointStyles = labelPointStyles;\r\n    me.labelTextColors = labelTextColors;\r\n    me.dataPoints = tooltipItems;\r\n    return tooltipItems;\r\n  }\r\n  update(changed, replay) {\r\n    const me = this;\r\n    const options = me.options.setContext(me.getContext());\r\n    const active = me._active;\r\n    let properties;\r\n    let tooltipItems = [];\r\n    if (!active.length) {\r\n      if (me.opacity !== 0) {\r\n        properties = {\r\n          opacity: 0\r\n        };\r\n      }\r\n    } else {\r\n      const position = positioners[options.position].call(me, active, me._eventPosition);\r\n      tooltipItems = me._createItems(options);\r\n      me.title = me.getTitle(tooltipItems, options);\r\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\r\n      me.body = me.getBody(tooltipItems, options);\r\n      me.afterBody = me.getAfterBody(tooltipItems, options);\r\n      me.footer = me.getFooter(tooltipItems, options);\r\n      const size = me._size = getTooltipSize(me, options);\r\n      const positionAndSize = Object.assign({}, position, size);\r\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\r\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\r\n      me.xAlign = alignment.xAlign;\r\n      me.yAlign = alignment.yAlign;\r\n      properties = {\r\n        opacity: 1,\r\n        x: backgroundPoint.x,\r\n        y: backgroundPoint.y,\r\n        width: size.width,\r\n        height: size.height,\r\n        caretX: position.x,\r\n        caretY: position.y\r\n      };\r\n    }\r\n    me._tooltipItems = tooltipItems;\r\n    me.$context = undefined;\r\n    if (properties) {\r\n      me._resolveAnimations().update(me, properties);\r\n    }\r\n    if (changed && options.external) {\r\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\r\n    }\r\n  }\r\n  drawCaret(tooltipPoint, ctx, size, options) {\r\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\r\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n  }\r\n  getCaretPosition(tooltipPoint, size, options) {\r\n    const {xAlign, yAlign} = this;\r\n    const {cornerRadius, caretSize} = options;\r\n    const {x: ptX, y: ptY} = tooltipPoint;\r\n    const {width, height} = size;\r\n    let x1, x2, x3, y1, y2, y3;\r\n    if (yAlign === 'center') {\r\n      y2 = ptY + (height / 2);\r\n      if (xAlign === 'left') {\r\n        x1 = ptX;\r\n        x2 = x1 - caretSize;\r\n        y1 = y2 + caretSize;\r\n        y3 = y2 - caretSize;\r\n      } else {\r\n        x1 = ptX + width;\r\n        x2 = x1 + caretSize;\r\n        y1 = y2 - caretSize;\r\n        y3 = y2 + caretSize;\r\n      }\r\n      x3 = x1;\r\n    } else {\r\n      if (xAlign === 'left') {\r\n        x2 = ptX + cornerRadius + (caretSize);\r\n      } else if (xAlign === 'right') {\r\n        x2 = ptX + width - cornerRadius - caretSize;\r\n      } else {\r\n        x2 = this.caretX;\r\n      }\r\n      if (yAlign === 'top') {\r\n        y1 = ptY;\r\n        y2 = y1 - caretSize;\r\n        x1 = x2 - caretSize;\r\n        x3 = x2 + caretSize;\r\n      } else {\r\n        y1 = ptY + height;\r\n        y2 = y1 + caretSize;\r\n        x1 = x2 + caretSize;\r\n        x3 = x2 - caretSize;\r\n      }\r\n      y3 = y1;\r\n    }\r\n    return {x1, x2, x3, y1, y2, y3};\r\n  }\r\n  drawTitle(pt, ctx, options) {\r\n    const me = this;\r\n    const title = me.title;\r\n    const length = title.length;\r\n    let titleFont, titleSpacing, i;\r\n    if (length) {\r\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\r\n      pt.x = getAlignedX(me, options.titleAlign, options);\r\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\r\n      ctx.textBaseline = 'middle';\r\n      titleFont = toFont(options.titleFont);\r\n      titleSpacing = options.titleSpacing;\r\n      ctx.fillStyle = options.titleColor;\r\n      ctx.font = titleFont.string;\r\n      for (i = 0; i < length; ++i) {\r\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\r\n        pt.y += titleFont.lineHeight + titleSpacing;\r\n        if (i + 1 === length) {\r\n          pt.y += options.titleMarginBottom - titleSpacing;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\r\n    const me = this;\r\n    const labelColors = me.labelColors[i];\r\n    const labelPointStyle = me.labelPointStyles[i];\r\n    const {boxHeight, boxWidth} = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    const colorX = getAlignedX(me, 'left', options);\r\n    const rtlColorX = rtlHelper.x(colorX);\r\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\r\n    const colorY = pt.y + yOffSet;\r\n    if (options.usePointStyle) {\r\n      const drawOptions = {\r\n        radius: Math.min(boxWidth, boxHeight) / 2,\r\n        pointStyle: labelPointStyle.pointStyle,\r\n        rotation: labelPointStyle.rotation,\r\n        borderWidth: 1\r\n      };\r\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\r\n      const centerY = colorY + boxHeight / 2;\r\n      ctx.strokeStyle = options.multiKeyBackground;\r\n      ctx.fillStyle = options.multiKeyBackground;\r\n      drawPoint(ctx, drawOptions, centerX, centerY);\r\n      ctx.strokeStyle = labelColors.borderColor;\r\n      ctx.fillStyle = labelColors.backgroundColor;\r\n      drawPoint(ctx, drawOptions, centerX, centerY);\r\n    } else {\r\n      ctx.lineWidth = labelColors.borderWidth || 1;\r\n      ctx.strokeStyle = labelColors.borderColor;\r\n      ctx.setLineDash(labelColors.borderDash || []);\r\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\r\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\r\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\r\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\r\n      if (Object.values(borderRadius).some(v => v !== 0)) {\r\n        ctx.beginPath();\r\n        ctx.fillStyle = options.multiKeyBackground;\r\n        addRoundedRectPath(ctx, {\r\n          x: outerX,\r\n          y: colorY,\r\n          w: boxWidth,\r\n          h: boxHeight,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        ctx.fillStyle = labelColors.backgroundColor;\r\n        ctx.beginPath();\r\n        addRoundedRectPath(ctx, {\r\n          x: innerX,\r\n          y: colorY + 1,\r\n          w: boxWidth - 2,\r\n          h: boxHeight - 2,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n      } else {\r\n        ctx.fillStyle = options.multiKeyBackground;\r\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\r\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\r\n        ctx.fillStyle = labelColors.backgroundColor;\r\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\r\n      }\r\n    }\r\n    ctx.fillStyle = me.labelTextColors[i];\r\n  }\r\n  drawBody(pt, ctx, options) {\r\n    const me = this;\r\n    const {body} = me;\r\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    let bodyLineHeight = bodyFont.lineHeight;\r\n    let xLinePadding = 0;\r\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\r\n    const fillLineOfText = function(line) {\r\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\r\n      pt.y += bodyLineHeight + bodySpacing;\r\n    };\r\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\r\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\r\n    ctx.textAlign = bodyAlign;\r\n    ctx.textBaseline = 'middle';\r\n    ctx.font = bodyFont.string;\r\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\r\n    ctx.fillStyle = options.bodyColor;\r\n    each(me.beforeBody, fillLineOfText);\r\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\r\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\r\n      : 0;\r\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\r\n      bodyItem = body[i];\r\n      textColor = me.labelTextColors[i];\r\n      ctx.fillStyle = textColor;\r\n      each(bodyItem.before, fillLineOfText);\r\n      lines = bodyItem.lines;\r\n      if (displayColors && lines.length) {\r\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\r\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\r\n      }\r\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\r\n        fillLineOfText(lines[j]);\r\n        bodyLineHeight = bodyFont.lineHeight;\r\n      }\r\n      each(bodyItem.after, fillLineOfText);\r\n    }\r\n    xLinePadding = 0;\r\n    bodyLineHeight = bodyFont.lineHeight;\r\n    each(me.afterBody, fillLineOfText);\r\n    pt.y -= bodySpacing;\r\n  }\r\n  drawFooter(pt, ctx, options) {\r\n    const me = this;\r\n    const footer = me.footer;\r\n    const length = footer.length;\r\n    let footerFont, i;\r\n    if (length) {\r\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\r\n      pt.x = getAlignedX(me, options.footerAlign, options);\r\n      pt.y += options.footerMarginTop;\r\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\r\n      ctx.textBaseline = 'middle';\r\n      footerFont = toFont(options.footerFont);\r\n      ctx.fillStyle = options.footerColor;\r\n      ctx.font = footerFont.string;\r\n      for (i = 0; i < length; ++i) {\r\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\r\n        pt.y += footerFont.lineHeight + options.footerSpacing;\r\n      }\r\n    }\r\n  }\r\n  drawBackground(pt, ctx, tooltipSize, options) {\r\n    const {xAlign, yAlign} = this;\r\n    const {x, y} = pt;\r\n    const {width, height} = tooltipSize;\r\n    const radius = options.cornerRadius;\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.strokeStyle = options.borderColor;\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + radius, y);\r\n    if (yAlign === 'top') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + width - radius, y);\r\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n    if (yAlign === 'center' && xAlign === 'right') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + width, y + height - radius);\r\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n    if (yAlign === 'bottom') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + radius, y + height);\r\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n    if (yAlign === 'center' && xAlign === 'left') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x, y + radius);\r\n    ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    if (options.borderWidth > 0) {\r\n      ctx.stroke();\r\n    }\r\n  }\r\n  _updateAnimationTarget(options) {\r\n    const me = this;\r\n    const chart = me._chart;\r\n    const anims = me.$animations;\r\n    const animX = anims && anims.x;\r\n    const animY = anims && anims.y;\r\n    if (animX || animY) {\r\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\r\n      if (!position) {\r\n        return;\r\n      }\r\n      const size = me._size = getTooltipSize(me, options);\r\n      const positionAndSize = Object.assign({}, position, me._size);\r\n      const alignment = determineAlignment(chart, options, positionAndSize);\r\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\r\n      if (animX._to !== point.x || animY._to !== point.y) {\r\n        me.xAlign = alignment.xAlign;\r\n        me.yAlign = alignment.yAlign;\r\n        me.width = size.width;\r\n        me.height = size.height;\r\n        me.caretX = position.x;\r\n        me.caretY = position.y;\r\n        me._resolveAnimations().update(me, point);\r\n      }\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    const me = this;\r\n    const options = me.options.setContext(me.getContext());\r\n    let opacity = me.opacity;\r\n    if (!opacity) {\r\n      return;\r\n    }\r\n    me._updateAnimationTarget(options);\r\n    const tooltipSize = {\r\n      width: me.width,\r\n      height: me.height\r\n    };\r\n    const pt = {\r\n      x: me.x,\r\n      y: me.y\r\n    };\r\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\r\n    const padding = toPadding(options.padding);\r\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\r\n    if (options.enabled && hasTooltipContent) {\r\n      ctx.save();\r\n      ctx.globalAlpha = opacity;\r\n      me.drawBackground(pt, ctx, tooltipSize, options);\r\n      overrideTextDirection(ctx, options.textDirection);\r\n      pt.y += padding.top;\r\n      me.drawTitle(pt, ctx, options);\r\n      me.drawBody(pt, ctx, options);\r\n      me.drawFooter(pt, ctx, options);\r\n      restoreTextDirection(ctx, options.textDirection);\r\n      ctx.restore();\r\n    }\r\n  }\r\n  getActiveElements() {\r\n    return this._active || [];\r\n  }\r\n  setActiveElements(activeElements, eventPosition) {\r\n    const me = this;\r\n    const lastActive = me._active;\r\n    const active = activeElements.map(({datasetIndex, index}) => {\r\n      const meta = me._chart.getDatasetMeta(datasetIndex);\r\n      if (!meta) {\r\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\r\n      }\r\n      return {\r\n        datasetIndex,\r\n        element: meta.data[index],\r\n        index,\r\n      };\r\n    });\r\n    const changed = !_elementsEqual(lastActive, active);\r\n    const positionChanged = me._positionChanged(active, eventPosition);\r\n    if (changed || positionChanged) {\r\n      me._active = active;\r\n      me._eventPosition = eventPosition;\r\n      me.update(true);\r\n    }\r\n  }\r\n  handleEvent(e, replay) {\r\n    const me = this;\r\n    const options = me.options;\r\n    const lastActive = me._active || [];\r\n    let changed = false;\r\n    let active = [];\r\n    if (e.type !== 'mouseout') {\r\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\r\n      if (options.reverse) {\r\n        active.reverse();\r\n      }\r\n    }\r\n    const positionChanged = me._positionChanged(active, e);\r\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\r\n    if (changed) {\r\n      me._active = active;\r\n      if (options.enabled || options.external) {\r\n        me._eventPosition = {\r\n          x: e.x,\r\n          y: e.y\r\n        };\r\n        me.update(true, replay);\r\n      }\r\n    }\r\n    return changed;\r\n  }\r\n  _positionChanged(active, e) {\r\n    const {caretX, caretY, options} = this;\r\n    const position = positioners[options.position].call(this, active, e);\r\n    return position !== false && (caretX !== position.x || caretY !== position.y);\r\n  }\r\n}\r\nTooltip.positioners = positioners;\r\nvar plugin_tooltip = {\r\n  id: 'tooltip',\r\n  _element: Tooltip,\r\n  positioners,\r\n  afterInit(chart, _args, options) {\r\n    if (options) {\r\n      chart.tooltip = new Tooltip({_chart: chart, options});\r\n    }\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    if (chart.tooltip) {\r\n      chart.tooltip.initialize(options);\r\n    }\r\n  },\r\n  reset(chart, _args, options) {\r\n    if (chart.tooltip) {\r\n      chart.tooltip.initialize(options);\r\n    }\r\n  },\r\n  afterDraw(chart) {\r\n    const tooltip = chart.tooltip;\r\n    const args = {\r\n      tooltip\r\n    };\r\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\r\n      return;\r\n    }\r\n    if (tooltip) {\r\n      tooltip.draw(chart.ctx);\r\n    }\r\n    chart.notifyPlugins('afterTooltipDraw', args);\r\n  },\r\n  afterEvent(chart, args) {\r\n    if (chart.tooltip) {\r\n      const useFinalPosition = args.replay;\r\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\r\n        args.changed = true;\r\n      }\r\n    }\r\n  },\r\n  defaults: {\r\n    enabled: true,\r\n    external: null,\r\n    position: 'average',\r\n    backgroundColor: 'rgba(0,0,0,0.8)',\r\n    titleColor: '#fff',\r\n    titleFont: {\r\n      weight: 'bold',\r\n    },\r\n    titleSpacing: 2,\r\n    titleMarginBottom: 6,\r\n    titleAlign: 'left',\r\n    bodyColor: '#fff',\r\n    bodySpacing: 2,\r\n    bodyFont: {\r\n    },\r\n    bodyAlign: 'left',\r\n    footerColor: '#fff',\r\n    footerSpacing: 2,\r\n    footerMarginTop: 6,\r\n    footerFont: {\r\n      weight: 'bold',\r\n    },\r\n    footerAlign: 'left',\r\n    padding: 6,\r\n    caretPadding: 2,\r\n    caretSize: 5,\r\n    cornerRadius: 6,\r\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\r\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\r\n    multiKeyBackground: '#fff',\r\n    displayColors: true,\r\n    borderColor: 'rgba(0,0,0,0)',\r\n    borderWidth: 0,\r\n    animation: {\r\n      duration: 400,\r\n      easing: 'easeOutQuart',\r\n    },\r\n    animations: {\r\n      numbers: {\r\n        type: 'number',\r\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\r\n      },\r\n      opacity: {\r\n        easing: 'linear',\r\n        duration: 200\r\n      }\r\n    },\r\n    callbacks: {\r\n      beforeTitle: noop,\r\n      title(tooltipItems) {\r\n        if (tooltipItems.length > 0) {\r\n          const item = tooltipItems[0];\r\n          const labels = item.chart.data.labels;\r\n          const labelCount = labels ? labels.length : 0;\r\n          if (this && this.options && this.options.mode === 'dataset') {\r\n            return item.dataset.label || '';\r\n          } else if (item.label) {\r\n            return item.label;\r\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\r\n            return labels[item.dataIndex];\r\n          }\r\n        }\r\n        return '';\r\n      },\r\n      afterTitle: noop,\r\n      beforeBody: noop,\r\n      beforeLabel: noop,\r\n      label(tooltipItem) {\r\n        if (this && this.options && this.options.mode === 'dataset') {\r\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\r\n        }\r\n        let label = tooltipItem.dataset.label || '';\r\n        if (label) {\r\n          label += ': ';\r\n        }\r\n        const value = tooltipItem.formattedValue;\r\n        if (!isNullOrUndef(value)) {\r\n          label += value;\r\n        }\r\n        return label;\r\n      },\r\n      labelColor(tooltipItem) {\r\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n        return {\r\n          borderColor: options.borderColor,\r\n          backgroundColor: options.backgroundColor,\r\n          borderWidth: options.borderWidth,\r\n          borderDash: options.borderDash,\r\n          borderDashOffset: options.borderDashOffset,\r\n          borderRadius: 0,\r\n        };\r\n      },\r\n      labelTextColor() {\r\n        return this.options.bodyColor;\r\n      },\r\n      labelPointStyle(tooltipItem) {\r\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n        return {\r\n          pointStyle: options.pointStyle,\r\n          rotation: options.rotation,\r\n        };\r\n      },\r\n      afterLabel: noop,\r\n      afterBody: noop,\r\n      beforeFooter: noop,\r\n      footer: noop,\r\n      afterFooter: noop\r\n    }\r\n  },\r\n  defaultRoutes: {\r\n    bodyFont: 'font',\r\n    footerFont: 'font',\r\n    titleFont: 'font'\r\n  },\r\n  descriptors: {\r\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\r\n    _indexable: false,\r\n    callbacks: {\r\n      _scriptable: false,\r\n      _indexable: false,\r\n    },\r\n    animation: {\r\n      _fallback: false\r\n    },\r\n    animations: {\r\n      _fallback: 'animation'\r\n    }\r\n  },\r\n  additionalOptionScopes: ['interaction']\r\n};\r\n\r\nvar plugins = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nDecimation: plugin_decimation,\r\nFiller: plugin_filler,\r\nLegend: plugin_legend,\r\nTitle: plugin_title,\r\nTooltip: plugin_tooltip\r\n});\r\n\r\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\r\n  ? labels.push(raw) - 1\r\n  : isNaN(raw) ? null : index;\r\nfunction findOrAddLabel(labels, raw, index) {\r\n  const first = labels.indexOf(raw);\r\n  if (first === -1) {\r\n    return addIfString(labels, raw, index);\r\n  }\r\n  const last = labels.lastIndexOf(raw);\r\n  return first !== last ? index : first;\r\n}\r\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\r\nclass CategoryScale extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this._startValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    if (isNullOrUndef(raw)) {\r\n      return null;\r\n    }\r\n    const labels = this.getLabels();\r\n    index = isFinite(index) && labels[index] === raw ? index\r\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\r\n    return validIndex(index, labels.length - 1);\r\n  }\r\n  determineDataLimits() {\r\n    const me = this;\r\n    const {minDefined, maxDefined} = me.getUserBounds();\r\n    let {min, max} = me.getMinMax(true);\r\n    if (me.options.bounds === 'ticks') {\r\n      if (!minDefined) {\r\n        min = 0;\r\n      }\r\n      if (!maxDefined) {\r\n        max = me.getLabels().length - 1;\r\n      }\r\n    }\r\n    me.min = min;\r\n    me.max = max;\r\n  }\r\n  buildTicks() {\r\n    const me = this;\r\n    const min = me.min;\r\n    const max = me.max;\r\n    const offset = me.options.offset;\r\n    const ticks = [];\r\n    let labels = me.getLabels();\r\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\r\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\r\n    me._startValue = me.min - (offset ? 0.5 : 0);\r\n    for (let value = min; value <= max; value++) {\r\n      ticks.push({value});\r\n    }\r\n    return ticks;\r\n  }\r\n  getLabelForValue(value) {\r\n    const me = this;\r\n    const labels = me.getLabels();\r\n    if (value >= 0 && value < labels.length) {\r\n      return labels[value];\r\n    }\r\n    return value;\r\n  }\r\n  configure() {\r\n    const me = this;\r\n    super.configure();\r\n    if (!me.isHorizontal()) {\r\n      me._reversePixels = !me._reversePixels;\r\n    }\r\n  }\r\n  getPixelForValue(value) {\r\n    const me = this;\r\n    if (typeof value !== 'number') {\r\n      value = me.parse(value);\r\n    }\r\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\r\n  }\r\n  getPixelForTick(index) {\r\n    const me = this;\r\n    const ticks = me.ticks;\r\n    if (index < 0 || index > ticks.length - 1) {\r\n      return null;\r\n    }\r\n    return me.getPixelForValue(ticks[index].value);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const me = this;\r\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\r\n  }\r\n  getBasePixel() {\r\n    return this.bottom;\r\n  }\r\n}\r\nCategoryScale.id = 'category';\r\nCategoryScale.defaults = {\r\n  ticks: {\r\n    callback: CategoryScale.prototype.getLabelForValue\r\n  }\r\n};\r\n\r\nfunction generateTicks$1(generationOptions, dataRange) {\r\n  const ticks = [];\r\n  const MIN_SPACING = 1e-14;\r\n  const {step, min, max, precision, count, maxTicks, maxDigits, horizontal} = generationOptions;\r\n  const unit = step || 1;\r\n  const maxSpaces = maxTicks - 1;\r\n  const {min: rmin, max: rmax} = dataRange;\r\n  const minDefined = !isNullOrUndef(min);\r\n  const maxDefined = !isNullOrUndef(max);\r\n  const countDefined = !isNullOrUndef(count);\r\n  const minSpacing = (rmax - rmin) / maxDigits;\r\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\r\n  let factor, niceMin, niceMax, numSpaces;\r\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\r\n    return [{value: rmin}, {value: rmax}];\r\n  }\r\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\r\n  if (numSpaces > maxSpaces) {\r\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\r\n  }\r\n  if (!isNullOrUndef(precision)) {\r\n    factor = Math.pow(10, precision);\r\n    spacing = Math.ceil(spacing * factor) / factor;\r\n  }\r\n  niceMin = Math.floor(rmin / spacing) * spacing;\r\n  niceMax = Math.ceil(rmax / spacing) * spacing;\r\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\r\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\r\n    spacing = (max - min) / numSpaces;\r\n    niceMin = min;\r\n    niceMax = max;\r\n  } else if (countDefined) {\r\n    niceMin = minDefined ? min : niceMin;\r\n    niceMax = maxDefined ? max : niceMax;\r\n    numSpaces = count - 1;\r\n    spacing = (niceMax - niceMin) / numSpaces;\r\n  } else {\r\n    numSpaces = (niceMax - niceMin) / spacing;\r\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n      numSpaces = Math.round(numSpaces);\r\n    } else {\r\n      numSpaces = Math.ceil(numSpaces);\r\n    }\r\n  }\r\n  factor = Math.pow(10, isNullOrUndef(precision) ? _decimalPlaces(spacing) : precision);\r\n  niceMin = Math.round(niceMin * factor) / factor;\r\n  niceMax = Math.round(niceMax * factor) / factor;\r\n  let j = 0;\r\n  if (minDefined) {\r\n    ticks.push({value: min});\r\n    if (niceMin <= min) {\r\n      j++;\r\n    }\r\n    if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, minSpacing * (horizontal ? ('' + min).length : 1))) {\r\n      j++;\r\n    }\r\n  }\r\n  for (; j < numSpaces; ++j) {\r\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\r\n  }\r\n  if (maxDefined) {\r\n    if (almostEquals(ticks[ticks.length - 1].value, max, minSpacing * (horizontal ? ('' + max).length : 1))) {\r\n      ticks[ticks.length - 1].value = max;\r\n    } else {\r\n      ticks.push({value: max});\r\n    }\r\n  } else {\r\n    ticks.push({value: niceMax});\r\n  }\r\n  return ticks;\r\n}\r\nclass LinearScaleBase extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.start = undefined;\r\n    this.end = undefined;\r\n    this._startValue = undefined;\r\n    this._endValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    if (isNullOrUndef(raw)) {\r\n      return null;\r\n    }\r\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\r\n      return null;\r\n    }\r\n    return +raw;\r\n  }\r\n  handleTickRangeOptions() {\r\n    const me = this;\r\n    const {beginAtZero, stacked} = me.options;\r\n    const {minDefined, maxDefined} = me.getUserBounds();\r\n    let {min, max} = me;\r\n    const setMin = v => (min = minDefined ? min : v);\r\n    const setMax = v => (max = maxDefined ? max : v);\r\n    if (beginAtZero || stacked) {\r\n      const minSign = sign(min);\r\n      const maxSign = sign(max);\r\n      if (minSign < 0 && maxSign < 0) {\r\n        setMax(0);\r\n      } else if (minSign > 0 && maxSign > 0) {\r\n        setMin(0);\r\n      }\r\n    }\r\n    if (min === max) {\r\n      setMax(max + 1);\r\n      if (!beginAtZero) {\r\n        setMin(min - 1);\r\n      }\r\n    }\r\n    me.min = min;\r\n    me.max = max;\r\n  }\r\n  getTickLimit() {\r\n    const me = this;\r\n    const tickOpts = me.options.ticks;\r\n    let {maxTicksLimit, stepSize} = tickOpts;\r\n    let maxTicks;\r\n    if (stepSize) {\r\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\r\n    } else {\r\n      maxTicks = me.computeTickLimit();\r\n      maxTicksLimit = maxTicksLimit || 11;\r\n    }\r\n    if (maxTicksLimit) {\r\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\r\n    }\r\n    return maxTicks;\r\n  }\r\n  computeTickLimit() {\r\n    return Number.POSITIVE_INFINITY;\r\n  }\r\n  buildTicks() {\r\n    const me = this;\r\n    const opts = me.options;\r\n    const tickOpts = opts.ticks;\r\n    let maxTicks = me.getTickLimit();\r\n    maxTicks = Math.max(2, maxTicks);\r\n    const numericGeneratorOptions = {\r\n      maxTicks,\r\n      min: opts.min,\r\n      max: opts.max,\r\n      precision: tickOpts.precision,\r\n      step: tickOpts.stepSize,\r\n      count: tickOpts.count,\r\n      maxDigits: me._maxDigits(),\r\n      horizontal: me.isHorizontal()\r\n    };\r\n    const dataRange = me._range || me;\r\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\r\n    if (opts.bounds === 'ticks') {\r\n      _setMinAndMaxByKey(ticks, me, 'value');\r\n    }\r\n    if (opts.reverse) {\r\n      ticks.reverse();\r\n      me.start = me.max;\r\n      me.end = me.min;\r\n    } else {\r\n      me.start = me.min;\r\n      me.end = me.max;\r\n    }\r\n    return ticks;\r\n  }\r\n  configure() {\r\n    const me = this;\r\n    const ticks = me.ticks;\r\n    let start = me.min;\r\n    let end = me.max;\r\n    super.configure();\r\n    if (me.options.offset && ticks.length) {\r\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\r\n      start -= offset;\r\n      end += offset;\r\n    }\r\n    me._startValue = start;\r\n    me._endValue = end;\r\n    me._valueRange = end - start;\r\n  }\r\n  getLabelForValue(value) {\r\n    return formatNumber(value, this.chart.options.locale);\r\n  }\r\n}\r\n\r\nclass LinearScale extends LinearScaleBase {\r\n  determineDataLimits() {\r\n    const me = this;\r\n    const {min, max} = me.getMinMax(true);\r\n    me.min = isNumberFinite(min) ? min : 0;\r\n    me.max = isNumberFinite(max) ? max : 1;\r\n    me.handleTickRangeOptions();\r\n  }\r\n  computeTickLimit() {\r\n    const me = this;\r\n    if (me.isHorizontal()) {\r\n      return Math.ceil(me.width / 40);\r\n    }\r\n    const tickFont = me._resolveTickFontOptions(0);\r\n    return Math.ceil(me.height / tickFont.lineHeight);\r\n  }\r\n  getPixelForValue(value) {\r\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\r\n  }\r\n}\r\nLinearScale.id = 'linear';\r\nLinearScale.defaults = {\r\n  ticks: {\r\n    callback: Ticks.formatters.numeric\r\n  }\r\n};\r\n\r\nfunction isMajor(tickVal) {\r\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\r\n  return remain === 1;\r\n}\r\nfunction generateTicks(generationOptions, dataRange) {\r\n  const endExp = Math.floor(log10(dataRange.max));\r\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\r\n  const ticks = [];\r\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\r\n  let exp = Math.floor(log10(tickVal));\r\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\r\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\r\n  do {\r\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\r\n    ++significand;\r\n    if (significand === 10) {\r\n      significand = 1;\r\n      ++exp;\r\n      precision = exp >= 0 ? 1 : precision;\r\n    }\r\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\r\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\r\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\r\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\r\n  return ticks;\r\n}\r\nclass LogarithmicScale extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.start = undefined;\r\n    this.end = undefined;\r\n    this._startValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\r\n    if (value === 0) {\r\n      this._zero = true;\r\n      return undefined;\r\n    }\r\n    return isNumberFinite(value) && value > 0 ? value : null;\r\n  }\r\n  determineDataLimits() {\r\n    const me = this;\r\n    const {min, max} = me.getMinMax(true);\r\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\r\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\r\n    if (me.options.beginAtZero) {\r\n      me._zero = true;\r\n    }\r\n    me.handleTickRangeOptions();\r\n  }\r\n  handleTickRangeOptions() {\r\n    const me = this;\r\n    const {minDefined, maxDefined} = me.getUserBounds();\r\n    let min = me.min;\r\n    let max = me.max;\r\n    const setMin = v => (min = minDefined ? min : v);\r\n    const setMax = v => (max = maxDefined ? max : v);\r\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\r\n    if (min === max) {\r\n      if (min <= 0) {\r\n        setMin(1);\r\n        setMax(10);\r\n      } else {\r\n        setMin(exp(min, -1));\r\n        setMax(exp(max, +1));\r\n      }\r\n    }\r\n    if (min <= 0) {\r\n      setMin(exp(max, -1));\r\n    }\r\n    if (max <= 0) {\r\n      setMax(exp(min, +1));\r\n    }\r\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\r\n      setMin(exp(min, -1));\r\n    }\r\n    me.min = min;\r\n    me.max = max;\r\n  }\r\n  buildTicks() {\r\n    const me = this;\r\n    const opts = me.options;\r\n    const generationOptions = {\r\n      min: me._userMin,\r\n      max: me._userMax\r\n    };\r\n    const ticks = generateTicks(generationOptions, me);\r\n    if (opts.bounds === 'ticks') {\r\n      _setMinAndMaxByKey(ticks, me, 'value');\r\n    }\r\n    if (opts.reverse) {\r\n      ticks.reverse();\r\n      me.start = me.max;\r\n      me.end = me.min;\r\n    } else {\r\n      me.start = me.min;\r\n      me.end = me.max;\r\n    }\r\n    return ticks;\r\n  }\r\n  getLabelForValue(value) {\r\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\r\n  }\r\n  configure() {\r\n    const me = this;\r\n    const start = me.min;\r\n    super.configure();\r\n    me._startValue = log10(start);\r\n    me._valueRange = log10(me.max) - log10(start);\r\n  }\r\n  getPixelForValue(value) {\r\n    const me = this;\r\n    if (value === undefined || value === 0) {\r\n      value = me.min;\r\n    }\r\n    if (value === null || isNaN(value)) {\r\n      return NaN;\r\n    }\r\n    return me.getPixelForDecimal(value === me.min\r\n      ? 0\r\n      : (log10(value) - me._startValue) / me._valueRange);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const me = this;\r\n    const decimal = me.getDecimalForPixel(pixel);\r\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\r\n  }\r\n}\r\nLogarithmicScale.id = 'logarithmic';\r\nLogarithmicScale.defaults = {\r\n  ticks: {\r\n    callback: Ticks.formatters.logarithmic,\r\n    major: {\r\n      enabled: true\r\n    }\r\n  }\r\n};\r\n\r\nfunction getTickBackdropHeight(opts) {\r\n  const tickOpts = opts.ticks;\r\n  if (tickOpts.display && opts.display) {\r\n    const padding = toPadding(tickOpts.backdropPadding);\r\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\r\n  }\r\n  return 0;\r\n}\r\nfunction measureLabelSize(ctx, lineHeight, label) {\r\n  if (isArray(label)) {\r\n    return {\r\n      w: _longestText(ctx, ctx.font, label),\r\n      h: label.length * lineHeight\r\n    };\r\n  }\r\n  return {\r\n    w: ctx.measureText(label).width,\r\n    h: lineHeight\r\n  };\r\n}\r\nfunction determineLimits(angle, pos, size, min, max) {\r\n  if (angle === min || angle === max) {\r\n    return {\r\n      start: pos - (size / 2),\r\n      end: pos + (size / 2)\r\n    };\r\n  } else if (angle < min || angle > max) {\r\n    return {\r\n      start: pos - size,\r\n      end: pos\r\n    };\r\n  }\r\n  return {\r\n    start: pos,\r\n    end: pos + size\r\n  };\r\n}\r\nfunction fitWithPointLabels(scale) {\r\n  const furthestLimits = {\r\n    l: 0,\r\n    r: scale.width,\r\n    t: 0,\r\n    b: scale.height - scale.paddingTop\r\n  };\r\n  const furthestAngles = {};\r\n  let i, textSize, pointPosition;\r\n  const labelSizes = [];\r\n  const padding = [];\r\n  const valueCount = scale.getLabels().length;\r\n  for (i = 0; i < valueCount; i++) {\r\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\r\n    padding[i] = opts.padding;\r\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\r\n    const plFont = toFont(opts.font);\r\n    scale.ctx.font = plFont.string;\r\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\r\n    labelSizes[i] = textSize;\r\n    const angleRadians = scale.getIndexAngle(i);\r\n    const angle = toDegrees(angleRadians);\r\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\r\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\r\n    if (hLimits.start < furthestLimits.l) {\r\n      furthestLimits.l = hLimits.start;\r\n      furthestAngles.l = angleRadians;\r\n    }\r\n    if (hLimits.end > furthestLimits.r) {\r\n      furthestLimits.r = hLimits.end;\r\n      furthestAngles.r = angleRadians;\r\n    }\r\n    if (vLimits.start < furthestLimits.t) {\r\n      furthestLimits.t = vLimits.start;\r\n      furthestAngles.t = angleRadians;\r\n    }\r\n    if (vLimits.end > furthestLimits.b) {\r\n      furthestLimits.b = vLimits.end;\r\n      furthestAngles.b = angleRadians;\r\n    }\r\n  }\r\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\r\n  scale._pointLabelItems = [];\r\n  const opts = scale.options;\r\n  const tickBackdropHeight = getTickBackdropHeight(opts);\r\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\r\n  for (i = 0; i < valueCount; i++) {\r\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\r\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\r\n    const angle = toDegrees(scale.getIndexAngle(i));\r\n    const size = labelSizes[i];\r\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\r\n    const textAlign = getTextAlignForAngle(angle);\r\n    let left;\r\n    if (textAlign === 'left') {\r\n      left = pointLabelPosition.x;\r\n    } else if (textAlign === 'center') {\r\n      left = pointLabelPosition.x - (size.w / 2);\r\n    } else {\r\n      left = pointLabelPosition.x - size.w;\r\n    }\r\n    const right = left + size.w;\r\n    scale._pointLabelItems[i] = {\r\n      x: pointLabelPosition.x,\r\n      y: pointLabelPosition.y,\r\n      textAlign,\r\n      left,\r\n      top: pointLabelPosition.y,\r\n      right,\r\n      bottom: pointLabelPosition.y + size.h,\r\n    };\r\n  }\r\n}\r\nfunction getTextAlignForAngle(angle) {\r\n  if (angle === 0 || angle === 180) {\r\n    return 'center';\r\n  } else if (angle < 180) {\r\n    return 'left';\r\n  }\r\n  return 'right';\r\n}\r\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\r\n  if (angle === 90 || angle === 270) {\r\n    position.y -= (textSize.h / 2);\r\n  } else if (angle > 270 || angle < 90) {\r\n    position.y -= textSize.h;\r\n  }\r\n}\r\nfunction drawPointLabels(scale, labelCount) {\r\n  const {ctx, options: {pointLabels}} = scale;\r\n  for (let i = labelCount - 1; i >= 0; i--) {\r\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\r\n    const plFont = toFont(optsAtIndex.font);\r\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\r\n    const {backdropColor} = optsAtIndex;\r\n    if (!isNullOrUndef(backdropColor)) {\r\n      const padding = toPadding(optsAtIndex.backdropPadding);\r\n      ctx.fillStyle = backdropColor;\r\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\r\n    }\r\n    renderText(\r\n      ctx,\r\n      scale._pointLabels[i],\r\n      x,\r\n      y + (plFont.lineHeight / 2),\r\n      plFont,\r\n      {\r\n        color: optsAtIndex.color,\r\n        textAlign: textAlign,\r\n        textBaseline: 'middle'\r\n      }\r\n    );\r\n  }\r\n}\r\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\r\n  const {ctx} = scale;\r\n  if (circular) {\r\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\r\n  } else {\r\n    let pointPosition = scale.getPointPosition(0, radius);\r\n    ctx.moveTo(pointPosition.x, pointPosition.y);\r\n    for (let i = 1; i < labelCount; i++) {\r\n      pointPosition = scale.getPointPosition(i, radius);\r\n      ctx.lineTo(pointPosition.x, pointPosition.y);\r\n    }\r\n  }\r\n}\r\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\r\n  const ctx = scale.ctx;\r\n  const circular = gridLineOpts.circular;\r\n  const {color, lineWidth} = gridLineOpts;\r\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\r\n    return;\r\n  }\r\n  ctx.save();\r\n  ctx.strokeStyle = color;\r\n  ctx.lineWidth = lineWidth;\r\n  ctx.setLineDash(gridLineOpts.borderDash);\r\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\r\n  ctx.beginPath();\r\n  pathRadiusLine(scale, radius, circular, labelCount);\r\n  ctx.closePath();\r\n  ctx.stroke();\r\n  ctx.restore();\r\n}\r\nfunction numberOrZero(param) {\r\n  return isNumber(param) ? param : 0;\r\n}\r\nclass RadialLinearScale extends LinearScaleBase {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.xCenter = undefined;\r\n    this.yCenter = undefined;\r\n    this.drawingArea = undefined;\r\n    this._pointLabels = [];\r\n    this._pointLabelItems = [];\r\n  }\r\n  setDimensions() {\r\n    const me = this;\r\n    me.width = me.maxWidth;\r\n    me.height = me.maxHeight;\r\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\r\n    me.xCenter = Math.floor(me.width / 2);\r\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\r\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\r\n  }\r\n  determineDataLimits() {\r\n    const me = this;\r\n    const {min, max} = me.getMinMax(false);\r\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\r\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\r\n    me.handleTickRangeOptions();\r\n  }\r\n  computeTickLimit() {\r\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\r\n  }\r\n  generateTickLabels(ticks) {\r\n    const me = this;\r\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\r\n    me._pointLabels = me.getLabels().map((value, index) => {\r\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\r\n      return label || label === 0 ? label : '';\r\n    });\r\n  }\r\n  fit() {\r\n    const me = this;\r\n    const opts = me.options;\r\n    if (opts.display && opts.pointLabels.display) {\r\n      fitWithPointLabels(me);\r\n    } else {\r\n      me.setCenterPoint(0, 0, 0, 0);\r\n    }\r\n  }\r\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\r\n    const me = this;\r\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\r\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\r\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\r\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\r\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\r\n    radiusReductionRight = numberOrZero(radiusReductionRight);\r\n    radiusReductionTop = numberOrZero(radiusReductionTop);\r\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\r\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\r\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\r\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\r\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\r\n  }\r\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\r\n    const me = this;\r\n    const maxRight = me.width - rightMovement - me.drawingArea;\r\n    const maxLeft = leftMovement + me.drawingArea;\r\n    const maxTop = topMovement + me.drawingArea;\r\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\r\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\r\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\r\n  }\r\n  getIndexAngle(index) {\r\n    const angleMultiplier = TAU / this.getLabels().length;\r\n    const startAngle = this.options.startAngle || 0;\r\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\r\n  }\r\n  getDistanceFromCenterForValue(value) {\r\n    const me = this;\r\n    if (isNullOrUndef(value)) {\r\n      return NaN;\r\n    }\r\n    const scalingFactor = me.drawingArea / (me.max - me.min);\r\n    if (me.options.reverse) {\r\n      return (me.max - value) * scalingFactor;\r\n    }\r\n    return (value - me.min) * scalingFactor;\r\n  }\r\n  getValueForDistanceFromCenter(distance) {\r\n    if (isNullOrUndef(distance)) {\r\n      return NaN;\r\n    }\r\n    const me = this;\r\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\r\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\r\n  }\r\n  getPointPosition(index, distanceFromCenter) {\r\n    const me = this;\r\n    const angle = me.getIndexAngle(index) - HALF_PI;\r\n    return {\r\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\r\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\r\n      angle\r\n    };\r\n  }\r\n  getPointPositionForValue(index, value) {\r\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\r\n  }\r\n  getBasePosition(index) {\r\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\r\n  }\r\n  getPointLabelPosition(index) {\r\n    const {left, top, right, bottom} = this._pointLabelItems[index];\r\n    return {\r\n      left,\r\n      top,\r\n      right,\r\n      bottom,\r\n    };\r\n  }\r\n  drawBackground() {\r\n    const me = this;\r\n    const {backgroundColor, grid: {circular}} = me.options;\r\n    if (backgroundColor) {\r\n      const ctx = me.ctx;\r\n      ctx.save();\r\n      ctx.beginPath();\r\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\r\n      ctx.closePath();\r\n      ctx.fillStyle = backgroundColor;\r\n      ctx.fill();\r\n      ctx.restore();\r\n    }\r\n  }\r\n  drawGrid() {\r\n    const me = this;\r\n    const ctx = me.ctx;\r\n    const opts = me.options;\r\n    const {angleLines, grid} = opts;\r\n    const labelCount = me.getLabels().length;\r\n    let i, offset, position;\r\n    if (opts.pointLabels.display) {\r\n      drawPointLabels(me, labelCount);\r\n    }\r\n    if (grid.display) {\r\n      me.ticks.forEach((tick, index) => {\r\n        if (index !== 0) {\r\n          offset = me.getDistanceFromCenterForValue(tick.value);\r\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\r\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\r\n        }\r\n      });\r\n    }\r\n    if (angleLines.display) {\r\n      ctx.save();\r\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\r\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\r\n        const {color, lineWidth} = optsAtIndex;\r\n        if (!lineWidth || !color) {\r\n          continue;\r\n        }\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.strokeStyle = color;\r\n        ctx.setLineDash(optsAtIndex.borderDash);\r\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\r\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\r\n        position = me.getPointPosition(i, offset);\r\n        ctx.beginPath();\r\n        ctx.moveTo(me.xCenter, me.yCenter);\r\n        ctx.lineTo(position.x, position.y);\r\n        ctx.stroke();\r\n      }\r\n      ctx.restore();\r\n    }\r\n  }\r\n  drawBorder() {}\r\n  drawLabels() {\r\n    const me = this;\r\n    const ctx = me.ctx;\r\n    const opts = me.options;\r\n    const tickOpts = opts.ticks;\r\n    if (!tickOpts.display) {\r\n      return;\r\n    }\r\n    const startAngle = me.getIndexAngle(0);\r\n    let offset, width;\r\n    ctx.save();\r\n    ctx.translate(me.xCenter, me.yCenter);\r\n    ctx.rotate(startAngle);\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    me.ticks.forEach((tick, index) => {\r\n      if (index === 0 && !opts.reverse) {\r\n        return;\r\n      }\r\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\r\n      const tickFont = toFont(optsAtIndex.font);\r\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\r\n      if (optsAtIndex.showLabelBackdrop) {\r\n        width = ctx.measureText(tick.label).width;\r\n        ctx.fillStyle = optsAtIndex.backdropColor;\r\n        const padding = toPadding(optsAtIndex.backdropPadding);\r\n        ctx.fillRect(\r\n          -width / 2 - padding.left,\r\n          -offset - tickFont.size / 2 - padding.top,\r\n          width + padding.width,\r\n          tickFont.size + padding.height\r\n        );\r\n      }\r\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\r\n        color: optsAtIndex.color,\r\n      });\r\n    });\r\n    ctx.restore();\r\n  }\r\n  drawTitle() {}\r\n}\r\nRadialLinearScale.id = 'radialLinear';\r\nRadialLinearScale.defaults = {\r\n  display: true,\r\n  animate: true,\r\n  position: 'chartArea',\r\n  angleLines: {\r\n    display: true,\r\n    lineWidth: 1,\r\n    borderDash: [],\r\n    borderDashOffset: 0.0\r\n  },\r\n  grid: {\r\n    circular: false\r\n  },\r\n  startAngle: 0,\r\n  ticks: {\r\n    showLabelBackdrop: true,\r\n    callback: Ticks.formatters.numeric\r\n  },\r\n  pointLabels: {\r\n    backdropColor: undefined,\r\n    backdropPadding: 2,\r\n    display: true,\r\n    font: {\r\n      size: 10\r\n    },\r\n    callback(label) {\r\n      return label;\r\n    },\r\n    padding: 5\r\n  }\r\n};\r\nRadialLinearScale.defaultRoutes = {\r\n  'angleLines.color': 'borderColor',\r\n  'pointLabels.color': 'color',\r\n  'ticks.color': 'color'\r\n};\r\nRadialLinearScale.descriptors = {\r\n  angleLines: {\r\n    _fallback: 'grid'\r\n  }\r\n};\r\n\r\nconst INTERVALS = {\r\n  millisecond: {common: true, size: 1, steps: 1000},\r\n  second: {common: true, size: 1000, steps: 60},\r\n  minute: {common: true, size: 60000, steps: 60},\r\n  hour: {common: true, size: 3600000, steps: 24},\r\n  day: {common: true, size: 86400000, steps: 30},\r\n  week: {common: false, size: 604800000, steps: 4},\r\n  month: {common: true, size: 2.628e9, steps: 12},\r\n  quarter: {common: false, size: 7.884e9, steps: 4},\r\n  year: {common: true, size: 3.154e10}\r\n};\r\nconst UNITS = (Object.keys(INTERVALS));\r\nfunction sorter(a, b) {\r\n  return a - b;\r\n}\r\nfunction parse(scale, input) {\r\n  if (isNullOrUndef(input)) {\r\n    return null;\r\n  }\r\n  const adapter = scale._adapter;\r\n  const {parser, round, isoWeekday} = scale._parseOpts;\r\n  let value = input;\r\n  if (typeof parser === 'function') {\r\n    value = parser(value);\r\n  }\r\n  if (!isNumberFinite(value)) {\r\n    value = typeof parser === 'string'\r\n      ? adapter.parse(value, parser)\r\n      : adapter.parse(value);\r\n  }\r\n  if (value === null) {\r\n    return null;\r\n  }\r\n  if (round) {\r\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\r\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\r\n      : adapter.startOf(value, round);\r\n  }\r\n  return +value;\r\n}\r\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\r\n  const ilen = UNITS.length;\r\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\r\n    const interval = INTERVALS[UNITS[i]];\r\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\r\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\r\n      return UNITS[i];\r\n    }\r\n  }\r\n  return UNITS[ilen - 1];\r\n}\r\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\r\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\r\n    const unit = UNITS[i];\r\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\r\n      return unit;\r\n    }\r\n  }\r\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\r\n}\r\nfunction determineMajorUnit(unit) {\r\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\r\n    if (INTERVALS[UNITS[i]].common) {\r\n      return UNITS[i];\r\n    }\r\n  }\r\n}\r\nfunction addTick(ticks, time, timestamps) {\r\n  if (!timestamps) {\r\n    ticks[time] = true;\r\n  } else if (timestamps.length) {\r\n    const {lo, hi} = _lookup(timestamps, time);\r\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\r\n    ticks[timestamp] = true;\r\n  }\r\n}\r\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\r\n  const adapter = scale._adapter;\r\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\r\n  const last = ticks[ticks.length - 1].value;\r\n  let major, index;\r\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\r\n    index = map[major];\r\n    if (index >= 0) {\r\n      ticks[index].major = true;\r\n    }\r\n  }\r\n  return ticks;\r\n}\r\nfunction ticksFromTimestamps(scale, values, majorUnit) {\r\n  const ticks = [];\r\n  const map = {};\r\n  const ilen = values.length;\r\n  let i, value;\r\n  for (i = 0; i < ilen; ++i) {\r\n    value = values[i];\r\n    map[value] = i;\r\n    ticks.push({\r\n      value,\r\n      major: false\r\n    });\r\n  }\r\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\r\n}\r\nclass TimeScale extends Scale {\r\n  constructor(props) {\r\n    super(props);\r\n    this._cache = {\r\n      data: [],\r\n      labels: [],\r\n      all: []\r\n    };\r\n    this._unit = 'day';\r\n    this._majorUnit = undefined;\r\n    this._offsets = {};\r\n    this._normalized = false;\r\n    this._parseOpts = undefined;\r\n  }\r\n  init(scaleOpts, opts) {\r\n    const time = scaleOpts.time || (scaleOpts.time = {});\r\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\r\n    mergeIf(time.displayFormats, adapter.formats());\r\n    this._parseOpts = {\r\n      parser: time.parser,\r\n      round: time.round,\r\n      isoWeekday: time.isoWeekday\r\n    };\r\n    super.init(scaleOpts);\r\n    this._normalized = opts.normalized;\r\n  }\r\n  parse(raw, index) {\r\n    if (raw === undefined) {\r\n      return null;\r\n    }\r\n    return parse(this, raw);\r\n  }\r\n  beforeLayout() {\r\n    super.beforeLayout();\r\n    this._cache = {\r\n      data: [],\r\n      labels: [],\r\n      all: []\r\n    };\r\n  }\r\n  determineDataLimits() {\r\n    const me = this;\r\n    const options = me.options;\r\n    const adapter = me._adapter;\r\n    const unit = options.time.unit || 'day';\r\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\r\n    function _applyBounds(bounds) {\r\n      if (!minDefined && !isNaN(bounds.min)) {\r\n        min = Math.min(min, bounds.min);\r\n      }\r\n      if (!maxDefined && !isNaN(bounds.max)) {\r\n        max = Math.max(max, bounds.max);\r\n      }\r\n    }\r\n    if (!minDefined || !maxDefined) {\r\n      _applyBounds(me._getLabelBounds());\r\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\r\n        _applyBounds(me.getMinMax(false));\r\n      }\r\n    }\r\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\r\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\r\n    me.min = Math.min(min, max - 1);\r\n    me.max = Math.max(min + 1, max);\r\n  }\r\n  _getLabelBounds() {\r\n    const arr = this.getLabelTimestamps();\r\n    let min = Number.POSITIVE_INFINITY;\r\n    let max = Number.NEGATIVE_INFINITY;\r\n    if (arr.length) {\r\n      min = arr[0];\r\n      max = arr[arr.length - 1];\r\n    }\r\n    return {min, max};\r\n  }\r\n  buildTicks() {\r\n    const me = this;\r\n    const options = me.options;\r\n    const timeOpts = options.time;\r\n    const tickOpts = options.ticks;\r\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\r\n    if (options.bounds === 'ticks' && timestamps.length) {\r\n      me.min = me._userMin || timestamps[0];\r\n      me.max = me._userMax || timestamps[timestamps.length - 1];\r\n    }\r\n    const min = me.min;\r\n    const max = me.max;\r\n    const ticks = _filterBetween(timestamps, min, max);\r\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\r\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\r\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\r\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\r\n      : determineMajorUnit(me._unit);\r\n    me.initOffsets(timestamps);\r\n    if (options.reverse) {\r\n      ticks.reverse();\r\n    }\r\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\r\n  }\r\n  initOffsets(timestamps) {\r\n    const me = this;\r\n    let start = 0;\r\n    let end = 0;\r\n    let first, last;\r\n    if (me.options.offset && timestamps.length) {\r\n      first = me.getDecimalForValue(timestamps[0]);\r\n      if (timestamps.length === 1) {\r\n        start = 1 - first;\r\n      } else {\r\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\r\n      }\r\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\r\n      if (timestamps.length === 1) {\r\n        end = last;\r\n      } else {\r\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\r\n      }\r\n    }\r\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\r\n    start = _limitValue(start, 0, limit);\r\n    end = _limitValue(end, 0, limit);\r\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\r\n  }\r\n  _generate() {\r\n    const me = this;\r\n    const adapter = me._adapter;\r\n    const min = me.min;\r\n    const max = me.max;\r\n    const options = me.options;\r\n    const timeOpts = options.time;\r\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\r\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\r\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\r\n    const hasWeekday = isNumber(weekday) || weekday === true;\r\n    const ticks = {};\r\n    let first = min;\r\n    let time, count;\r\n    if (hasWeekday) {\r\n      first = +adapter.startOf(first, 'isoWeek', weekday);\r\n    }\r\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\r\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\r\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\r\n    }\r\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\r\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\r\n      addTick(ticks, time, timestamps);\r\n    }\r\n    if (time === max || options.bounds === 'ticks' || count === 1) {\r\n      addTick(ticks, time, timestamps);\r\n    }\r\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\r\n  }\r\n  getLabelForValue(value) {\r\n    const me = this;\r\n    const adapter = me._adapter;\r\n    const timeOpts = me.options.time;\r\n    if (timeOpts.tooltipFormat) {\r\n      return adapter.format(value, timeOpts.tooltipFormat);\r\n    }\r\n    return adapter.format(value, timeOpts.displayFormats.datetime);\r\n  }\r\n  _tickFormatFunction(time, index, ticks, format) {\r\n    const me = this;\r\n    const options = me.options;\r\n    const formats = options.time.displayFormats;\r\n    const unit = me._unit;\r\n    const majorUnit = me._majorUnit;\r\n    const minorFormat = unit && formats[unit];\r\n    const majorFormat = majorUnit && formats[majorUnit];\r\n    const tick = ticks[index];\r\n    const major = majorUnit && majorFormat && tick && tick.major;\r\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\r\n    const formatter = options.ticks.callback;\r\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\r\n  }\r\n  generateTickLabels(ticks) {\r\n    let i, ilen, tick;\r\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n      tick = ticks[i];\r\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\r\n    }\r\n  }\r\n  getDecimalForValue(value) {\r\n    const me = this;\r\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\r\n  }\r\n  getPixelForValue(value) {\r\n    const me = this;\r\n    const offsets = me._offsets;\r\n    const pos = me.getDecimalForValue(value);\r\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const me = this;\r\n    const offsets = me._offsets;\r\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n    return me.min + pos * (me.max - me.min);\r\n  }\r\n  _getLabelSize(label) {\r\n    const me = this;\r\n    const ticksOpts = me.options.ticks;\r\n    const tickLabelWidth = me.ctx.measureText(label).width;\r\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\r\n    const cosRotation = Math.cos(angle);\r\n    const sinRotation = Math.sin(angle);\r\n    const tickFontSize = me._resolveTickFontOptions(0).size;\r\n    return {\r\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\r\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\r\n    };\r\n  }\r\n  _getLabelCapacity(exampleTime) {\r\n    const me = this;\r\n    const timeOpts = me.options.time;\r\n    const displayFormats = timeOpts.displayFormats;\r\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\r\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\r\n    const size = me._getLabelSize(exampleLabel);\r\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\r\n    return capacity > 0 ? capacity : 1;\r\n  }\r\n  getDataTimestamps() {\r\n    const me = this;\r\n    let timestamps = me._cache.data || [];\r\n    let i, ilen;\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const metas = me.getMatchingVisibleMetas();\r\n    if (me._normalized && metas.length) {\r\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\r\n    }\r\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\r\n    }\r\n    return (me._cache.data = me.normalize(timestamps));\r\n  }\r\n  getLabelTimestamps() {\r\n    const me = this;\r\n    const timestamps = me._cache.labels || [];\r\n    let i, ilen;\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const labels = me.getLabels();\r\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n      timestamps.push(parse(me, labels[i]));\r\n    }\r\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\r\n  }\r\n  normalize(values) {\r\n    return _arrayUnique(values.sort(sorter));\r\n  }\r\n}\r\nTimeScale.id = 'time';\r\nTimeScale.defaults = {\r\n  bounds: 'data',\r\n  adapters: {},\r\n  time: {\r\n    parser: false,\r\n    unit: false,\r\n    round: false,\r\n    isoWeekday: false,\r\n    minUnit: 'millisecond',\r\n    displayFormats: {}\r\n  },\r\n  ticks: {\r\n    source: 'auto',\r\n    major: {\r\n      enabled: false\r\n    }\r\n  }\r\n};\r\n\r\nfunction interpolate(table, val, reverse) {\r\n  let prevSource, nextSource, prevTarget, nextTarget;\r\n  if (reverse) {\r\n    prevSource = Math.floor(val);\r\n    nextSource = Math.ceil(val);\r\n    prevTarget = table[prevSource];\r\n    nextTarget = table[nextSource];\r\n  } else {\r\n    const result = _lookup(table, val);\r\n    prevTarget = result.lo;\r\n    nextTarget = result.hi;\r\n    prevSource = table[prevTarget];\r\n    nextSource = table[nextTarget];\r\n  }\r\n  const span = nextSource - prevSource;\r\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\r\n}\r\nclass TimeSeriesScale extends TimeScale {\r\n  constructor(props) {\r\n    super(props);\r\n    this._table = [];\r\n    this._maxIndex = undefined;\r\n  }\r\n  initOffsets() {\r\n    const me = this;\r\n    const timestamps = me._getTimestampsForTable();\r\n    me._table = me.buildLookupTable(timestamps);\r\n    me._maxIndex = me._table.length - 1;\r\n    super.initOffsets(timestamps);\r\n  }\r\n  buildLookupTable(timestamps) {\r\n    const me = this;\r\n    const {min, max} = me;\r\n    if (!timestamps.length) {\r\n      return [\r\n        {time: min, pos: 0},\r\n        {time: max, pos: 1}\r\n      ];\r\n    }\r\n    const items = [min];\r\n    let i, ilen, curr;\r\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\r\n      curr = timestamps[i];\r\n      if (curr > min && curr < max) {\r\n        items.push(curr);\r\n      }\r\n    }\r\n    items.push(max);\r\n    return items;\r\n  }\r\n  _getTimestampsForTable() {\r\n    const me = this;\r\n    let timestamps = me._cache.all || [];\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const data = me.getDataTimestamps();\r\n    const label = me.getLabelTimestamps();\r\n    if (data.length && label.length) {\r\n      timestamps = me.normalize(data.concat(label));\r\n    } else {\r\n      timestamps = data.length ? data : label;\r\n    }\r\n    timestamps = me._cache.all = timestamps;\r\n    return timestamps;\r\n  }\r\n  getPixelForValue(value, index) {\r\n    const me = this;\r\n    const offsets = me._offsets;\r\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index)\r\n      ? index / me._maxIndex : me.getDecimalForValue(value);\r\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\r\n  }\r\n  getDecimalForValue(value) {\r\n    return interpolate(this._table, value) / this._maxIndex;\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const me = this;\r\n    const offsets = me._offsets;\r\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n    return interpolate(me._table, decimal * this._maxIndex, true);\r\n  }\r\n}\r\nTimeSeriesScale.id = 'timeseries';\r\nTimeSeriesScale.defaults = TimeScale.defaults;\r\n\r\nvar scales = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nCategoryScale: CategoryScale,\r\nLinearScale: LinearScale,\r\nLogarithmicScale: LogarithmicScale,\r\nRadialLinearScale: RadialLinearScale,\r\nTimeScale: TimeScale,\r\nTimeSeriesScale: TimeSeriesScale\r\n});\r\n\r\nconst registerables = [\r\n  controllers,\r\n  elements,\r\n  plugins,\r\n  scales,\r\n];\r\n\r\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\r\n"]},"metadata":{},"sourceType":"module"}