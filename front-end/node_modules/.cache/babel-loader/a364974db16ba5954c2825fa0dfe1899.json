{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimseonjin\\\\Documents\\\\GitHub\\\\HappyHouse-Guide\\\\front-end\\\\src\\\\chatbot\\\\ActionProvider.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ActionProvider {\n  constructor(createChatBotMessage, setStateFunc, createClientMessage) {\n    this.initialQuestion = () => {\n      const message = this.createChatBotMessage(\"더 궁금한 것이 있으신가요 ?\", {\n        widget: \"options\"\n      });\n      this.addMessageToState(message);\n    };\n\n    this.handleNotice = () => {\n      const message = this.createChatBotMessage(\"모집공고\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 57\n      }, this));\n      const message2 = this.createChatBotMessage(\"모집공고 조회를 원하는 단지명 또는 건물명을 입력하세요.\");\n      this.addMessageToState(message);\n      this.addMessageToState(message2);\n    };\n\n    this.answerAddress = () => {\n      const message = this.createChatBotMessage(\"해당주택에 관한 공고문입니다. \");\n      const message2 = this.createChatBotMessage(\"https://apply.lh.or.kr/LH/index.html?gv_url=SIL::CLCC_SIL_0065.xfdl&gv_menuId=1010203&gv_param=CCR_CNNT_SYS_DS_CD:03,PAN_ID:2015122300008358,LCC:Y#MN::CLCC_MN_0010:\");\n      this.addMessageToState(message);\n      this.addMessageToState(message2);\n      this.initialQuestion();\n    };\n\n    this.handleCondition = () => {\n      const message = this.createChatBotMessage(\"입주조건\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 57\n      }, this));\n      const message2 = this.createChatBotMessage(\"신청하고자 하는 유형을 선택해주세요.\", {\n        widget: \"conditions\"\n      });\n      this.addMessageToState(message);\n      this.addMessageToState(message2);\n    };\n\n    this.handleReview = () => {\n      const message = this.createChatBotMessage(\"거주후기\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 57\n      }, this));\n      const message2 = this.createChatBotMessage(\"궁금하신 거주후기의 유형을 선택해주세요.\", {\n        widget: \"reviews\"\n      });\n      this.addMessageToState(message);\n      this.addMessageToState(message2);\n    };\n\n    this.handleFAQ = () => {\n      const message = this.createChatBotMessage(\"자주 묻는 질문\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 61\n      }, this));\n      const message2 = this.createChatBotMessage(\"궁금하신 정보를 선택해주세요.\", {\n        widget: \"faq\"\n      });\n      this.addMessageToState(message);\n      this.addMessageToState(message2);\n    };\n\n    this.studentCondition = () => {\n      const message = this.createChatBotMessage(\"대학생\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 56\n      }, this));\n      const message2 = this.createChatBotMessage(\"대학생 계층의 신청자격에 관한 정보입니다.\", {\n        widget: \"student\",\n        withAvatar: true\n      });\n      this.addMessageToState(message);\n      this.addMessageToState(message2);\n      this.initialQuestion();\n    };\n\n    this.youthCondition = () => {\n      const message = this.createChatBotMessage(\"청년\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 55\n      }, this));\n      const message2 = this.createChatBotMessage(\"청년 계층의 신청자격에 관한 정보입니다.\", {\n        widget: \"youth\",\n        withAvatar: true\n      });\n      this.addMessageToState(message);\n      this.addMessageToState(message2);\n      this.initialQuestion();\n    };\n\n    this.familyCondition = () => {\n      const message = this.createChatBotMessage(\"신혼부부 & 한부모가족\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 65\n      }, this));\n      const message2 = this.createChatBotMessage(\"신혼부부 & 한부모가족 계층의 신청자격에 관한 정보입니다.\", {\n        widget: \"family\",\n        withAvatar: true\n      });\n      this.addMessageToState(message);\n      this.addMessageToState(message2);\n      this.initialQuestion();\n    };\n\n    this.oldCondition = () => {\n      const message = this.createChatBotMessage(\"고령자\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 56\n      }, this));\n      const message2 = this.createChatBotMessage(\"고령자 계층의 신청자격에 관한 정보입니다.\", {\n        widget: \"old\",\n        withAvatar: true\n      });\n      this.addMessageToState(message);\n      this.addMessageToState(message2);\n      this.initialQuestion();\n    };\n\n    this.benefitCondition = () => {\n      const message = this.createChatBotMessage(\"주거급여수급자\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 60\n      }, this));\n      const message2 = this.createChatBotMessage(\"주거급여수급자 계층의 신청자격에 관한 정보입니다.\", {\n        widget: \"benefit\",\n        withAvatar: true\n      });\n      this.addMessageToState(message);\n      this.addMessageToState(message2);\n      this.initialQuestion();\n    };\n\n    this.workerCondition = () => {\n      const message = this.createChatBotMessage(\"산업단지근로자\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 60\n      }, this));\n      const message2 = this.createChatBotMessage(\"산업단지근로자 계층의 신청자격에 관한 정보입니다.\", {\n        widget: \"worker\",\n        withAvatar: true\n      });\n      this.addMessageToState(message);\n      this.addMessageToState(message2);\n      this.initialQuestion();\n    };\n\n    this.newestReviews = () => {};\n\n    this.highstRatedReviews = () => {};\n\n    this.searchRegionReviews = () => {};\n\n    this.applyHouse = () => {\n      const message = this.createChatBotMessage(\"신청\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 55\n      }, this));\n      const message2 = this.createChatBotMessage(\"궁금하신 정보를 클릭해보세요.\", {\n        widget: \"apply\",\n        withAvatar: true\n      });\n      this.addMessageToState(message);\n      this.addMessageToState(message2);\n    };\n\n    this.faqApplyID1 = () => {\n      const message = this.createChatBotMessage(\"신청시기는 언제인가요 ?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 66\n      }, this));\n      const message2 = this.createChatBotMessage(\"행복주택은 지구별 사업시행자(ex. LH공사, SH공사 등)가 다르기 때문에 사업지구별 입주자 모집공고에 따라 진행됩니다. 모집공고는 대략 준공 1년 전에 시행되나, 현장 상황에 따라 달라질 수 있으므로 각 지구별 공고문은 ' 행복주택 블로그 '를 참고하시어 입주 신청을 하시면 됩니다.\");\n      this.addMessageToState(message);\n      this.addMessageToState(message2);\n      this.initialQuestion();\n    };\n\n    this.faqApplyID2 = () => {\n      const message = this.createChatBotMessage(\"신청방법은 어떻게 되나요 ?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 68\n      }, this));\n      const message2 = this.createChatBotMessage(\"‘LH 청약센터’홈페이지에 접속하시면 간편하게 하실 수 있습니다. 상단 메뉴중에서 ‘인터넷청약’의 ‘청약신청-임대주택’을 클릭하면 가능합니다.\");\n      this.addMessageToState(message);\n      this.addMessageToState(message2);\n      this.initialQuestion();\n    };\n\n    this.faqApplyID3 = () => {\n      const message = this.createChatBotMessage(\"선정절차에 대해 궁금해요 !\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 68\n      }, this));\n      const message2 = this.createChatBotMessage(\"1) 사업시행자가 지자체와 협의하여 정한 기준 및 절차에 따라 건설량의 50%의 범위 내에서 우선공급 대상자를 선정합니다. 2) 일반공급 대상자는 사업시행자가 추첨으로 선발합니다. 3) 계층별로 세대수의 20%이상 예비입주자를 선정합니다. 4) 모집 결과 일부 계층이 미달될 경우, 공공주택사업자가 주택유형 등을 고려하여, 타 계층에게 물량을 전환하여 공급할 수 있습니다. 5) 퇴거자가 있을 경우에는 예비입주자 순위에 따라 입주할 수 있고,  예비 입주자가 없을 경우 일반공급 절차에 따라, 입주자를 추가 모집합니다.\");\n      this.addMessageToState(message);\n      this.addMessageToState(message2);\n      this.initialQuestion();\n    };\n\n    this.faqApplyID4 = () => {\n      const message = this.createChatBotMessage(\"중복신청은 가능한가요 ?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 66\n      }, this));\n      const message2 = this.createChatBotMessage(\"중복 신청 할 경우 전부 무효 처리됩니다. 단, 입주자 모집공고일이 다른 경우, 조건에 해당한다면 중복신청이 가능합니다.\");\n      this.addMessageToState(message);\n      this.addMessageToState(message2);\n      this.initialQuestion();\n    };\n\n    this.faqApplyID5 = () => {\n      const message = this.createChatBotMessage(\"대학생인데 청약통장이 없는데 신청이 가능한가요 ?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 80\n      }, this));\n      const message2 = this.createChatBotMessage(\"대학생과 취약 계층은 청약통장이 없어도 입주 신청을 할 수 있습니다. 그 외에는 반드시 주택청약종합저축 가입자여야 합니다. 청약저축 가입자는 저축 납부 횟수나 금액과 관계없이 통장만 있다면 입주 신청을 할 수 있습니다.\");\n      this.addMessageToState(message);\n      this.addMessageToState(message2);\n      this.initialQuestion();\n    };\n\n    this.faqApplyID6 = () => {\n      const message = this.createChatBotMessage(\"다른 지역 행복주택에 신청 가능한가요 ?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 75\n      }, this));\n      const message2 = this.createChatBotMessage(\"가능합니다. 18년도부터 자신이 거주하는 지역에 상관없이 신청 가능합니다. 다만 청약신청은 순위제를 적용하기 때문에 인근 지역 거주자가 더 유리합니다.\");\n      this.addMessageToState(message);\n      this.addMessageToState(message2);\n      this.initialQuestion();\n    };\n\n    this.qualificationRequirement = () => {};\n\n    this.addMessageToState = message => {\n      this.setState(prevState => ({ ...prevState,\n        messages: [...prevState.messages, message]\n      }));\n    };\n\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n    this.createClientMessage = createClientMessage;\n  }\n\n}\n\nexport default ActionProvider;","map":{"version":3,"sources":["C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/src/chatbot/ActionProvider.js"],"names":["ActionProvider","constructor","createChatBotMessage","setStateFunc","createClientMessage","initialQuestion","message","widget","addMessageToState","handleNotice","message2","answerAddress","handleCondition","handleReview","handleFAQ","studentCondition","withAvatar","youthCondition","familyCondition","oldCondition","benefitCondition","workerCondition","newestReviews","highstRatedReviews","searchRegionReviews","applyHouse","faqApplyID1","faqApplyID2","faqApplyID3","faqApplyID4","faqApplyID5","faqApplyID6","qualificationRequirement","setState","prevState","messages"],"mappings":"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","sourcesContent":["class ActionProvider {\r\n    constructor(createChatBotMessage, setStateFunc, createClientMessage) {\r\n      this.createChatBotMessage = createChatBotMessage;\r\n      this.setState = setStateFunc;\r\n      this.createClientMessage = createClientMessage;\r\n    }\r\n    \r\n    initialQuestion = () => {\r\n      const message = this.createChatBotMessage(\"더 궁금한 것이 있으신가요 ?\", { widget: \"options\" });\r\n      this.addMessageToState(message);\r\n    }\r\n    //Options Function\r\n\r\n    handleNotice = () => {\r\n      const message = this.createChatBotMessage(\"모집공고\", <br/>);\r\n      const message2 = this.createChatBotMessage(\r\n        \"모집공고 조회를 원하는 단지명 또는 건물명을 입력하세요.\",\r\n      );\r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n    }\r\n\r\n    answerAddress = () => {\r\n      const message = this.createChatBotMessage(\r\n        \"해당주택에 관한 공고문입니다. \",\r\n      );\r\n      const message2 = this.createChatBotMessage(\r\n        \"https://apply.lh.or.kr/LH/index.html?gv_url=SIL::CLCC_SIL_0065.xfdl&gv_menuId=1010203&gv_param=CCR_CNNT_SYS_DS_CD:03,PAN_ID:2015122300008358,LCC:Y#MN::CLCC_MN_0010:\"\r\n      );\r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    handleCondition = () => {\r\n      const message = this.createChatBotMessage(\"입주조건\", <br/>);\r\n      const message2 = this.createChatBotMessage(\"신청하고자 하는 유형을 선택해주세요.\", { widget: \"conditions\" });\r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n    }\r\n\r\n    handleReview = () => {\r\n      const message = this.createChatBotMessage(\"거주후기\", <br/>);\r\n      const message2 = this.createChatBotMessage(\"궁금하신 거주후기의 유형을 선택해주세요.\", { widget: \"reviews\"});\r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n    }\r\n\r\n    handleFAQ = () => {\r\n      const message = this.createChatBotMessage(\"자주 묻는 질문\", <br/>);\r\n      const message2 = this.createChatBotMessage(\"궁금하신 정보를 선택해주세요.\", { widget: \"faq\"});\r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n    }\r\n\r\n    //Conditions Function\r\n\r\n    studentCondition = () => {\r\n      const message = this.createChatBotMessage(\"대학생\", <br/>);\r\n      const message2 = this.createChatBotMessage(\r\n        \"대학생 계층의 신청자격에 관한 정보입니다.\",\r\n        { widget: \"student\", withAvatar: true }\r\n      );\r\n      \r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    youthCondition = () => {\r\n      const message = this.createChatBotMessage(\"청년\", <br/>);\r\n      const message2 = this.createChatBotMessage(\r\n        \"청년 계층의 신청자격에 관한 정보입니다.\",\r\n        { widget: \"youth\", withAvatar: true }\r\n      );\r\n      \r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    familyCondition = () => {\r\n      const message = this.createChatBotMessage(\"신혼부부 & 한부모가족\", <br/>);\r\n      const message2 = this.createChatBotMessage(\r\n        \"신혼부부 & 한부모가족 계층의 신청자격에 관한 정보입니다.\",\r\n        { widget: \"family\", withAvatar: true }\r\n      );\r\n      \r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    oldCondition = () => {\r\n      const message = this.createChatBotMessage(\"고령자\", <br/>);\r\n      const message2 = this.createChatBotMessage(\r\n        \"고령자 계층의 신청자격에 관한 정보입니다.\",\r\n        { widget: \"old\", withAvatar: true }\r\n      );\r\n      \r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    benefitCondition = () => {\r\n      const message = this.createChatBotMessage(\"주거급여수급자\", <br/>);\r\n      const message2 = this.createChatBotMessage(\r\n        \"주거급여수급자 계층의 신청자격에 관한 정보입니다.\",\r\n        { widget: \"benefit\", withAvatar: true }\r\n      );\r\n      \r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    workerCondition = () => {\r\n      const message = this.createChatBotMessage(\"산업단지근로자\", <br/>);\r\n      const message2 = this.createChatBotMessage(\r\n        \"산업단지근로자 계층의 신청자격에 관한 정보입니다.\",\r\n        { widget: \"worker\", withAvatar: true }\r\n      );\r\n      \r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    //Reviews Function \r\n\r\n    newestReviews = () => {\r\n      \r\n    }\r\n\r\n    highstRatedReviews = () => {\r\n\r\n    }\r\n\r\n    searchRegionReviews = () => {\r\n\r\n    }\r\n\r\n    //FAQ Function\r\n    applyHouse = () => {\r\n      const message = this.createChatBotMessage(\"신청\", <br/>);\r\n      const message2 = this.createChatBotMessage(\r\n        \"궁금하신 정보를 클릭해보세요.\", {widget: \"apply\", withAvatar: true}\r\n      );\r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n    }\r\n\r\n    //FAQ Apply Function\r\n    faqApplyID1 = () => {\r\n      const message = this.createChatBotMessage(\"신청시기는 언제인가요 ?\", <br/>);\r\n      const message2 = this.createChatBotMessage(\r\n        \"행복주택은 지구별 사업시행자(ex. LH공사, SH공사 등)가 다르기 때문에 사업지구별 입주자 모집공고에 따라 진행됩니다. 모집공고는 대략 준공 1년 전에 시행되나, 현장 상황에 따라 달라질 수 있으므로 각 지구별 공고문은 ' 행복주택 블로그 '를 참고하시어 입주 신청을 하시면 됩니다.\"\r\n      );\r\n\r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    faqApplyID2 = () => {\r\n      const message = this.createChatBotMessage(\"신청방법은 어떻게 되나요 ?\", <br/>);\r\n      const message2 = this.createChatBotMessage(\r\n        \"‘LH 청약센터’홈페이지에 접속하시면 간편하게 하실 수 있습니다. 상단 메뉴중에서 ‘인터넷청약’의 ‘청약신청-임대주택’을 클릭하면 가능합니다.\"\r\n      );\r\n\r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    faqApplyID3 = () => {\r\n      const message = this.createChatBotMessage(\"선정절차에 대해 궁금해요 !\", <br/> );\r\n      const message2 = this.createChatBotMessage(\r\n        \"1) 사업시행자가 지자체와 협의하여 정한 기준 및 절차에 따라 건설량의 50%의 범위 내에서 우선공급 대상자를 선정합니다. 2) 일반공급 대상자는 사업시행자가 추첨으로 선발합니다. 3) 계층별로 세대수의 20%이상 예비입주자를 선정합니다. 4) 모집 결과 일부 계층이 미달될 경우, 공공주택사업자가 주택유형 등을 고려하여, 타 계층에게 물량을 전환하여 공급할 수 있습니다. 5) 퇴거자가 있을 경우에는 예비입주자 순위에 따라 입주할 수 있고,  예비 입주자가 없을 경우 일반공급 절차에 따라, 입주자를 추가 모집합니다.\"\r\n      );\r\n\r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    faqApplyID4 = () => {\r\n      const message = this.createChatBotMessage(\"중복신청은 가능한가요 ?\", <br/> );\r\n      const message2 = this.createChatBotMessage(\r\n        \"중복 신청 할 경우 전부 무효 처리됩니다. 단, 입주자 모집공고일이 다른 경우, 조건에 해당한다면 중복신청이 가능합니다.\"\r\n      );\r\n\r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    faqApplyID5 = () => {\r\n      const message = this.createChatBotMessage(\"대학생인데 청약통장이 없는데 신청이 가능한가요 ?\", <br/> );\r\n      const message2 = this.createChatBotMessage(\r\n        \"대학생과 취약 계층은 청약통장이 없어도 입주 신청을 할 수 있습니다. 그 외에는 반드시 주택청약종합저축 가입자여야 합니다. 청약저축 가입자는 저축 납부 횟수나 금액과 관계없이 통장만 있다면 입주 신청을 할 수 있습니다.\"\r\n      );\r\n\r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    faqApplyID6 = () => {\r\n      const message = this.createChatBotMessage(\"다른 지역 행복주택에 신청 가능한가요 ?\", <br/> );\r\n      const message2 = this.createChatBotMessage(\r\n        \"가능합니다. 18년도부터 자신이 거주하는 지역에 상관없이 신청 가능합니다. 다만 청약신청은 순위제를 적용하기 때문에 인근 지역 거주자가 더 유리합니다.\"\r\n      );\r\n\r\n      this.addMessageToState(message);\r\n      this.addMessageToState(message2);\r\n\r\n      this.initialQuestion();\r\n    }\r\n\r\n    //FAQ Qualification Recuirement\r\n\r\n    qualificationRequirement = () => {\r\n      \r\n    }\r\n\r\n    addMessageToState = (message) => {\r\n      this.setState((prevState) => ({\r\n        ...prevState,\r\n        messages: [...prevState.messages, message],\r\n      }))\r\n    }\r\n  }\r\n  \r\n  export default ActionProvider;"]},"metadata":{},"sourceType":"module"}