{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uBC15\\uC131\\uD604\\\\Documents\\\\GitHub\\\\HappyHouse-Guide\\\\front-end\\\\src\\\\source\\\\ReadCommunity.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import '../Css/test.css'; import DeleteReply from './DeleteReply.js'; import\n// CreateReply from './CreateReply.js';\n\nimport $ from 'jquery';\nimport { Button, Col, Container, Form, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Modal, ModalHeader, Row, Table } from 'reactstrap';\nimport axios from 'axios';\nimport './community.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReadCommunity(props) {\n  _s();\n\n  const [_id, set_id] = useState(props._id);\n  const [userId, setUserId] = useState(props);\n  const [writeDate, setWriteDate] = useState();\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const [reply, setReply] = useState(); //댓글작성내용\n\n  const [modalInput, setModalInput] = useState(\"default\");\n  const [tableData, setTableData] = useState(); //댓글 목록 조회\n\n  const [isReadOnly, setIsReadOnly] = useState(true); //댓글 수정활성화\n\n  const [modalCreateReply, setModalCreateReply] = useState(false);\n  const [modalDeleteReply, setModalDeleteReply] = useState(false);\n\n  const toggleCreateReply = () => setModalCreateReply(!modalCreateReply);\n\n  const toggleDeleteReply = () => setModalDeleteReply(!modalDeleteReply);\n\n  let replyArrays = []; //댓글 목록 테이블\n\n  function setReplyArrays(newArrays) {\n    replyArrays = newArrays;\n  }\n\n  const handleReplyOnChange = e => {\n    e.preventDefault();\n    setReply(e.target.value);\n  };\n\n  const handleUserIdOnChange = e => {\n    e.preventDefault();\n    setUserId(e.target.value);\n  };\n\n  const handleWriteDateOnChange = e => {\n    e.preventDefault();\n    setWriteDate(e.target.value);\n  };\n\n  const handleTitleOnChange = e => {\n    e.preventDefault();\n    setTitle(e.target.value);\n  };\n\n  const handleContentOnChange = e => {\n    e.preventDefault();\n    setContent(e.target.value);\n  };\n\n  const toggleIsReadOnly = () => {\n    setIsReadOnly(!isReadOnly);\n  };\n\n  const readCommunity = () => {\n    var form = {\n      _id: localStorage.getItem(\"community_id\")\n    };\n    axios.post('/happyhouse/communities/:id', form).then(res => {\n      console.log(res.data);\n      console.log(res.data.communitys.userId);\n      setUserId(res.data.communitys.userId);\n      setWriteDate(res.data.communitys.writeDate);\n      setTitle(res.data.communitys.title);\n      setContent(res.data.communitys.content);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const updateCommunity = () => {\n    var form = new FormData();\n    form.append(\"title\", title);\n    form.append(\"content\", content);\n    axios.post('/community/updatePost', form, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }).then(response => {\n      window.location.reload();\n    });\n  };\n\n  const deleteCommunity = () => {\n    axios.delete('/happyhouse/communities/:id', {\n      data: {\n        _id: _id\n      }\n    }).then(res => {\n      alert(\"게시글이 삭제 완료\");\n      window.location.reload();\n      props.toggle();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  $(function () {\n    $(\".deleteReply\").off(\"click\");\n    $(\".deleteReplyButton\").on(\"click\", function () {\n      var postButton = $(this);\n      var tr = postButton.parent().parent();\n      var td = tr.children();\n      console.log(\"row데이터 : \" + tr.eq(0).text());\n      setModalInput(td.eq(0).val());\n      toggleDeleteReply();\n    });\n    $(\".createReply\").off(\"click\");\n    $(\".createReplyButton\").on(\"click\", function () {\n      var postButton = $(this);\n      var tr = postButton.parent().parent();\n      var td = tr.children();\n      console.log(\"row데이터 : \" + tr.eq(0).text());\n      setModalInput(td.eq(0).val());\n      toggleCreateReply();\n    });\n  });\n  useEffect(() => {\n    var form = new FormData();\n    form.append(\"id\", localStorage.getItem('id'));\n    readCommunity(); //게시글 상세조회\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createCommunity\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"community-title\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"title\",\n          children: \"\\uCEE4\\uBBA4\\uB2C8\\uD2F0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        class: \"houseInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            id: \"header\",\n            children: \"\\uC81C\\uBAA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              name: \"userId\",\n              onChange: handleTitleOnChange,\n              value: title,\n              readOnly: isReadOnly\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            id: \"header\",\n            children: \"\\uB0B4\\uC6A9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"content\",\n            cols: \"50\",\n            rows: \"10\",\n            onChange: handleContentOnChange,\n            value: content,\n            readOnly: isReadOnly\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"community-upload\",\n          onClick: toggleIsReadOnly,\n          style: {\n            float: 'left'\n          },\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"community-upload\",\n          onClick: updateCommunity,\n          style: {\n            float: 'left'\n          },\n          children: \"\\uC644\\uB8CC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"community-upload\",\n          onClick: deleteCommunity,\n          style: {\n            float: 'right'\n          },\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tableData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ReadCommunity, \"FooCvRZYH15aW2Tb6jB/Q9N1v/Q=\");\n\n_c = ReadCommunity;\nexport default ReadCommunity;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadCommunity\");","map":{"version":3,"sources":["C:/Users/박성현/Documents/GitHub/HappyHouse-Guide/front-end/src/source/ReadCommunity.js"],"names":["React","useEffect","useState","$","Button","Col","Container","Form","FormGroup","Input","InputGroup","InputGroupAddon","InputGroupText","Modal","ModalHeader","Row","Table","axios","ReadCommunity","props","_id","set_id","userId","setUserId","writeDate","setWriteDate","title","setTitle","content","setContent","reply","setReply","modalInput","setModalInput","tableData","setTableData","isReadOnly","setIsReadOnly","modalCreateReply","setModalCreateReply","modalDeleteReply","setModalDeleteReply","toggleCreateReply","toggleDeleteReply","replyArrays","setReplyArrays","newArrays","handleReplyOnChange","e","preventDefault","target","value","handleUserIdOnChange","handleWriteDateOnChange","handleTitleOnChange","handleContentOnChange","toggleIsReadOnly","readCommunity","form","localStorage","getItem","post","then","res","console","log","data","communitys","catch","error","updateCommunity","FormData","append","headers","response","window","location","reload","deleteCommunity","delete","alert","toggle","off","on","postButton","tr","parent","td","children","eq","text","val","float"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\n// import '../Css/test.css'; import DeleteReply from './DeleteReply.js'; import\r\n// CreateReply from './CreateReply.js';\r\nimport $ from 'jquery';\r\nimport {\r\n    Button,\r\n    Col,\r\n    Container,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    Modal,\r\n    ModalHeader,\r\n    Row,\r\n    Table\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport './community.css'\r\nfunction ReadCommunity(props) {\r\n\r\n    const [_id, set_id] = useState(props._id);\r\n    const [userId, setUserId] = useState(props);\r\n    const [writeDate, setWriteDate] = useState();\r\n    const [title, setTitle] = useState();\r\n    const [content, setContent] = useState();\r\n\r\n    const [reply, setReply] = useState(); //댓글작성내용\r\n    const [modalInput, setModalInput] = useState(\"default\");\r\n    const [tableData, setTableData] = useState(); //댓글 목록 조회\r\n    const [isReadOnly, setIsReadOnly] = useState(true); //댓글 수정활성화\r\n\r\n    const [modalCreateReply, setModalCreateReply] = useState(false);\r\n    const [modalDeleteReply, setModalDeleteReply] = useState(false);\r\n\r\n    const toggleCreateReply = () => setModalCreateReply(!modalCreateReply);\r\n    const toggleDeleteReply = () => setModalDeleteReply(!modalDeleteReply);\r\n\r\n    let replyArrays = []; //댓글 목록 테이블\r\n    function setReplyArrays(newArrays) {\r\n        replyArrays = newArrays;\r\n    }\r\n   \r\n\r\n    const handleReplyOnChange = (e) => {\r\n        e.preventDefault();\r\n        setReply(e.target.value);\r\n    }\r\n    const handleUserIdOnChange = (e) => {\r\n        e.preventDefault();\r\n        setUserId(e.target.value);\r\n    }\r\n    const handleWriteDateOnChange = (e) => {\r\n        e.preventDefault();\r\n        setWriteDate(e.target.value);\r\n    }\r\n    const handleTitleOnChange = (e) => {\r\n        e.preventDefault();\r\n        setTitle(e.target.value);\r\n    }\r\n    const handleContentOnChange = (e) => {\r\n        e.preventDefault();\r\n        setContent(e.target.value);\r\n    }\r\n\r\n    const toggleIsReadOnly = () => {\r\n        setIsReadOnly(!isReadOnly);\r\n    }\r\n\r\n    const readCommunity = () => {\r\n\r\n        var form = {\r\n            _id: localStorage.getItem(\"community_id\")\r\n        };\r\n        axios\r\n            .post('/happyhouse/communities/:id', form)\r\n            .then((res) => {\r\n\r\n                console.log(res.data);\r\n                console.log(res.data.communitys.userId);\r\n                setUserId(res.data.communitys.userId);\r\n                setWriteDate(res.data.communitys.writeDate);\r\n                setTitle(res.data.communitys.title);\r\n                setContent(res.data.communitys.content);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        }\r\n\r\n   \r\n    const updateCommunity = () => {\r\n        var form = new FormData;\r\n\r\n      \r\n        form.append(\"title\", title);\r\n        form.append(\"content\", content);\r\n\r\n        axios\r\n            .post('/community/updatePost', form, {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data'\r\n                }\r\n            })\r\n            .then((response) => {\r\n                window\r\n                    .location\r\n                    .reload();\r\n            })\r\n    }\r\n    const deleteCommunity = () => {\r\n      \r\n \r\n        axios\r\n            .delete('/happyhouse/communities/:id',{\r\n                data:{\r\n                    _id: _id\r\n                }\r\n            })\r\n            .then((res) => {\r\n           \r\n                alert(\"게시글이 삭제 완료\")\r\n                window.location.reload();\r\n                props.toggle()\r\n                \r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        }\r\n  \r\n\r\n    \r\n\r\n    $(function () {\r\n\r\n        $(\".deleteReply\").off(\"click\")\r\n        $(\".deleteReplyButton\").on(\"click\", function () {\r\n\r\n            var postButton = $(this);\r\n\r\n            var tr = postButton\r\n                .parent()\r\n                .parent();\r\n            var td = tr.children();\r\n            console.log(\"row데이터 : \" + tr.eq(0).text());\r\n            setModalInput(td.eq(0).val());\r\n            toggleDeleteReply();\r\n        })\r\n\r\n        $(\".createReply\").off(\"click\")\r\n        $(\".createReplyButton\").on(\"click\", function () {\r\n\r\n            var postButton = $(this);\r\n\r\n            var tr = postButton\r\n                .parent()\r\n                .parent();\r\n            var td = tr.children();\r\n            console.log(\"row데이터 : \" + tr.eq(0).text());\r\n            setModalInput(td.eq(0).val());\r\n            toggleCreateReply();\r\n        })\r\n    })\r\n    useEffect(() => {\r\n        var form = new FormData;\r\n        form.append(\"id\", localStorage.getItem('id'));\r\n        readCommunity(); //게시글 상세조회\r\n       \r\n    }, [])\r\n    return (\r\n        <div className=\"container\">   \r\n \r\n            <div className=\"createCommunity\">\r\n                <div className=\"community-title\">\r\n                    <div id=\"title\">커뮤니티</div>\r\n                </div>\r\n                            <table class=\"houseInfo\">\r\n                                <tr>\r\n                                    <td id=\"header\">제목</td>\r\n                                    <h4>\r\n                                        <Input\r\n                                            name=\"userId\"\r\n                                            onChange={handleTitleOnChange}\r\n                                            value={title}\r\n                                            readOnly={isReadOnly}></Input>\r\n                                    </h4>\r\n                                </tr>\r\n                              \r\n                                <tr>\r\n                                    <td id=\"header\">내용</td>\r\n                                    <Input\r\n                                        name=\"content\"\r\n                                        cols=\"50\"\r\n                                        rows=\"10\"\r\n                                        onChange={handleContentOnChange}\r\n                                        value={content}\r\n                                        readOnly={isReadOnly}></Input>\r\n                                </tr>\r\n\r\n                            </table>\r\n\r\n                            <div className=\"button-container\">\r\n                            <button id=\"community-upload\" onClick={toggleIsReadOnly}style={{float: 'left'}}>수정</button>\r\n                            <button id=\"community-upload\" onClick={updateCommunity}style={{float: 'left'}}>완료</button>\r\n\r\n                            <button id=\"community-upload\" onClick={deleteCommunity}style={{float: 'right'}}>삭제</button>\r\n                            </div>\r\n               </div>\r\n                \r\n                          \r\n                <Row>\r\n                    {/*댓글 목록 테이블*/}\r\n                    <Col>\r\n                        <Table>\r\n                            {/* <thead className=\"text-nowrap\">\r\n                                <tr>\r\n                                    <th>댓글</th>\r\n                                    <th>작성자</th>\r\n                                    <th>내용</th>\r\n                                </tr>\r\n                            </thead> */}\r\n                            <tbody >\r\n                                {tableData}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n                {/* <Modal isOpen={modalCreateReply}>\r\n                        <ModalHeader toggle={toggleCreateReply}>댓글 등록</ModalHeader>\r\n\r\n                         <CreateReply postId={modalInput}></CreateReply>\r\n            </Modal>\r\n            <Modal isOpen={modalDeleteReply}>\r\n                        <ModalHeader toggle={toggleDeleteReply}>댓글 삭제</ModalHeader>\r\n\r\n                         <DeleteReply postId={modalInput}></DeleteReply>\r\n            </Modal> */\r\n                }\r\n                {/* <InputGroup>\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>댓글</InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                        type=\"textarea\"\r\n                        name=\"content\"\r\n                        placeholder=\"댓글\"\r\n                        onChange={handleReplyOnChange}\r\n                        value={reply}></Input>\r\n                </InputGroup>\r\n                <Button\r\n                    className=\"btn btn-primary btn-block w-25\"\r\n                    color={\"primary\"}\r\n                    style={{\r\n                        float: 'right'\r\n                    }}\r\n                    type=\"post\"\r\n                    onClick={createReply}>{\"댓글작성\"}</Button> */}\r\n            </div>\r\n    \r\n    )\r\n}\r\nexport default ReadCommunity;\r\n"]},"metadata":{},"sourceType":"module"}