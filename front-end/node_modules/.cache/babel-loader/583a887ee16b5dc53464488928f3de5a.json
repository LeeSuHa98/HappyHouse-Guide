{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimseonjin\\\\Documents\\\\GitHub\\\\HappyHouse-Guide\\\\front-end\\\\src\\\\source\\\\Menubar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport './Menubar.css';\nimport logo from '../Image/houseLogo.png';\nimport { Modal, ModalBody } from 'reactstrap';\nimport Login from './Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Menubar = props => {\n  _s();\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"userToken\")) {\n      localStorage.setItem(\"userToken\", \"bearer: \");\n    }\n\n    if (localStorage.getItem(\"userToken\") === \"bearer: \") {\n      setIsLogin(false);\n    } else {\n      setIsLogin(true);\n    }\n  });\n  const [isLogin, setIsLogin] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const [userId, setUserID] = useState(\" \");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"menu-bar-wrap\": true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        onClick: () => {\n          window.location.href = '/';\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"logo\",\n          src: logo,\n          className: \"logoImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menuGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reviewButton\",\n          onClick: () => {\n            window.location.href = '/reviews';\n          },\n          children: \"REVIEW\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"communityButton\",\n          onClick: () => {\n            window.location.href = '/communities';\n          },\n          children: \"COMMUNITY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginButton\",\n          children: isLogin === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              alert(\"안녕히 가세요!\");\n              localStorage.removeItem(\"userToken\");\n              setIsLogin(false);\n              window.location.replace('/');\n            },\n            children: [\" \", userId, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              toggle();\n              setIsLogin(true);\n            },\n            children: \" LOGIN / JOIN \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      toggle: toggle,\n      children: /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          toggle: toggle,\n          setUserID: setUserID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Menubar, \"QupySM7qnECtZ2sBpcEeJA/o7j8=\");\n\n_c = Menubar;\nexport default Menubar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menubar\");","map":{"version":3,"sources":["C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/src/source/Menubar.js"],"names":["React","useState","useEffect","Route","Switch","Link","logo","Modal","ModalBody","Login","Menubar","props","localStorage","getItem","setItem","setIsLogin","isLogin","isOpen","setIsOpen","toggle","userId","setUserID","window","location","href","alert","removeItem","replace"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Route, Switch, Link} from 'react-router-dom';\r\n\r\nimport './Menubar.css';\r\nimport logo from '../Image/houseLogo.png'\r\n\r\nimport{\r\n    Modal,\r\n    ModalBody\r\n} from 'reactstrap';\r\nimport Login from'./Login'\r\n\r\n\r\nconst Menubar = (props) => {\r\n    \r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"userToken\")){\r\n            localStorage.setItem(\"userToken\", \"bearer: \");\r\n        }\r\n        \r\n        if(localStorage.getItem(\"userToken\") === \"bearer: \"){\r\n            setIsLogin(false);\r\n        }else{\r\n            setIsLogin(true);\r\n        }\r\n    });\r\n    \r\n    const [isLogin, setIsLogin] = useState(false);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const toggle = () => setIsOpen(!isOpen);\r\n    const [userId, setUserID] = useState(\" \")\r\n\r\n    return (\r\n            <div menu-bar-wrap>\r\n                <div className=\"menu-bar\">\r\n                    <div className=\"logo\" onClick = {()=>{window.location.href ='/'}}>\r\n                        <img alt='logo' src={logo} className=\"logoImage\" />\r\n                    </div>\r\n\r\n                    <div className=\"menuGroup\">\r\n                        <div className=\"reviewButton\" onClick = {()=>{window.location.href ='/reviews'}}>\r\n                            REVIEW\r\n                        </div>\r\n                        <div className=\"communityButton\" onClick = {()=>{window.location.href ='/communities'}}>\r\n                            COMMUNITY\r\n                        </div>\r\n                        <div className=\"loginButton\">\r\n                        {\r\n                            isLogin === true?\r\n                            <div onClick = {() => {alert(\"안녕히 가세요!\"); localStorage.removeItem(\"userToken\"); setIsLogin(false); window.location.replace('/')}}> {userId} </div>\r\n                            : \r\n                            <div onClick = {() => {toggle(); setIsLogin(true)}}> LOGIN / JOIN </div>\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                        \r\n                <Modal isOpen={isOpen} toggle={toggle} >\r\n                    <ModalBody>\r\n                        <Login toggle={toggle} setUserID = {setUserID}/>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Menubar;\r\n"]},"metadata":{},"sourceType":"module"}