{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimseonjin\\\\Documents\\\\GitHub\\\\HappyHouse-Guide\\\\front-end\\\\src\\\\source\\\\MapMarkers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport numeral from 'numeral';\nimport './Menubar.css';\nimport image from '../Image/apartment_.png';\nimport SearchBar from './SearchBar';\nimport SideBar from './SideBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MapMarkers = props => {\n  _s();\n\n  const [item, setItem] = useState([]);\n  const [houseDetail, setHouseDetail] = useState({\n    danjiCode: \"\",\n    danjiName: \"\",\n    address: \"\",\n    competeDate: \"\",\n    houseHoldNum: \"\",\n    houseType: \"\",\n    bassRentDeposit: \"\",\n    bassMonthlyRentCharge: \"\",\n    bassConversionDeposit: \"\",\n    suplyPrivateArea: \"\",\n    suplyCommuseArea: \"\",\n    insttName: \"\",\n    convenience: \"\",\n    safety: \"\",\n    medical: \"\"\n  });\n  const [center, setCenter] = useState();\n  const [zoom, setZoom] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  useEffect(() => {\n    setCenter({\n      lat: 37.5,\n      lng: 127\n    });\n    setZoom(15);\n    loadAsyncData();\n  }, []);\n\n  const loadAsyncData = () => {\n    let url = `/happyhouse/houseInfos`;\n    axios.get(url).then(({\n      data\n    }) => {\n      data = data.houseInfoList;\n      setItem(data);\n    });\n  };\n\n  const displayMarkers = () => {\n    return item.map(data => /*#__PURE__*/_jsxDEV(Marker, {\n      className: \"marker-image\",\n      position: {\n        lat: data.lat,\n        lng: data.lng\n      },\n      icon: {\n        url: image,\n        scaledSize: new props.google.maps.Size(40, 40) //labelOrigin: new props.google.maps.Size(50, 115),\n\n      },\n      label: {\n        text: `${numeral(data.houseHoldNum).format('0,0')}세대`,\n        fontSize: \"13px\",\n        fontFamily: \"Do Hyeon\",\n        color: \"white\",\n        className: 'label'\n      },\n      onClick: () => {\n        if (isOpen !== true) {\n          toggle();\n        }\n\n        ;\n        setHouseDetail(data);\n      }\n    }, data._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this));\n  };\n\n  const mapStyles = {\n    width: '100%',\n    height: '100%'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Map, {\n        google: props.google,\n        zoom: zoom,\n        style: mapStyles,\n        center: center,\n        children: [displayMarkers(), /*#__PURE__*/_jsxDEV(SearchBar, {\n          setCenter: setCenter,\n          setZoom: setZoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), isOpen === true ? /*#__PURE__*/_jsxDEV(SideBar, {\n        houseDetail: houseDetail,\n        toggle: () => toggle()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MapMarkers, \"qHVCU76jbWfmsY46yMOlbNkfd48=\");\n\n_c = MapMarkers;\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCvljxDf0P6qv5kvTo5WIYRlWU3VZn3hks\"\n})(MapMarkers);\n\nvar _c;\n\n$RefreshReg$(_c, \"MapMarkers\");","map":{"version":3,"sources":["C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/src/source/MapMarkers.js"],"names":["React","useState","useEffect","axios","Map","GoogleApiWrapper","Marker","numeral","image","SearchBar","SideBar","MapMarkers","props","item","setItem","houseDetail","setHouseDetail","danjiCode","danjiName","address","competeDate","houseHoldNum","houseType","bassRentDeposit","bassMonthlyRentCharge","bassConversionDeposit","suplyPrivateArea","suplyCommuseArea","insttName","convenience","safety","medical","center","setCenter","zoom","setZoom","isOpen","setIsOpen","toggle","lat","lng","loadAsyncData","url","get","then","data","houseInfoList","displayMarkers","map","scaledSize","google","maps","Size","text","format","fontSize","fontFamily","color","className","_id","mapStyles","width","height","apiKey"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react'\r\nimport numeral from 'numeral'\r\nimport './Menubar.css'\r\n\r\nimport image from '../Image/apartment_.png'\r\n\r\nimport SearchBar from './SearchBar'\r\nimport SideBar from './SideBar';\r\n\r\nexport const MapMarkers = (props) => { \r\n    const [item, setItem] = useState([]);\r\n    const [houseDetail, setHouseDetail] = useState({\r\n      danjiCode: \"\",\r\n      danjiName: \"\",\r\n      address: \"\",\r\n      competeDate: \"\",\r\n      houseHoldNum: \"\",\r\n      houseType: \"\",\r\n      bassRentDeposit: \"\",\r\n      bassMonthlyRentCharge: \"\",\r\n      bassConversionDeposit: \"\",\r\n      suplyPrivateArea: \"\",\r\n      suplyCommuseArea: \"\",\r\n      insttName: \"\",\r\n      convenience: \"\",\r\n      safety: \"\",\r\n      medical: \"\"\r\n    });\r\n    const [center, setCenter] = useState()\r\n    const [zoom, setZoom] = useState()\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    useEffect(() => {\r\n      setCenter({lat: 37.5, lng: 127})\r\n      setZoom(15)\r\n      loadAsyncData();\r\n    }, [])\r\n\r\n    const loadAsyncData = () => {\r\n        let url = `/happyhouse/houseInfos`;\r\n\r\n        axios.get(url).then(({data}) => {\r\n            data = data.houseInfoList\r\n            setItem(data);\r\n        })\r\n    }\r\n\r\n    const displayMarkers = () => {\r\n      return item.map((data) => (\r\n          <Marker className='marker-image' \r\n          key={data._id} \r\n          position={{lat:data.lat, lng:data.lng}}\r\n          icon={{\r\n            url: image,\r\n            scaledSize: new props.google.maps.Size(40,40),\r\n            //labelOrigin: new props.google.maps.Size(50, 115),\r\n          }}\r\n          label={{\r\n            text: `${numeral(data.houseHoldNum).format('0,0')}세대`,\r\n            fontSize: \"13px\",\r\n            fontFamily: \"Do Hyeon\",\r\n            color: \"white\",\r\n            className: 'label'\r\n          }}\r\n          onClick = {()=>{\r\n            if (isOpen !== true){toggle()};\r\n          setHouseDetail(data);}}\r\n          />\r\n          ))\r\n  }\r\n\r\n    const mapStyles = {\r\n        width: '100%',\r\n        height: '100%',\r\n    };\r\n\r\n\r\n    return(\r\n    <div>\r\n      <React.Fragment>\r\n        <Map google={props.google} zoom={zoom} style={mapStyles} center={center}>\r\n            {displayMarkers()}\r\n          <SearchBar setCenter={setCenter} setZoom={setZoom} />\r\n        </Map>\r\n        {\r\n          isOpen === true?\r\n          <SideBar houseDetail = {houseDetail} toggle = {()=>toggle()}></SideBar>\r\n          :\r\n          <div></div>\r\n        }\r\n      </React.Fragment>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: \"AIzaSyCvljxDf0P6qv5kvTo5WIYRlWU3VZn3hks\"\r\n})(MapMarkers);"]},"metadata":{},"sourceType":"module"}