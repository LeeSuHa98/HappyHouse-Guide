{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimseonjin\\\\Documents\\\\GitHub\\\\HappyHouse-Guide\\\\front-end\\\\src\\\\source\\\\MapMarkers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport Moment from 'react-moment';\nimport numeral from 'numeral';\nimport './Sidebar.css';\nimport './Menubar.css';\nimport image from '../Image/apartment_.png';\nimport cancel from '../Image/cancel.png';\nimport like1 from '../Image/like.png';\nimport like2 from '../Image/like-toggle.png';\nimport star1 from '../Image/star1.PNG';\nimport star2 from '../Image/star2.PNG';\nimport room4 from '../Image/room4.PNG';\nimport SearchBar from './SearchBar';\nimport HappyChart from './Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MapMarkers = props => {\n  _s();\n\n  const [item, setItem] = useState([]);\n  const [houseDetail, setHouseDetail] = useState([]);\n  const [type, setType] = useState([]);\n  const [selectedIndex, setSelectedIndex] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const [center, setCenter] = useState();\n  const [zoom, setZoom] = useState();\n  let houseDto = class {\n    constructor(typeName, suplyCommuseArea, suplyPrivateArea, bassRentDeposit, bassConversionDeposit, bassMonthlyRentCharge, danjiCode) {\n      this.typeName = typeName;\n      this.suplyCommuseArea = suplyCommuseArea;\n      this.suplyPrivateArea = suplyPrivateArea;\n      this.bassRentDeposit = bassRentDeposit;\n      this.bassConversionDeposit = bassConversionDeposit;\n      this.bassMonthlyRentCharge = bassMonthlyRentCharge;\n      this.danjiCode = danjiCode;\n    }\n\n    toString() {\n      return `${this.typeName}`;\n    }\n\n    getTypeName() {\n      return this.typeName;\n    }\n\n    getSuplyCommuseArea() {\n      return this.suplyCommuseArea;\n    }\n\n    getSuplyPrivateArea() {\n      return this.suplyPrivateArea;\n    }\n\n    getBassRentDeposit() {\n      return this.bassRentDeposit;\n    }\n\n    getBassConversionDeposit() {\n      return this.bassConversionDeposit;\n    }\n\n    getBassMonthlyRentCharge() {\n      return this.bassMonthlyRentCharge;\n    }\n\n    toDetail() {\n      return `\n         공공 공용 면적 : ${this.suplyCommuseArea}\n         개인 전용 면적 : ${this.suplyPrivateArea}\n         기본 전환보증금 : ${this.bassRentDeposit}\n         기본 임대보증금 : ${this.bassMonthlyRentCharge}\n         월 임대료 : ${this.bassConversionDeposit}\n         단지코드 : ${this.danjiCode}\n        `;\n    }\n\n  };\n  useEffect(() => {\n    setCenter({\n      lat: 37.5,\n      lng: 127\n    });\n    setZoom(15);\n    loadAsyncData();\n  }, []);\n\n  const loadAsyncData = () => {\n    let url = `https://joj5opq81m.execute-api.us-east-2.amazonaws.com/happyhouse/houseInfos`;\n    axios.get(url).then(({\n      data\n    }) => {\n      data = data.houseInfoList;\n      setItem(data);\n      setType(data.reduce((infoData, curHouse) => {\n        (infoData[curHouse.address] = infoData[curHouse.address] || []).push(new houseDto(curHouse.typeName, curHouse.suplyCommuseArea, curHouse.suplyPrivateArea, curHouse.bassRentDeposit, curHouse.bassConversionDeposit, curHouse.bassMonthlyRentCharge, curHouse.danjiCode));\n        return infoData;\n      }, {}));\n    });\n  };\n\n  const displayMarkers = () => {\n    return item.map(data => /*#__PURE__*/_jsxDEV(Marker, {\n      className: \"marker-image\",\n      position: {\n        lat: data.lat,\n        lng: data.lng\n      },\n      icon: {\n        url: image,\n        scaledSize: new props.google.maps.Size(40, 40) //labelOrigin: new props.google.maps.Size(50, 115),\n\n      },\n      label: {\n        text: `${numeral(data.houseHoldNum).format('0,0')}세대`,\n        fontSize: \"13px\",\n        fontFamily: \"Do Hyeon\",\n        color: \"white\",\n        className: 'label'\n      }\n    }, data._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this));\n  };\n\n  const mapStyles = {\n    width: '100%',\n    height: '100%'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        google: props.google,\n        zoom: zoom,\n        style: mapStyles,\n        center: center,\n        children: [displayMarkers(), /*#__PURE__*/_jsxDEV(SearchBar, {\n          setCenter: setCenter,\n          setZoom: setZoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MapMarkers, \"z3WOZCHC3QVEvGdqWS3uoRZ/EAc=\");\n\n_c = MapMarkers;\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCvljxDf0P6qv5kvTo5WIYRlWU3VZn3hks\"\n})(MapMarkers);\n\nvar _c;\n\n$RefreshReg$(_c, \"MapMarkers\");","map":{"version":3,"sources":["C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/src/source/MapMarkers.js"],"names":["React","useState","useEffect","axios","Map","GoogleApiWrapper","Marker","Moment","numeral","image","cancel","like1","like2","star1","star2","room4","SearchBar","HappyChart","MapMarkers","props","item","setItem","houseDetail","setHouseDetail","type","setType","selectedIndex","setSelectedIndex","isOpen","setIsOpen","toggle","center","setCenter","zoom","setZoom","houseDto","constructor","typeName","suplyCommuseArea","suplyPrivateArea","bassRentDeposit","bassConversionDeposit","bassMonthlyRentCharge","danjiCode","toString","getTypeName","getSuplyCommuseArea","getSuplyPrivateArea","getBassRentDeposit","getBassConversionDeposit","getBassMonthlyRentCharge","toDetail","lat","lng","loadAsyncData","url","get","then","data","houseInfoList","reduce","infoData","curHouse","address","push","displayMarkers","map","scaledSize","google","maps","Size","text","houseHoldNum","format","fontSize","fontFamily","color","className","_id","mapStyles","width","height","apiKey"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react'\r\nimport Moment from 'react-moment'\r\nimport numeral from 'numeral'\r\nimport './Sidebar.css'\r\nimport './Menubar.css'\r\n\r\nimport image from '../Image/apartment_.png'\r\nimport cancel from '../Image/cancel.png'\r\nimport like1 from '../Image/like.png'\r\nimport like2 from '../Image/like-toggle.png'\r\nimport star1 from '../Image/star1.PNG'\r\nimport star2 from '../Image/star2.PNG'\r\nimport room4 from '../Image/room4.PNG'\r\n\r\nimport SearchBar from './SearchBar'\r\nimport HappyChart from './Chart';\r\n\r\nexport const MapMarkers = (props) => { \r\n    const [item, setItem] = useState([]);\r\n    const [houseDetail, setHouseDetail] = useState([]);\r\n    const [type, setType] = useState([]);\r\n    const [selectedIndex, setSelectedIndex] = useState(null);\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    const [center, setCenter] = useState()\r\n    const [zoom, setZoom] = useState()\r\n\r\n    let houseDto = class{\r\n      constructor(typeName, suplyCommuseArea, suplyPrivateArea, bassRentDeposit, bassConversionDeposit,bassMonthlyRentCharge, danjiCode){\r\n        this.typeName = typeName;\r\n        this.suplyCommuseArea = suplyCommuseArea;\r\n        this.suplyPrivateArea = suplyPrivateArea;\r\n        this.bassRentDeposit = bassRentDeposit;\r\n        this.bassConversionDeposit = bassConversionDeposit;\r\n        this.bassMonthlyRentCharge = bassMonthlyRentCharge;\r\n        this.danjiCode = danjiCode;\r\n      }\r\n\r\n      toString() {\r\n        return `${this.typeName}`\r\n      }\r\n      \r\n      getTypeName() { return this.typeName; }\r\n      getSuplyCommuseArea() { return this.suplyCommuseArea; }\r\n      getSuplyPrivateArea() { return this.suplyPrivateArea; }\r\n      getBassRentDeposit() { return this.bassRentDeposit; }\r\n      getBassConversionDeposit() {return this.bassConversionDeposit;}\r\n      getBassMonthlyRentCharge() { return this.bassMonthlyRentCharge; }\r\n\r\n      toDetail() {\r\n        return `\r\n         공공 공용 면적 : ${this.suplyCommuseArea}\r\n         개인 전용 면적 : ${this.suplyPrivateArea}\r\n         기본 전환보증금 : ${this.bassRentDeposit}\r\n         기본 임대보증금 : ${this.bassMonthlyRentCharge}\r\n         월 임대료 : ${this.bassConversionDeposit}\r\n         단지코드 : ${this.danjiCode}\r\n        `\r\n      }\r\n    }\r\n\r\n    useEffect(() => {\r\n      setCenter({lat: 37.5, lng: 127})\r\n      setZoom(15)\r\n      loadAsyncData();\r\n    }, [])\r\n\r\n    const loadAsyncData = () => {\r\n        let url = `https://joj5opq81m.execute-api.us-east-2.amazonaws.com/happyhouse/houseInfos`;\r\n\r\n        axios.get(url).then(({data}) => {\r\n            data = data.houseInfoList\r\n            setItem(data);\r\n            setType(data.reduce((infoData, curHouse) => {\r\n              (infoData[curHouse.address] = infoData[curHouse.address] || [])\r\n              .push(new houseDto(curHouse.typeName, curHouse.suplyCommuseArea, curHouse.suplyPrivateArea, curHouse.bassRentDeposit, curHouse.bassConversionDeposit,curHouse.bassMonthlyRentCharge, curHouse.danjiCode));\r\n              return infoData;\r\n            }, {}));\r\n        })\r\n    }\r\n\r\n    const displayMarkers = () => {\r\n      return item.map((data) => (\r\n          <Marker className='marker-image' \r\n          key={data._id} \r\n          position={{lat:data.lat, lng:data.lng}}\r\n          icon={{\r\n            url: image,\r\n            scaledSize: new props.google.maps.Size(40,40),\r\n            //labelOrigin: new props.google.maps.Size(50, 115),\r\n          }}\r\n          label={{\r\n            text: `${numeral(data.houseHoldNum).format('0,0')}세대`,\r\n            fontSize: \"13px\",\r\n            fontFamily: \"Do Hyeon\",\r\n            color: \"white\",\r\n            className: 'label'\r\n          }}\r\n          />\r\n          ))\r\n  }\r\n\r\n    const mapStyles = {\r\n        width: '100%',\r\n        height: '100%',\r\n    };\r\n\r\n    return(\r\n    <div>\r\n    <React.Fragment>\r\n        <Map google={props.google} zoom={zoom} style={mapStyles} center={center}>\r\n            {displayMarkers()}\r\n          <SearchBar setCenter={setCenter} setZoom={setZoom} />\r\n        </Map>\r\n    </React.Fragment></div>\r\n    );\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: \"AIzaSyCvljxDf0P6qv5kvTo5WIYRlWU3VZn3hks\"\r\n})(MapMarkers);"]},"metadata":{},"sourceType":"module"}