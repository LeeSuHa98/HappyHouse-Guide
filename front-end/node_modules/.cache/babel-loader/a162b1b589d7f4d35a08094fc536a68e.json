{"ast":null,"code":"import _objectSpread from \"C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _assertThisInitialized from \"C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _createForOfIteratorHelper from \"C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*!\n * Chart.js v3.2.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as _color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as _getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as renderText, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nvar Animator = /*#__PURE__*/function () {\n  function Animator() {\n    _classCallCheck(this, Animator);\n\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _createClass(Animator, [{\n    key: \"_notify\",\n    value: function _notify(chart, anims, date, type) {\n      var callbacks = anims.listeners[type];\n      var numSteps = anims.duration;\n      callbacks.forEach(function (fn) {\n        return fn({\n          chart: chart,\n          initial: anims.initial,\n          numSteps: numSteps,\n          currentStep: Math.min(date - anims.start, numSteps)\n        });\n      });\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      var me = this;\n\n      if (me._request) {\n        return;\n      }\n\n      me._running = true;\n      me._request = requestAnimFrame.call(window, function () {\n        me._update();\n\n        me._request = null;\n\n        if (me._running) {\n          me._refresh();\n        }\n      });\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      var me = this;\n      var remaining = 0;\n\n      me._charts.forEach(function (anims, chart) {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n\n        var items = anims.items;\n        var i = items.length - 1;\n        var draw = false;\n        var item;\n\n        for (; i >= 0; --i) {\n          item = items[i];\n\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n\n        if (draw) {\n          chart.draw();\n\n          me._notify(chart, anims, date, 'progress');\n        }\n\n        if (!items.length) {\n          anims.running = false;\n\n          me._notify(chart, anims, date, 'complete');\n\n          anims.initial = false;\n        }\n\n        remaining += items.length;\n      });\n\n      me._lastDate = date;\n\n      if (remaining === 0) {\n        me._running = false;\n      }\n    }\n  }, {\n    key: \"_getAnims\",\n    value: function _getAnims(chart) {\n      var charts = this._charts;\n      var anims = charts.get(chart);\n\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n\n      return anims;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n  }, {\n    key: \"add\",\n    value: function add(chart, items) {\n      var _this$_getAnims$items;\n\n      if (!items || !items.length) {\n        return;\n      }\n\n      (_this$_getAnims$items = this._getAnims(chart).items).push.apply(_this$_getAnims$items, _toConsumableArray(items));\n    }\n  }, {\n    key: \"has\",\n    value: function has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n  }, {\n    key: \"start\",\n    value: function start(chart) {\n      var anims = this._charts.get(chart);\n\n      if (!anims) {\n        return;\n      }\n\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce(function (acc, cur) {\n        return Math.max(acc, cur._duration);\n      }, 0);\n\n      this._refresh();\n    }\n  }, {\n    key: \"running\",\n    value: function running(chart) {\n      if (!this._running) {\n        return false;\n      }\n\n      var anims = this._charts.get(chart);\n\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(chart) {\n      var anims = this._charts.get(chart);\n\n      if (!anims || !anims.items.length) {\n        return;\n      }\n\n      var items = anims.items;\n      var i = items.length - 1;\n\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n\n      anims.items = [];\n\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }]);\n\n  return Animator;\n}();\n\nvar animator = new Animator();\nvar transparent = 'transparent';\nvar interpolators = {\n  boolean: function boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color: function color(from, to, factor) {\n    var c0 = _color(from || transparent);\n\n    var c1 = c0.valid && _color(to || transparent);\n\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number: function number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nvar Animation = /*#__PURE__*/function () {\n  function Animation(cfg, target, prop, to) {\n    _classCallCheck(this, Animation);\n\n    var currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    var from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  _createClass(Animation, [{\n    key: \"active\",\n    value: function active() {\n      return this._active;\n    }\n  }, {\n    key: \"update\",\n    value: function update(cfg, to, date) {\n      var me = this;\n\n      if (me._active) {\n        me._notify(false);\n\n        var currentValue = me._target[me._prop];\n        var elapsed = date - me._start;\n        var remain = me._duration - elapsed;\n        me._start = date;\n        me._duration = Math.floor(Math.max(remain, cfg.duration));\n        me._total += elapsed;\n        me._loop = !!cfg.loop;\n        me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        me._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      var me = this;\n\n      if (me._active) {\n        me.tick(Date.now());\n        me._active = false;\n\n        me._notify(false);\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(date) {\n      var me = this;\n      var elapsed = date - me._start;\n      var duration = me._duration;\n      var prop = me._prop;\n      var from = me._from;\n      var loop = me._loop;\n      var to = me._to;\n      var factor;\n      me._active = from !== to && (loop || elapsed < duration);\n\n      if (!me._active) {\n        me._target[prop] = to;\n\n        me._notify(true);\n\n        return;\n      }\n\n      if (elapsed < 0) {\n        me._target[prop] = from;\n        return;\n      }\n\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = me._easing(Math.min(1, Math.max(0, factor)));\n      me._target[prop] = me._fn(from, to, factor);\n    }\n  }, {\n    key: \"wait\",\n    value: function wait() {\n      var promises = this._promises || (this._promises = []);\n      return new Promise(function (res, rej) {\n        promises.push({\n          res: res,\n          rej: rej\n        });\n      });\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(resolved) {\n      var method = resolved ? 'res' : 'rej';\n      var promises = this._promises || [];\n\n      for (var i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }]);\n\n  return Animation;\n}();\n\nvar numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nvar colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nvar animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: function _scriptable(name) {\n    return name !== 'onProgress' && name !== 'onComplete' && name !== 'fn';\n  }\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: function fn(v) {\n          return v | 0;\n        }\n      }\n    }\n  }\n});\n\nvar Animations = /*#__PURE__*/function () {\n  function Animations(chart, config) {\n    _classCallCheck(this, Animations);\n\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  _createClass(Animations, [{\n    key: \"configure\",\n    value: function configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n\n      var animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(function (key) {\n        var cfg = config[key];\n\n        if (!isObject(cfg)) {\n          return;\n        }\n\n        var resolved = {};\n\n        var _iterator = _createForOfIteratorHelper(animationOptions),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var option = _step.value;\n            resolved[option] = cfg[option];\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(function (prop) {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_animateOptions\",\n    value: function _animateOptions(target, values) {\n      var newOptions = values.options;\n      var options = resolveTargetOptions(target, newOptions);\n\n      if (!options) {\n        return [];\n      }\n\n      var animations = this._createAnimations(options, newOptions);\n\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(function () {\n          target.options = newOptions;\n        }, function () {});\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"_createAnimations\",\n    value: function _createAnimations(target, values) {\n      var animatedProps = this._properties;\n      var animations = [];\n      var running = target.$animations || (target.$animations = {});\n      var props = Object.keys(values);\n      var date = Date.now();\n      var i;\n\n      for (i = props.length - 1; i >= 0; --i) {\n        var prop = props[i];\n\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n\n        if (prop === 'options') {\n          animations.push.apply(animations, _toConsumableArray(this._animateOptions(target, values)));\n          continue;\n        }\n\n        var value = values[prop];\n        var animation = running[prop];\n        var cfg = animatedProps.get(prop);\n\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n\n      var animations = this._createAnimations(target, values);\n\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }]);\n\n  return Animations;\n}();\n\nfunction awaitAll(animations, properties) {\n  var running = [];\n  var keys = Object.keys(properties);\n\n  for (var i = 0; i < keys.length; i++) {\n    var anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  var options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  var opts = scale && scale.options || {};\n  var reverse = opts.reverse;\n  var min = opts.min === undefined ? allowedOverflow : 0;\n  var max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  var x = scaleClip(xScale, allowedOverflow);\n  var y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  var t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  var keys = [];\n\n  var metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  var i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction _applyStack(stack, value, dsIndex, options) {\n  var keys = stack.keys;\n  var singleMode = options.mode === 'single';\n  var i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  var keys = Object.keys(data);\n  var adata = new Array(keys.length);\n  var i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  var stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\n\nfunction getUserBounds(scale) {\n  var _scale$getUserBounds = scale.getUserBounds(),\n      min = _scale$getUserBounds.min,\n      max = _scale$getUserBounds.max,\n      minDefined = _scale$getUserBounds.minDefined,\n      maxDefined = _scale$getUserBounds.maxDefined;\n\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  var subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive) {\n  var _iterator2 = _createForOfIteratorHelper(vScale.getMatchingVisibleMetas('bar').reverse()),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var meta = _step2.value;\n      var value = stack[meta.index];\n\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  var chart = controller.chart,\n      meta = controller._cachedMeta;\n  var stacks = chart._stacks || (chart._stacks = {});\n  var iScale = meta.iScale,\n      vScale = meta.vScale,\n      datasetIndex = meta.index;\n  var iAxis = iScale.axis;\n  var vAxis = vScale.axis;\n  var key = getStackKey(iScale, vScale, meta);\n  var ilen = parsed.length;\n  var stack;\n\n  for (var i = 0; i < ilen; ++i) {\n    var item = parsed[i];\n    var index = item[iAxis],\n        value = item[vAxis];\n    var itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  var scales = chart.scales;\n  return Object.keys(scales).filter(function (key) {\n    return scales[key].axis === axis;\n  }).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index: index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element: element,\n    index: index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  items = items || meta._parsed;\n\n  var _iterator3 = _createForOfIteratorHelper(items),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var parsed = _step3.value;\n      var stacks = parsed._stacks;\n\n      if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\n        return;\n      }\n\n      delete stacks[meta.vScale.id][meta.index];\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n}\n\nvar isDirectUpdateMode = function isDirectUpdateMode(mode) {\n  return mode === 'reset' || mode === 'none';\n};\n\nvar cloneIfNotShared = function cloneIfNotShared(cached, shared) {\n  return shared ? cached : Object.assign({}, cached);\n};\n\nvar DatasetController = /*#__PURE__*/function () {\n  function DatasetController(chart, datasetIndex) {\n    _classCallCheck(this, DatasetController);\n\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this.initialize();\n  }\n\n  _createClass(DatasetController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var me = this;\n      var meta = me._cachedMeta;\n      me.configure();\n      me.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      me.addElements();\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    }\n  }, {\n    key: \"linkScales\",\n    value: function linkScales() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me._cachedMeta;\n      var dataset = me.getDataset();\n\n      var chooseId = function chooseId(axis, x, y, r) {\n        return axis === 'x' ? x : axis === 'r' ? r : y;\n      };\n\n      var xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      var yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      var rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      var indexAxis = meta.indexAxis;\n      var iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      var vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = me.getScaleForId(xid);\n      meta.yScale = me.getScaleForId(yid);\n      meta.rScale = me.getScaleForId(rid);\n      meta.iScale = me.getScaleForId(iid);\n      meta.vScale = me.getScaleForId(vid);\n    }\n  }, {\n    key: \"getDataset\",\n    value: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n  }, {\n    key: \"getScaleForId\",\n    value: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n  }, {\n    key: \"_getOtherScale\",\n    value: function _getOtherScale(scale) {\n      var meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._update('reset');\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var meta = this._cachedMeta;\n\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n  }, {\n    key: \"_dataCheck\",\n    value: function _dataCheck() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []);\n\n      if (isObject(data)) {\n        me._data = convertObjectDataToArray(data);\n      } else if (me._data !== data) {\n        if (me._data) {\n          unlistenArrayEvents(me._data, me);\n          clearStacks(me._cachedMeta);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      }\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var me = this;\n      var meta = me._cachedMeta;\n\n      me._dataCheck();\n\n      if (me.datasetElementType) {\n        meta.dataset = new me.datasetElementType();\n      }\n    }\n  }, {\n    key: \"buildOrUpdateElements\",\n    value: function buildOrUpdateElements(resetNewElements) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var dataset = me.getDataset();\n      var stackChanged = false;\n\n      me._dataCheck();\n\n      meta._stacked = isStacked(meta.vScale, meta);\n\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n\n      me._resyncElements(resetNewElements);\n\n      if (stackChanged) {\n        updateStacks(me, meta._parsed);\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var config = me.chart.config;\n      var scopeKeys = config.datasetScopeKeys(me._type);\n      var scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n      me.options = config.createResolver(scopes, me.getContext());\n      me._parsing = me.options.parsing;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var me = this;\n      var meta = me._cachedMeta,\n          data = me._data;\n      var iScale = meta.iScale,\n          _stacked = meta._stacked;\n      var iAxis = iScale.axis;\n      var sorted = start === 0 && count === data.length ? true : meta._sorted;\n      var prev = start > 0 && meta._parsed[start - 1];\n      var i, cur, parsed;\n\n      if (me._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = me.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = me.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = me.parsePrimitiveData(meta, data, start, count);\n        }\n\n        var isNotInOrderComparedToPrev = function isNotInOrderComparedToPrev() {\n          return cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        };\n\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n\n            prev = cur;\n          }\n        }\n\n        meta._sorted = sorted;\n      }\n\n      if (_stacked) {\n        updateStacks(me, parsed);\n      }\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var labels = iScale.getLabels();\n      var singleScale = iScale === vScale;\n      var parsed = new Array(count);\n      var i, ilen, index;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        var _parsed$i;\n\n        index = i + start;\n        parsed[i] = (_parsed$i = {}, _defineProperty(_parsed$i, iAxis, singleScale || iScale.parse(labels[index], index)), _defineProperty(_parsed$i, vAxis, vScale.parse(data[index], index)), _parsed$i);\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var _this$_parsing = this._parsing,\n          _this$_parsing$xAxisK = _this$_parsing.xAxisKey,\n          xAxisKey = _this$_parsing$xAxisK === void 0 ? 'x' : _this$_parsing$xAxisK,\n          _this$_parsing$yAxisK = _this$_parsing.yAxisKey,\n          yAxisKey = _this$_parsing$yAxisK === void 0 ? 'y' : _this$_parsing$yAxisK;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"getParsed\",\n    value: function getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n  }, {\n    key: \"getDataElement\",\n    value: function getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n  }, {\n    key: \"applyStack\",\n    value: function applyStack(scale, parsed, mode) {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var value = parsed[scale.axis];\n      var stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return _applyStack(stack, value, meta.index, {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      var parsedValue = parsed[scale.axis];\n      var value = parsedValue === null ? NaN : parsedValue;\n      var values = stack && parsed._stacks[scale.axis];\n\n      if (stack && values) {\n        stack.values = values;\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n        value = _applyStack(stack, parsedValue, this._cachedMeta.index, {\n          all: true\n        });\n      }\n\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(scale, canStack) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var _parsed = meta._parsed;\n      var sorted = meta._sorted && scale === meta.iScale;\n      var ilen = _parsed.length;\n\n      var otherScale = me._getOtherScale(scale);\n\n      var stack = canStack && meta._stacked && {\n        keys: getSortedDatasetIndices(me.chart, true),\n        values: null\n      };\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n\n      var _getUserBounds = getUserBounds(otherScale),\n          otherMin = _getUserBounds.min,\n          otherMax = _getUserBounds.max;\n\n      var i, value, parsed, otherValue;\n\n      function _skip() {\n        parsed = _parsed[i];\n        value = parsed[scale.axis];\n        otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n      }\n\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n\n        if (sorted) {\n          break;\n        }\n      }\n\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n\n          me.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n\n      return range;\n    }\n  }, {\n    key: \"getAllParsedValues\",\n    value: function getAllParsedValues(scale) {\n      var parsed = this._cachedMeta._parsed;\n      var values = [];\n      var i, ilen, value;\n\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n\n      return values;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return false;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale;\n      var vScale = meta.vScale;\n      var parsed = me.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      me.configure();\n      me._cachedDataOpts = {};\n      me.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {}\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var ctx = me._ctx;\n      var chart = me.chart;\n      var meta = me._cachedMeta;\n      var elements = meta.data || [];\n      var area = chart.chartArea;\n      var active = [];\n      var start = me._drawStart || 0;\n      var count = me._drawCount || elements.length - start;\n      var i;\n\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        var element = elements[i];\n\n        if (element.active) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, active) {\n      var mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index, active, mode) {\n      var me = this;\n      var dataset = me.getDataset();\n      var context;\n\n      if (index >= 0 && index < me._cachedMeta.data.length) {\n        var element = me._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(me.getContext(), index, element));\n        context.parsed = me.getParsed(index);\n        context.raw = dataset.data[index];\n      } else {\n        context = me.$context || (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n        context.dataset = dataset;\n      }\n\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n  }, {\n    key: \"resolveDatasetElementOptions\",\n    value: function resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n  }, {\n    key: \"_resolveElementOptions\",\n    value: function _resolveElementOptions(elementType) {\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var me = this;\n      var active = mode === 'active';\n      var cache = me._cachedDataOpts;\n      var cacheKey = elementType + '-' + mode;\n      var cached = cache[cacheKey];\n      var sharing = me.enableOptionSharing && defined(index);\n\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n\n      var config = me.chart.config;\n      var scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n      var prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      var scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      var names = Object.keys(defaults.elements[elementType]);\n\n      var context = function context() {\n        return me.getContext(index, active);\n      };\n\n      var values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n\n      return values;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations(index, transition, active) {\n      var me = this;\n      var chart = me.chart;\n      var cache = me._cachedDataOpts;\n      var cacheKey = \"animation-\".concat(transition);\n      var cached = cache[cacheKey];\n\n      if (cached) {\n        return cached;\n      }\n\n      var options;\n\n      if (chart.options.animation !== false) {\n        var config = me.chart.config;\n        var scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n        var scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, me.getContext(index, active, transition));\n      }\n\n      var animations = new Animations(chart, options && options.animations);\n\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"getSharedOptions\",\n    value: function getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n  }, {\n    key: \"includeOptions\",\n    value: function includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n  }, {\n    key: \"updateSharedOptions\",\n    value: function updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(element, index, mode, active) {\n      element.active = active;\n      var options = this.getStyle(index, active);\n\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n  }, {\n    key: \"removeHoverStyle\",\n    value: function removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n  }, {\n    key: \"setHoverStyle\",\n    value: function setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n  }, {\n    key: \"_removeDatasetHoverStyle\",\n    value: function _removeDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n  }, {\n    key: \"_setDatasetHoverStyle\",\n    value: function _setDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n  }, {\n    key: \"_resyncElements\",\n    value: function _resyncElements(resetNewElements) {\n      var me = this;\n      var numMeta = me._cachedMeta.data.length;\n      var numData = me._data.length;\n\n      if (numData > numMeta) {\n        me._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        me._removeElements(numData, numMeta - numData);\n      }\n\n      var count = Math.min(numData, numMeta);\n\n      if (count) {\n        me.parse(0, count);\n      }\n    }\n  }, {\n    key: \"_insertElements\",\n    value: function _insertElements(start, count) {\n      var resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var me = this;\n      var meta = me._cachedMeta;\n      var data = meta.data;\n      var end = start + count;\n      var i;\n\n      var move = function move(arr) {\n        arr.length += count;\n\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n\n      move(data);\n\n      for (i = start; i < end; ++i) {\n        data[i] = new me.dataElementType();\n      }\n\n      if (me._parsing) {\n        move(meta._parsed);\n      }\n\n      me.parse(start, count);\n\n      if (resetNewElements) {\n        me.updateElements(data, start, count, 'reset');\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(element, start, count, mode) {}\n  }, {\n    key: \"_removeElements\",\n    value: function _removeElements(start, count) {\n      var me = this;\n      var meta = me._cachedMeta;\n\n      if (me._parsing) {\n        var removed = meta._parsed.splice(start, count);\n\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n\n      meta.data.splice(start, count);\n    }\n  }, {\n    key: \"_onDataPush\",\n    value: function _onDataPush() {\n      var count = arguments.length;\n\n      this._insertElements(this.getDataset().data.length - count, count);\n    }\n  }, {\n    key: \"_onDataPop\",\n    value: function _onDataPop() {\n      this._removeElements(this._cachedMeta.data.length - 1, 1);\n    }\n  }, {\n    key: \"_onDataShift\",\n    value: function _onDataShift() {\n      this._removeElements(0, 1);\n    }\n  }, {\n    key: \"_onDataSplice\",\n    value: function _onDataSplice(start, count) {\n      this._removeElements(start, count);\n\n      this._insertElements(start, arguments.length - 2);\n    }\n  }, {\n    key: \"_onDataUnshift\",\n    value: function _onDataUnshift() {\n      this._insertElements(0, arguments.length);\n    }\n  }]);\n\n  return DatasetController;\n}();\n\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    var metas = scale.getMatchingVisibleMetas('bar');\n    var values = [];\n\n    for (var i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort(function (a, b) {\n      return a - b;\n    }));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(scale) {\n  var values = getAllScaleValues(scale);\n  var min = scale._length;\n  var i, ilen, curr, prev;\n\n  var updateMinAndPrev = function updateMinAndPrev() {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  var thickness = options.barThickness;\n  var size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio: ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  var start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  var size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  var startValue = vScale.parse(entry[0], i);\n  var endValue = vScale.parse(entry[1], i);\n  var min = Math.min(startValue, endValue);\n  var max = Math.max(startValue, endValue);\n  var barStart = min;\n  var barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart: barStart,\n    barEnd: barEnd,\n    start: startValue,\n    end: endValue,\n    min: min,\n    max: max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var vScale = meta.vScale;\n  var labels = iScale.getLabels();\n  var singleScale = iScale === vScale;\n  var parsed = [];\n  var i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nvar BarController = /*#__PURE__*/function (_DatasetController) {\n  _inherits(BarController, _DatasetController);\n\n  var _super = _createSuper(BarController);\n\n  function BarController() {\n    _classCallCheck(this, BarController);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BarController, [{\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var _this$_parsing2 = this._parsing,\n          _this$_parsing2$xAxis = _this$_parsing2.xAxisKey,\n          xAxisKey = _this$_parsing2$xAxis === void 0 ? 'x' : _this$_parsing2$xAxis,\n          _this$_parsing2$yAxis = _this$_parsing2.yAxisKey,\n          yAxisKey = _this$_parsing2$yAxis === void 0 ? 'y' : _this$_parsing2$yAxis;\n      var iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var parsed = [];\n      var i, ilen, item, obj;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      _get(_getPrototypeOf(BarController.prototype), \"updateRangeFromParsed\", this).call(this, range, scale, parsed, stack);\n\n      var custom = parsed._custom;\n\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var parsed = me.getParsed(index);\n      var custom = parsed._custom;\n      var value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value: value\n      };\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      var me = this;\n      me.enableOptionSharing = true;\n\n      _get(_getPrototypeOf(BarController.prototype), \"initialize\", this).call(this);\n\n      var meta = me._cachedMeta;\n      meta.stack = me.getDataset().stack;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      me.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(bars, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var vScale = me._cachedMeta.vScale;\n      var base = vScale.getBasePixel();\n      var horizontal = vScale.isHorizontal();\n\n      var ruler = me._getRuler();\n\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n\n      for (var i = start; i < start + count; i++) {\n        var parsed = me.getParsed(i);\n        var vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base: base,\n          head: base\n        } : me._calculateBarValuePixels(i);\n\n        var ipixels = me._calculateBarIndexPixels(i, ruler);\n\n        var stack = (parsed._stacks || {})[vScale.axis];\n        var properties = {\n          horizontal: horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || me.index === stack._top || me.index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : undefined,\n          width: horizontal ? undefined : ipixels.size\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n        }\n\n        me.updateElement(bars[i], i, properties, mode);\n      }\n    }\n  }, {\n    key: \"_getStacks\",\n    value: function _getStacks(last, dataIndex) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale;\n      var metasets = iScale.getMatchingVisibleMetas(me._type);\n      var stacked = iScale.options.stacked;\n      var ilen = metasets.length;\n      var stacks = [];\n      var i, item;\n\n      for (i = 0; i < ilen; ++i) {\n        item = metasets[i];\n\n        if (typeof dataIndex !== 'undefined') {\n          var val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n\n          if (isNullOrUndef(val) || isNaN(val)) {\n            continue;\n          }\n        }\n\n        if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n          stacks.push(item.stack);\n        }\n\n        if (item.index === last) {\n          break;\n        }\n      }\n\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n\n      return stacks;\n    }\n  }, {\n    key: \"_getStackCount\",\n    value: function _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n  }, {\n    key: \"_getStackIndex\",\n    value: function _getStackIndex(datasetIndex, name, dataIndex) {\n      var stacks = this._getStacks(datasetIndex, dataIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n  }, {\n    key: \"_getRuler\",\n    value: function _getRuler() {\n      var me = this;\n      var opts = me.options;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale;\n      var pixels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n      }\n\n      var barThickness = opts.barThickness;\n      var min = barThickness || computeMinSampleSize(iScale);\n      return {\n        min: min,\n        pixels: pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: me._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n  }, {\n    key: \"_calculateBarValuePixels\",\n    value: function _calculateBarValuePixels(index) {\n      var me = this;\n      var _me$_cachedMeta = me._cachedMeta,\n          vScale = _me$_cachedMeta.vScale,\n          _stacked = _me$_cachedMeta._stacked;\n      var _me$options = me.options,\n          baseValue = _me$options.base,\n          minBarLength = _me$options.minBarLength;\n      var parsed = me.getParsed(index);\n      var custom = parsed._custom;\n      var floating = isFloatBar(custom);\n      var value = parsed[vScale.axis];\n      var start = 0;\n      var length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n      var head, size;\n\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n\n        start += value;\n      }\n\n      var startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      var base = vScale.getPixelForValue(startValue);\n\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = size < 0 ? -minBarLength : minBarLength;\n\n        if (value === 0) {\n          base -= size / 2;\n        }\n\n        head = base + size;\n      }\n\n      var actualBase = baseValue || 0;\n\n      if (base === vScale.getPixelForValue(actualBase)) {\n        var halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n\n        if (size > 0) {\n          base += halfGrid;\n          size -= halfGrid;\n        } else if (size < 0) {\n          base -= halfGrid;\n          size += halfGrid;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    }\n  }, {\n    key: \"_calculateBarIndexPixels\",\n    value: function _calculateBarIndexPixels(index, ruler) {\n      var me = this;\n      var scale = ruler.scale;\n      var options = me.options;\n      var skipNull = options.skipNull;\n      var maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      var center, size;\n\n      if (ruler.grouped) {\n        var stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n        var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n        var stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me._cachedMeta;\n      var vScale = meta.vScale;\n      var rects = meta.data;\n      var ilen = rects.length;\n      var i = 0;\n      clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (me.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(me._ctx);\n        }\n      }\n\n      unclipArea(chart.ctx);\n    }\n  }]);\n\n  return BarController;\n}(DatasetController);\n\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\n\nvar BubbleController = /*#__PURE__*/function (_DatasetController2) {\n  _inherits(BubbleController, _DatasetController2);\n\n  var _super2 = _createSuper(BubbleController);\n\n  function BubbleController() {\n    _classCallCheck(this, BubbleController);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(BubbleController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n\n      _get(_getPrototypeOf(BubbleController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var _this$_parsing3 = this._parsing,\n          _this$_parsing3$xAxis = _this$_parsing3.xAxisKey,\n          xAxisKey = _this$_parsing3$xAxis === void 0 ? 'x' : _this$_parsing3$xAxis,\n          _this$_parsing3$yAxis = _this$_parsing3.yAxisKey,\n          yAxisKey = _this$_parsing3$yAxis === void 0 ? 'y' : _this$_parsing3$yAxis;\n      var parsed = [];\n      var i, ilen, item;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        item = data[i];\n        parsed.push({\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n          _custom: item && item.r && +item.r\n        });\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var _this$_cachedMeta = this._cachedMeta,\n          data = _this$_cachedMeta.data,\n          _parsed = _this$_cachedMeta._parsed;\n      var max = 0;\n\n      for (var i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n      }\n\n      return max > 0 && max;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var parsed = me.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      var r = parsed._custom;\n      return {\n        label: meta.label,\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var points = me._cachedMeta.data;\n      me.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var _me$_cachedMeta2 = me._cachedMeta,\n          xScale = _me$_cachedMeta2.xScale,\n          yScale = _me$_cachedMeta2.yScale;\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var parsed = !reset && me.getParsed(i);\n        var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\n        var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\n        var properties = {\n          x: x,\n          y: y,\n          skip: isNaN(x) || isNaN(y)\n        };\n\n        if (includeOptions) {\n          properties.options = me.resolveDataElementOptions(i, mode);\n\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n\n        me.updateElement(point, i, properties, mode);\n      }\n\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      var parsed = this.getParsed(index);\n\n      var values = _get(_getPrototypeOf(BubbleController.prototype), \"resolveDataElementOptions\", this).call(this, index, mode);\n\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n\n      var radius = values.radius;\n\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }]);\n\n  return BubbleController;\n}(DatasetController);\n\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  var ratioX = 1;\n  var ratioY = 1;\n  var offsetX = 0;\n  var offsetY = 0;\n\n  if (circumference < TAU) {\n    var startAngle = rotation;\n    var endAngle = startAngle + circumference;\n    var startX = Math.cos(startAngle);\n    var startY = Math.sin(startAngle);\n    var endX = Math.cos(endAngle);\n    var endY = Math.sin(endAngle);\n\n    var calcMax = function calcMax(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    };\n\n    var calcMin = function calcMin(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    };\n\n    var maxX = calcMax(0, startX, endX);\n    var maxY = calcMax(HALF_PI, startY, endY);\n    var minX = calcMin(PI, startX, endX);\n    var minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX: ratioX,\n    ratioY: ratioY,\n    offsetX: offsetX,\n    offsetY: offsetY\n  };\n}\n\nvar DoughnutController = /*#__PURE__*/function (_DatasetController3) {\n  _inherits(DoughnutController, _DatasetController3);\n\n  var _super3 = _createSuper(DoughnutController);\n\n  function DoughnutController(chart, datasetIndex) {\n    var _this;\n\n    _classCallCheck(this, DoughnutController);\n\n    _this = _super3.call(this, chart, datasetIndex);\n    _this.enableOptionSharing = true;\n    _this.innerRadius = undefined;\n    _this.outerRadius = undefined;\n    _this.offsetX = undefined;\n    _this.offsetY = undefined;\n    return _this;\n  }\n\n  _createClass(DoughnutController, [{\n    key: \"linkScales\",\n    value: function linkScales() {}\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var data = this.getDataset().data;\n      var meta = this._cachedMeta;\n      var i, ilen;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = +data[i];\n      }\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n  }, {\n    key: \"_getCircumference\",\n    value: function _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n  }, {\n    key: \"_getRotationExtents\",\n    value: function _getRotationExtents() {\n      var min = TAU;\n      var max = -TAU;\n      var me = this;\n\n      for (var i = 0; i < me.chart.data.datasets.length; ++i) {\n        if (me.chart.isDatasetVisible(i)) {\n          var controller = me.chart.getDatasetMeta(i).controller;\n\n          var rotation = controller._getRotation();\n\n          var circumference = controller._getCircumference();\n\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var meta = me._cachedMeta;\n      var arcs = meta.data;\n      var spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n      var maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      var cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var _me$_getRotationExten = me._getRotationExtents(),\n          circumference = _me$_getRotationExten.circumference,\n          rotation = _me$_getRotationExten.rotation;\n\n      var _getRatioAndOffset = getRatioAndOffset(rotation, circumference, cutout),\n          ratioX = _getRatioAndOffset.ratioX,\n          ratioY = _getRatioAndOffset.ratioY,\n          offsetX = _getRatioAndOffset.offsetX,\n          offsetY = _getRatioAndOffset.offsetY;\n\n      var maxWidth = (chartArea.width - spacing) / ratioX;\n      var maxHeight = (chartArea.height - spacing) / ratioY;\n      var maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      var outerRadius = toDimension(me.options.radius, maxRadius);\n      var innerRadius = Math.max(outerRadius * cutout, 0);\n\n      var radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n\n      me.offsetX = offsetX * outerRadius;\n      me.offsetY = offsetY * outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n      me.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_circumference\",\n    value: function _circumference(i, reset) {\n      var me = this;\n      var opts = me.options;\n      var meta = me._cachedMeta;\n\n      var circumference = me._getCircumference();\n\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n        return 0;\n      }\n\n      return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var animateScale = reset && animationOpts.animateScale;\n      var innerRadius = animateScale ? 0 : me.innerRadius;\n      var outerRadius = animateScale ? 0 : me.outerRadius;\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n\n      var startAngle = me._getRotation();\n\n      var i;\n\n      for (i = 0; i < start; ++i) {\n        startAngle += me._circumference(i, reset);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        var circumference = me._circumference(i, reset);\n\n        var arc = arcs[i];\n        var properties = {\n          x: centerX + me.offsetX,\n          y: centerY + me.offsetY,\n          startAngle: startAngle,\n          endAngle: startAngle + circumference,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n        }\n\n        startAngle += circumference;\n        me.updateElement(arc, i, properties, mode);\n      }\n\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"calculateTotal\",\n    value: function calculateTotal() {\n      var meta = this._cachedMeta;\n      var metaData = meta.data;\n      var total = 0;\n      var i;\n\n      for (i = 0; i < metaData.length; i++) {\n        var value = meta._parsed[i];\n\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n          total += Math.abs(value);\n        }\n      }\n\n      return total;\n    }\n  }, {\n    key: \"calculateCircumference\",\n    value: function calculateCircumference(value) {\n      var total = this._cachedMeta.total;\n\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var chart = me.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"getMaxBorderWidth\",\n    value: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, controller, options;\n\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n\n            if (controller !== me) {\n              controller.configure();\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n\n      return max;\n    }\n  }, {\n    key: \"getMaxOffset\",\n    value: function getMaxOffset(arcs) {\n      var max = 0;\n\n      for (var i = 0, ilen = arcs.length; i < ilen; ++i) {\n        var options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n\n      return max;\n    }\n  }, {\n    key: \"_getRingWeightOffset\",\n    value: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    }\n  }, {\n    key: \"_getRingWeight\",\n    value: function _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n  }, {\n    key: \"_getVisibleDatasetWeightTotal\",\n    value: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }]);\n\n  return DoughnutController;\n}(DatasetController);\n\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem) {\n          var dataLabel = tooltipItem.label;\n          var value = ': ' + tooltipItem.formattedValue;\n\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nvar LineController = /*#__PURE__*/function (_DatasetController4) {\n  _inherits(LineController, _DatasetController4);\n\n  var _super4 = _createSuper(LineController);\n\n  function LineController() {\n    _classCallCheck(this, LineController);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(LineController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n\n      _get(_getPrototypeOf(LineController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var line = meta.dataset,\n          _meta$data = meta.data,\n          points = _meta$data === void 0 ? [] : _meta$data,\n          _dataset = meta._dataset;\n      var animationsDisabled = me.chart._animationsDisabled;\n\n      var _getStartAndCountOfVi = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n          start = _getStartAndCountOfVi.start,\n          count = _getStartAndCountOfVi.count;\n\n      me._drawStart = start;\n      me._drawCount = count;\n\n      if (scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      var options = me.resolveDatasetElementOptions(mode);\n\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      options.segment = me.options.segment;\n      me.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options: options\n      }, mode);\n      me.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var _me$_cachedMeta3 = me._cachedMeta,\n          xScale = _me$_cachedMeta3.xScale,\n          yScale = _me$_cachedMeta3.yScale,\n          _stacked = _me$_cachedMeta3._stacked;\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      var spanGaps = me.options.spanGaps;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && me.getParsed(start - 1);\n\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = me.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed.y);\n        var x = properties.x = xScale.getPixelForValue(parsed.x, i);\n        var y = properties.y = reset || nullData ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\n        properties.skip = isNaN(x) || isNaN(y) || nullData;\n        properties.stop = i > 0 && parsed.x - prevParsed.x > maxGapLength;\n        properties.parsed = parsed;\n\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n        }\n\n        if (!directUpdate) {\n          me.updateElement(point, i, properties, mode);\n        }\n\n        prevParsed = parsed;\n      }\n\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var me = this;\n      var meta = me._cachedMeta;\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      var data = meta.data || [];\n\n      if (!data.length) {\n        return border;\n      }\n\n      var firstPoint = data[0].size(me.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\n\n      _get(_getPrototypeOf(LineController.prototype), \"draw\", this).call(this);\n    }\n  }]);\n\n  return LineController;\n}(DatasetController);\n\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\n\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  var pointCount = points.length;\n  var start = 0;\n  var count = pointCount;\n\n  if (meta._sorted) {\n    var iScale = meta.iScale,\n        _parsed = meta._parsed;\n    var axis = iScale.axis;\n\n    var _iScale$getUserBounds = iScale.getUserBounds(),\n        min = _iScale$getUserBounds.min,\n        max = _iScale$getUserBounds.max,\n        minDefined = _iScale$getUserBounds.minDefined,\n        maxDefined = _iScale$getUserBounds.maxDefined;\n\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {\n    start: start,\n    count: count\n  };\n}\n\nfunction scaleRangesChanged(meta) {\n  var xScale = meta.xScale,\n      yScale = meta.yScale,\n      _scaleRanges = meta._scaleRanges;\n  var newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n\n  var changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nvar PolarAreaController = /*#__PURE__*/function (_DatasetController5) {\n  _inherits(PolarAreaController, _DatasetController5);\n\n  var _super5 = _createSuper(PolarAreaController);\n\n  function PolarAreaController(chart, datasetIndex) {\n    var _this2;\n\n    _classCallCheck(this, PolarAreaController);\n\n    _this2 = _super5.call(this, chart, datasetIndex);\n    _this2.innerRadius = undefined;\n    _this2.outerRadius = undefined;\n    return _this2;\n  }\n\n  _createClass(PolarAreaController, [{\n    key: \"update\",\n    value: function update(mode) {\n      var arcs = this._cachedMeta.data;\n\n      this._updateRadius();\n\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_updateRadius\",\n    value: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      var outerRadius = Math.max(minSize / 2, 0);\n      var innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      var radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = outerRadius - radiusLength * me.index;\n      me.innerRadius = me.outerRadius - radiusLength;\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = me._cachedMeta.rScale;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter;\n      var datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      var angle = datasetStartAngle;\n      var i;\n      var defaultAngle = 360 / me.countVisibleElements();\n\n      for (i = 0; i < start; ++i) {\n        angle += me._computeAngle(i, mode, defaultAngle);\n      }\n\n      for (i = start; i < start + count; i++) {\n        var arc = arcs[i];\n        var startAngle = angle;\n\n        var endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n\n        var outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n        angle = endAngle;\n\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n\n        var properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          options: me.resolveDataElementOptions(i, mode)\n        };\n        me.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"countVisibleElements\",\n    value: function countVisibleElements() {\n      var _this3 = this;\n\n      var dataset = this.getDataset();\n      var meta = this._cachedMeta;\n      var count = 0;\n      meta.data.forEach(function (element, index) {\n        if (!isNaN(dataset.data[index]) && _this3.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n  }, {\n    key: \"_computeAngle\",\n    value: function _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }]);\n\n  return PolarAreaController;\n}(DatasetController);\n\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nvar PieController = /*#__PURE__*/function (_DoughnutController) {\n  _inherits(PieController, _DoughnutController);\n\n  var _super6 = _createSuper(PieController);\n\n  function PieController() {\n    _classCallCheck(this, PieController);\n\n    return _super6.apply(this, arguments);\n  }\n\n  return PieController;\n}(DoughnutController);\n\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nvar RadarController = /*#__PURE__*/function (_DatasetController6) {\n  _inherits(RadarController, _DatasetController6);\n\n  var _super7 = _createSuper(RadarController);\n\n  function RadarController() {\n    _classCallCheck(this, RadarController);\n\n    return _super7.apply(this, arguments);\n  }\n\n  _createClass(RadarController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var vScale = me._cachedMeta.vScale;\n      var parsed = me.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var labels = meta.iScale.getLabels();\n      line.points = points;\n\n      if (mode !== 'resize') {\n        var options = me.resolveDatasetElementOptions(mode);\n\n        if (!me.options.showLine) {\n          options.borderWidth = 0;\n        }\n\n        var properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options: options\n        };\n        me.updateElement(line, undefined, properties, mode);\n      }\n\n      me.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var me = this;\n      var dataset = me.getDataset();\n      var scale = me._cachedMeta.rScale;\n      var reset = mode === 'reset';\n\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var options = me.resolveDataElementOptions(i, mode);\n        var pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n        var x = reset ? scale.xCenter : pointPosition.x;\n        var y = reset ? scale.yCenter : pointPosition.y;\n        var properties = {\n          x: x,\n          y: y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options: options\n        };\n        me.updateElement(point, i, properties, mode);\n      }\n    }\n  }]);\n\n  return RadarController;\n}(DatasetController);\n\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\n\nvar ScatterController = /*#__PURE__*/function (_LineController) {\n  _inherits(ScatterController, _LineController);\n\n  var _super8 = _createSuper(ScatterController);\n\n  function ScatterController() {\n    _classCallCheck(this, ScatterController);\n\n    return _super8.apply(this, arguments);\n  }\n\n  return ScatterController;\n}(LineController);\n\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\n}\n\nvar DateAdapter = /*#__PURE__*/function () {\n  function DateAdapter(options) {\n    _classCallCheck(this, DateAdapter);\n\n    this.options = options || {};\n  }\n\n  _createClass(DateAdapter, [{\n    key: \"formats\",\n    value: function formats() {\n      return abstract();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(value, format) {\n      return abstract();\n    }\n  }, {\n    key: \"format\",\n    value: function format(timestamp, _format) {\n      return abstract();\n    }\n  }, {\n    key: \"add\",\n    value: function add(timestamp, amount, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"diff\",\n    value: function diff(a, b, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"startOf\",\n    value: function startOf(timestamp, unit, weekday) {\n      return abstract();\n    }\n  }, {\n    key: \"endOf\",\n    value: function endOf(timestamp, unit) {\n      return abstract();\n    }\n  }]);\n\n  return DateAdapter;\n}();\n\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\n\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return getRelativePosition$1(e, chart);\n}\n\nfunction evaluateAllVisibleItems(chart, handler) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var index, data, element;\n\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i = metasets[i];\n    index = _metasets$i.index;\n    data = _metasets$i.data;\n\n    for (var j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  var controller = metaset.controller,\n      data = metaset.data,\n      _sorted = metaset._sorted;\n  var iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    var lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      var el = data[0];\n      var range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        var start = lookupMethod(data, axis, value - range);\n        var end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var value = position[axis];\n\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i2 = metasets[i],\n        index = _metasets$i2.index,\n        data = _metasets$i2.data;\n\n    var _binarySearch = binarySearch(metasets[i], axis, value, intersect),\n        lo = _binarySearch.lo,\n        hi = _binarySearch.hi;\n\n    for (var j = lo; j <= hi; ++j) {\n      var element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  var distanceMetric = getDistanceMetricForAxis(axis);\n  var minDistance = Number.POSITIVE_INFINITY;\n  var items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n\n    var center = element.getCenterPoint(useFinalPosition);\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  var position = getRelativePosition(e, chart);\n  var items = [];\n  var axis = options.axis;\n  var rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  var intersectsItem = false;\n  evaluateAllVisibleItems(chart, function (element, datasetIndex, index) {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  modes: {\n    index: function index(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'x';\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      var elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(function (meta) {\n        var index = items[0].index;\n        var element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element: element,\n            datasetIndex: meta.index,\n            index: index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset: function dataset(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n\n      if (items.length > 0) {\n        var datasetIndex = items[0].datasetIndex;\n        var data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (var i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex: datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n    point: function point(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest: function nearest(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x: function x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y: function y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\nvar STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(function (v) {\n    return v.pos === position;\n  });\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(function (v) {\n    return STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  var layoutBoxes = [];\n  var i, ilen, box;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box: box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction setLayoutDims(layouts, params) {\n  var i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\n\nfunction buildLayoutBoxes(boxes) {\n  var layoutBoxes = wrapBoxes(boxes);\n  var fullSize = sortByWeight(layoutBoxes.filter(function (wrap) {\n    return wrap.box.fullSize;\n  }), true);\n  var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  var centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  var centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize: fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout) {\n  var box = layout.box;\n  var maxPadding = chartArea.maxPadding;\n\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  var newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  var newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  var widthChanged = newWidth !== chartArea.w;\n  var heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  var maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    var change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  var maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    var margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(function (pos) {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params) {\n  var refitBoxes = [];\n  var i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n\n    var _updateDims = updateDims(chartArea, params, layout),\n        same = _updateDims.same,\n        other = _updateDims.other;\n\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\n\nfunction placeBoxes(boxes, chartArea, params) {\n  var userPadding = params.padding;\n  var x = chartArea.x;\n  var y = chartArea.y;\n  var i, ilen, layout, box;\n\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw: function draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure: function configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update: function update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    var padding = toPadding(chart.options.layout.padding);\n    var availableWidth = width - padding.width;\n    var availableHeight = height - padding.height;\n    var boxes = buildLayoutBoxes(chart.boxes);\n    var verticalBoxes = boxes.vertical;\n    var horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, function (box) {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    var visibleVerticalBoxCount = verticalBoxes.reduce(function (total, wrap) {\n      return wrap.box.options && wrap.box.options.display === false ? total : total + 1;\n    }, 0) || 1;\n    var params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding: padding,\n      availableWidth: availableWidth,\n      availableHeight: availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    var maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    var chartArea = Object.assign({\n      maxPadding: maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, function (layout) {\n      var box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nvar BasePlatform = /*#__PURE__*/function () {\n  function BasePlatform() {\n    _classCallCheck(this, BasePlatform);\n  }\n\n  _createClass(BasePlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {}\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      return false;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {}\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type, listener) {}\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return 1;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width: width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      return true;\n    }\n  }]);\n\n  return BasePlatform;\n}();\n\nvar BasicPlatform = /*#__PURE__*/function (_BasePlatform) {\n  _inherits(BasicPlatform, _BasePlatform);\n\n  var _super9 = _createSuper(BasicPlatform);\n\n  function BasicPlatform() {\n    _classCallCheck(this, BasicPlatform);\n\n    return _super9.apply(this, arguments);\n  }\n\n  _createClass(BasicPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }]);\n\n  return BasicPlatform;\n}(BasePlatform);\n\nvar EXPANDO_KEY = '$chartjs';\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nvar isNullOrEmpty = function isNullOrEmpty(value) {\n  return value === null || value === '';\n};\n\nfunction initCanvas(canvas, aspectRatio) {\n  var style = canvas.style;\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n\n  var _getRelativePosition$ = getRelativePosition$1(event, chart),\n      x = _getRelativePosition$.x,\n      y = _getRelativePosition$.y;\n\n  return {\n    type: type,\n    chart: chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n\n  var container = canvas && _getParentNode(canvas);\n\n  var element = container || canvas;\n  var observer = new MutationObserver(function (entries) {\n    var parent = _getParentNode(element);\n\n    entries.forEach(function (entry) {\n      for (var i = 0; i < entry.addedNodes.length; i++) {\n        var added = entry.addedNodes[i];\n\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n\n  var container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  var observer = new MutationObserver(function (entries) {\n    entries.forEach(function (entry) {\n      for (var i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {\n    childList: true\n  });\n  return observer;\n}\n\nvar drpListeningCharts = new Map();\nvar oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  var dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach(function (resize, chart) {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n\n  var container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  var resize = throttled(function (width, height) {\n    var w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n    var width = entry.contentRect.width;\n    var height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  var canvas = chart.canvas;\n  var proxy = throttled(function (event) {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, function (args) {\n    var event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nvar DomPlatform = /*#__PURE__*/function (_BasePlatform2) {\n  _inherits(DomPlatform, _BasePlatform2);\n\n  var _super10 = _createSuper(DomPlatform);\n\n  function DomPlatform() {\n    _classCallCheck(this, DomPlatform);\n\n    return _super10.apply(this, arguments);\n  }\n\n  _createClass(DomPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {\n      var context = canvas && canvas.getContext && canvas.getContext('2d');\n\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      var style = initial.style || {};\n      Object.keys(style).forEach(function (key) {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      var handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type) {\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var proxy = proxies[type];\n\n      if (!proxy) {\n        return;\n      }\n\n      var handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      var handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(canvas, width, height, aspectRatio) {\n      return _getMaximumSize(canvas, width, height, aspectRatio);\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      var container = _getParentNode(canvas);\n\n      return !!(container && _getParentNode(container));\n    }\n  }]);\n\n  return DomPlatform;\n}(BasePlatform);\n\nvar Element = /*#__PURE__*/function () {\n  function Element() {\n    _classCallCheck(this, Element);\n\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n\n  _createClass(Element, [{\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps.x,\n          y = _this$getProps.y;\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props, final) {\n      var me = this;\n      var anims = this.$animations;\n\n      if (!final || !anims) {\n        return me;\n      }\n\n      var ret = {};\n      props.forEach(function (prop) {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n      });\n      return ret;\n    }\n  }]);\n\n  return Element;\n}();\n\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nvar formatters = {\n  values: function values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric: function numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    var locale = this.chart.options.locale;\n    var notation;\n    var delta = tickValue;\n\n    if (ticks.length > 1) {\n      var maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    var logDelta = log10(Math.abs(delta));\n    var numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    var options = {\n      notation: notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic: function logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    var remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n\n    return '';\n  }\n};\n\nfunction calculateDelta(tickValue, ticks) {\n  var delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n\n  return delta;\n}\n\nvar Ticks = {\n  formatters: formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: function tickWidth(_ctx, options) {\n      return options.lineWidth;\n    },\n    tickColor: function tickColor(_ctx, options) {\n      return options.color;\n    },\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: function _scriptable(name) {\n    return !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'tickBorderDash';\n  }\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\n\nfunction autoSkip(scale, ticks) {\n  var tickOpts = scale.options.ticks;\n  var ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  var numMajorIndices = majorIndices.length;\n  var first = majorIndices[0];\n  var last = majorIndices[numMajorIndices - 1];\n  var newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  var spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    var i, ilen;\n    var avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  var offset = scale.options.offset;\n\n  var tickLength = scale._tickSize();\n\n  var maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  var maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  var evenMajorSpacing = getEvenSpacing(majorIndices);\n  var spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  var factors = _factorize(evenMajorSpacing);\n\n  for (var i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    var factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  var result = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  var count = 0;\n  var next = majorIndices[0];\n  var i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  var start = valueOrDefault(majorStart, 0);\n  var end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  var count = 0;\n  var length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  var len = arr.length;\n  var i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nvar reverseAlign = function reverseAlign(align) {\n  return align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n};\n\nvar offsetFromEdge = function offsetFromEdge(scale, edge, offset) {\n  return edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n};\n\nfunction sample(arr, numItems) {\n  var result = [];\n  var increment = arr.length / numItems;\n  var len = arr.length;\n  var i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  var length = scale.ticks.length;\n  var validIndex = Math.min(index, length - 1);\n  var start = scale._startPixel;\n  var end = scale._endPixel;\n  var epsilon = 1e-6;\n  var lineValue = scale.getPixelForTick(validIndex);\n  var offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, function (cache) {\n    var gc = cache.gc;\n    var gcLen = gc.length / 2;\n    var i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  var font = toFont(options.font, fallback);\n  var padding = toPadding(options.padding);\n  var lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale: scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick: tick,\n    index: index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  var ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  var top = scale.top,\n      left = scale.left,\n      bottom = scale.bottom,\n      right = scale.right;\n  var rotation = 0;\n  var maxWidth, titleX, titleY;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX: titleX,\n    titleY: titleY,\n    maxWidth: maxWidth,\n    rotation: rotation\n  };\n}\n\nvar Scale = /*#__PURE__*/function (_Element) {\n  _inherits(Scale, _Element);\n\n  var _super11 = _createSuper(Scale);\n\n  function Scale(cfg) {\n    var _this4;\n\n    _classCallCheck(this, Scale);\n\n    _this4 = _super11.call(this);\n    _this4.id = cfg.id;\n    _this4.type = cfg.type;\n    _this4.options = undefined;\n    _this4.ctx = cfg.ctx;\n    _this4.chart = cfg.chart;\n    _this4.top = undefined;\n    _this4.bottom = undefined;\n    _this4.left = undefined;\n    _this4.right = undefined;\n    _this4.width = undefined;\n    _this4.height = undefined;\n    _this4._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    _this4.maxWidth = undefined;\n    _this4.maxHeight = undefined;\n    _this4.paddingTop = undefined;\n    _this4.paddingBottom = undefined;\n    _this4.paddingLeft = undefined;\n    _this4.paddingRight = undefined;\n    _this4.axis = undefined;\n    _this4.labelRotation = undefined;\n    _this4.min = undefined;\n    _this4.max = undefined;\n    _this4._range = undefined;\n    _this4.ticks = [];\n    _this4._gridLineItems = null;\n    _this4._labelItems = null;\n    _this4._labelSizes = null;\n    _this4._length = 0;\n    _this4._maxLength = 0;\n    _this4._longestTextCache = {};\n    _this4._startPixel = undefined;\n    _this4._endPixel = undefined;\n    _this4._reversePixels = false;\n    _this4._userMax = undefined;\n    _this4._userMin = undefined;\n    _this4._suggestedMax = undefined;\n    _this4._suggestedMin = undefined;\n    _this4._ticksLength = 0;\n    _this4._borderValue = 0;\n    _this4._cache = {};\n    _this4._dataLimitsCached = false;\n    _this4.$context = undefined;\n    return _this4;\n  }\n\n  _createClass(Scale, [{\n    key: \"init\",\n    value: function init(options) {\n      var me = this;\n      me.options = options.setContext(me.getContext());\n      me.axis = options.axis;\n      me._userMin = me.parse(options.min);\n      me._userMax = me.parse(options.max);\n      me._suggestedMin = me.parse(options.suggestedMin);\n      me._suggestedMax = me.parse(options.suggestedMax);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      return raw;\n    }\n  }, {\n    key: \"getUserBounds\",\n    value: function getUserBounds() {\n      var _userMin = this._userMin,\n          _userMax = this._userMax,\n          _suggestedMin = this._suggestedMin,\n          _suggestedMax = this._suggestedMax;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(canStack) {\n      var me = this;\n\n      var _me$getUserBounds = me.getUserBounds(),\n          min = _me$getUserBounds.min,\n          max = _me$getUserBounds.max,\n          minDefined = _me$getUserBounds.minDefined,\n          maxDefined = _me$getUserBounds.maxDefined;\n\n      var range;\n\n      if (minDefined && maxDefined) {\n        return {\n          min: min,\n          max: max\n        };\n      }\n\n      var metas = me.getMatchingVisibleMetas();\n\n      for (var i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(me, canStack);\n\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n  }, {\n    key: \"getPadding\",\n    value: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      return this.ticks;\n    }\n  }, {\n    key: \"getLabels\",\n    value: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n  }, {\n    key: \"beforeUpdate\",\n    value: function beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var sampleSize = tickOpts.sampleSize;\n      me.beforeUpdate();\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me.ticks = null;\n      me._labelSizes = null;\n      me._gridLineItems = null;\n      me._labelItems = null;\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions();\n      me._maxLength = me.isHorizontal() ? me.width + margins.left + margins.right : me.height + margins.top + margins.bottom;\n\n      if (!me._dataLimitsCached) {\n        me.beforeDataLimits();\n        me.determineDataLimits();\n        me.afterDataLimits();\n        me._range = _addGrace(me, me.options.grace);\n        me._dataLimitsCached = true;\n      }\n\n      me.beforeBuildTicks();\n      me.ticks = me.buildTicks() || [];\n      me.afterBuildTicks();\n      var samplingEnabled = sampleSize < me.ticks.length;\n\n      me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n\n      me.configure();\n      me.beforeCalculateLabelRotation();\n      me.calculateLabelRotation();\n      me.afterCalculateLabelRotation();\n\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        me.ticks = autoSkip(me, me.ticks);\n        me._labelSizes = null;\n      }\n\n      if (samplingEnabled) {\n        me._convertTicksToLabels(me.ticks);\n      }\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit();\n      me.afterUpdate();\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var reversePixels = me.options.reverse;\n      var startPixel, endPixel;\n\n      if (me.isHorizontal()) {\n        startPixel = me.left;\n        endPixel = me.right;\n      } else {\n        startPixel = me.top;\n        endPixel = me.bottom;\n        reversePixels = !reversePixels;\n      }\n\n      me._startPixel = startPixel;\n      me._endPixel = endPixel;\n      me._reversePixels = reversePixels;\n      me._length = endPixel - startPixel;\n      me._alignToPixels = me.options.alignToPixels;\n    }\n  }, {\n    key: \"afterUpdate\",\n    value: function afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n  }, {\n    key: \"beforeSetDimensions\",\n    value: function beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight;\n        me.top = 0;\n        me.bottom = me.height;\n      }\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    }\n  }, {\n    key: \"afterSetDimensions\",\n    value: function afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n  }, {\n    key: \"_callHooks\",\n    value: function _callHooks(name) {\n      var me = this;\n      me.chart.notifyPlugins(name, me.getContext());\n      callback(me.options[name], [me]);\n    }\n  }, {\n    key: \"beforeDataLimits\",\n    value: function beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {}\n  }, {\n    key: \"afterDataLimits\",\n    value: function afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n  }, {\n    key: \"beforeBuildTicks\",\n    value: function beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      return [];\n    }\n  }, {\n    key: \"afterBuildTicks\",\n    value: function afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n  }, {\n    key: \"beforeTickToLabelConversion\",\n    value: function beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n      }\n\n      for (i = 0; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n    }\n  }, {\n    key: \"afterTickToLabelConversion\",\n    value: function afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"beforeCalculateLabelRotation\",\n    value: function beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var me = this;\n      var options = me.options;\n      var tickOpts = options.ticks;\n      var numTicks = me.ticks.length;\n      var minRotation = tickOpts.minRotation || 0;\n      var maxRotation = tickOpts.maxRotation;\n      var labelRotation = minRotation;\n      var tickWidth, maxHeight, maxLabelDiagonal;\n\n      if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n        me.labelRotation = minRotation;\n        return;\n      }\n\n      var labelSizes = me._getLabelSizes();\n\n      var maxLabelWidth = labelSizes.widest.width;\n      var maxLabelHeight = labelSizes.highest.height;\n\n      var maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n\n      tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = me.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)), Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n\n      me.labelRotation = labelRotation;\n    }\n  }, {\n    key: \"afterCalculateLabelRotation\",\n    value: function afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"beforeFit\",\n    value: function beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var minSize = {\n        width: 0,\n        height: 0\n      };\n      var chart = me.chart,\n          _me$options2 = me.options,\n          tickOpts = _me$options2.ticks,\n          titleOpts = _me$options2.title,\n          gridOpts = _me$options2.grid;\n\n      var display = me._isVisible();\n\n      var isHorizontal = me.isHorizontal();\n\n      if (display) {\n        var titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n        if (isHorizontal) {\n          minSize.width = me.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = me.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n\n        if (tickOpts.display && me.ticks.length) {\n          var _me$_getLabelSizes = me._getLabelSizes(),\n              first = _me$_getLabelSizes.first,\n              last = _me$_getLabelSizes.last,\n              widest = _me$_getLabelSizes.widest,\n              highest = _me$_getLabelSizes.highest;\n\n          var tickPadding = tickOpts.padding * 2;\n          var angleRadians = toRadians(me.labelRotation);\n          var cos = Math.cos(angleRadians);\n          var sin = Math.sin(angleRadians);\n\n          if (isHorizontal) {\n            var labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            var labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n\n          me._calculatePadding(first, last, sin, cos);\n        }\n      }\n\n      me._handleMargins();\n\n      if (isHorizontal) {\n        me.width = me._length = chart.width - me._margins.left - me._margins.right;\n        me.height = minSize.height;\n      } else {\n        me.width = minSize.width;\n        me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n      }\n    }\n  }, {\n    key: \"_calculatePadding\",\n    value: function _calculatePadding(first, last, sin, cos) {\n      var me = this;\n      var _me$options3 = me.options,\n          _me$options3$ticks = _me$options3.ticks,\n          align = _me$options3$ticks.align,\n          padding = _me$options3$ticks.padding,\n          position = _me$options3.position;\n      var isRotated = me.labelRotation !== 0;\n      var labelsBelowTicks = position !== 'top' && me.axis === 'x';\n\n      if (me.isHorizontal()) {\n        var offsetLeft = me.getPixelForTick(0) - me.left;\n        var offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n        var paddingLeft = 0;\n        var paddingRight = 0;\n\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n\n        me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n        me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n      } else {\n        var paddingTop = last.height / 2;\n        var paddingBottom = first.height / 2;\n\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n\n        me.paddingTop = paddingTop + padding;\n        me.paddingBottom = paddingBottom + padding;\n      }\n    }\n  }, {\n    key: \"_handleMargins\",\n    value: function _handleMargins() {\n      var me = this;\n\n      if (me._margins) {\n        me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n        me._margins.top = Math.max(me.paddingTop, me._margins.top);\n        me._margins.right = Math.max(me.paddingRight, me._margins.right);\n        me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n      }\n    }\n  }, {\n    key: \"afterFit\",\n    value: function afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var _this$options = this.options,\n          axis = _this$options.axis,\n          position = _this$options.position;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n  }, {\n    key: \"isFullSize\",\n    value: function isFullSize() {\n      return this.options.fullSize;\n    }\n  }, {\n    key: \"_convertTicksToLabels\",\n    value: function _convertTicksToLabels(ticks) {\n      var me = this;\n      me.beforeTickToLabelConversion();\n      me.generateTickLabels(ticks);\n      me.afterTickToLabelConversion();\n    }\n  }, {\n    key: \"_getLabelSizes\",\n    value: function _getLabelSizes() {\n      var me = this;\n      var labelSizes = me._labelSizes;\n\n      if (!labelSizes) {\n        var sampleSize = me.options.ticks.sampleSize;\n        var ticks = me.ticks;\n\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n\n        me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n      }\n\n      return labelSizes;\n    }\n  }, {\n    key: \"_computeLabelSizes\",\n    value: function _computeLabelSizes(ticks, length) {\n      var ctx = this.ctx,\n          caches = this._longestTextCache;\n      var widths = [];\n      var heights = [];\n      var widestLabelSize = 0;\n      var highestLabelSize = 0;\n      var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n\n      garbageCollect(caches, length);\n      var widest = widths.indexOf(widestLabelSize);\n      var highest = heights.indexOf(highestLabelSize);\n\n      var valueAt = function valueAt(idx) {\n        return {\n          width: widths[idx] || 0,\n          height: heights[idx] || 0\n        };\n      };\n\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths: widths,\n        heights: heights\n      };\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      return NaN;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {}\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getPixelForDecimal\",\n    value: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me._reversePixels) {\n        decimal = 1 - decimal;\n      }\n\n      var pixel = me._startPixel + decimal * me._length;\n      return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n    }\n  }, {\n    key: \"getDecimalForPixel\",\n    value: function getDecimalForPixel(pixel) {\n      var decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n  }, {\n    key: \"getBaseValue\",\n    value: function getBaseValue() {\n      var min = this.min,\n          max = this.max;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index) {\n      var me = this;\n      var ticks = me.ticks || [];\n\n      if (index >= 0 && index < ticks.length) {\n        var tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(me.getContext(), index, tick));\n      }\n\n      return me.$context || (me.$context = createScaleContext(me.chart.getContext(), me));\n    }\n  }, {\n    key: \"_tickSize\",\n    value: function _tickSize() {\n      var me = this;\n      var optionTicks = me.options.ticks;\n      var rot = toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n\n      var labelSizes = me._getLabelSizes();\n\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = labelSizes ? labelSizes.widest.width + padding : 0;\n      var h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return me.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var display = this.options.display;\n\n      if (display !== 'auto') {\n        return !!display;\n      }\n\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n  }, {\n    key: \"_computeGridLineItems\",\n    value: function _computeGridLineItems(chartArea) {\n      var me = this;\n      var axis = me.axis;\n      var chart = me.chart;\n      var options = me.options;\n      var grid = options.grid,\n          position = options.position;\n      var offset = grid.offset;\n      var isHorizontal = me.isHorizontal();\n      var ticks = me.ticks;\n      var ticksLength = ticks.length + (offset ? 1 : 0);\n      var tl = getTickMarkLength(grid);\n      var items = [];\n      var borderOpts = grid.setContext(me.getContext());\n      var axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n      var axisHalfWidth = axisWidth / 2;\n\n      var alignBorderValue = function alignBorderValue(pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n\n      var borderValue, i, lineValue, alignedLineValue;\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n      if (position === 'top') {\n        borderValue = alignBorderValue(me.bottom);\n        ty1 = me.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(me.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(me.right);\n        tx1 = me.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(me.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = me.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          var _positionAxisID = Object.keys(position)[0];\n          var _value = position[_positionAxisID];\n          borderValue = alignBorderValue(me.chart.scales[_positionAxisID].getPixelForValue(_value));\n        }\n\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n\n      for (i = 0; i < ticksLength; ++i) {\n        var optsAtIndex = grid.setContext(me.getContext(i));\n        var lineWidth = optsAtIndex.lineWidth;\n        var lineColor = optsAtIndex.color;\n        var borderDash = grid.borderDash || [];\n        var borderDashOffset = optsAtIndex.borderDashOffset;\n        var tickWidth = optsAtIndex.tickWidth;\n        var tickColor = optsAtIndex.tickColor;\n        var tickBorderDash = optsAtIndex.tickBorderDash || [];\n        var tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(me, i, offset);\n\n        if (lineValue === undefined) {\n          continue;\n        }\n\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n\n        items.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash: borderDash,\n          borderDashOffset: borderDashOffset,\n          tickWidth: tickWidth,\n          tickColor: tickColor,\n          tickBorderDash: tickBorderDash,\n          tickBorderDashOffset: tickBorderDashOffset\n        });\n      }\n\n      me._ticksLength = ticksLength;\n      me._borderValue = borderValue;\n      return items;\n    }\n  }, {\n    key: \"_computeLabelItems\",\n    value: function _computeLabelItems(chartArea) {\n      var me = this;\n      var axis = me.axis;\n      var options = me.options;\n      var position = options.position,\n          optionTicks = options.ticks;\n      var isHorizontal = me.isHorizontal();\n      var ticks = me.ticks;\n      var align = optionTicks.align,\n          crossAlign = optionTicks.crossAlign,\n          padding = optionTicks.padding,\n          mirror = optionTicks.mirror;\n      var tl = getTickMarkLength(options.grid);\n      var tickAndPadding = tl + padding;\n      var hTickAndPadding = mirror ? -padding : tickAndPadding;\n      var rotation = -toRadians(me.labelRotation);\n      var items = [];\n      var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      var textBaseline = 'middle';\n\n      if (position === 'top') {\n        y = me.bottom - hTickAndPadding;\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = me.top + hTickAndPadding;\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        var ret = me._getYAxisLabelAlignment(tl);\n\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        var _ret = me._getYAxisLabelAlignment(tl);\n\n        textAlign = _ret.textAlign;\n        x = _ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          var _positionAxisID2 = Object.keys(position)[0];\n          var _value2 = position[_positionAxisID2];\n          x = me.chart.scales[_positionAxisID2].getPixelForValue(_value2);\n        }\n\n        textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n      }\n\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n\n      var labelSizes = me._getLabelSizes();\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        var optsAtIndex = optionTicks.setContext(me.getContext(i));\n        pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n        font = me._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        var halfCount = lineCount / 2;\n        var color = optsAtIndex.color;\n        var strokeColor = optsAtIndex.textStrokeColor;\n        var strokeWidth = optsAtIndex.textStrokeWidth;\n\n        if (isHorizontal) {\n          x = pixel;\n\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n\n          if (mirror) {\n            textOffset *= -1;\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n\n        var backdrop = void 0;\n\n        if (optsAtIndex.showLabelBackdrop) {\n          var labelPadding = toPadding(optsAtIndex.backdropPadding);\n          var height = labelSizes.heights[i];\n          var width = labelSizes.widths[i];\n          var top = y + textOffset - labelPadding.top;\n          var left = x - labelPadding.left;\n\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n\n            case 'bottom':\n              top -= height;\n              break;\n          }\n\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n\n            case 'right':\n              left -= width;\n              break;\n          }\n\n          backdrop = {\n            left: left,\n            top: top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n\n        items.push({\n          rotation: rotation,\n          label: label,\n          font: font,\n          color: color,\n          strokeColor: strokeColor,\n          strokeWidth: strokeWidth,\n          textOffset: textOffset,\n          textAlign: textAlign,\n          textBaseline: textBaseline,\n          translation: [x, y],\n          backdrop: backdrop\n        });\n      }\n\n      return items;\n    }\n  }, {\n    key: \"_getXAxisLabelAlignment\",\n    value: function _getXAxisLabelAlignment() {\n      var me = this;\n      var _me$options4 = me.options,\n          position = _me$options4.position,\n          ticks = _me$options4.ticks;\n      var rotation = -toRadians(me.labelRotation);\n\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n\n      var align = 'center';\n\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      }\n\n      return align;\n    }\n  }, {\n    key: \"_getYAxisLabelAlignment\",\n    value: function _getYAxisLabelAlignment(tl) {\n      var me = this;\n      var _me$options5 = me.options,\n          position = _me$options5.position,\n          _me$options5$ticks = _me$options5.ticks,\n          crossAlign = _me$options5$ticks.crossAlign,\n          mirror = _me$options5$ticks.mirror,\n          padding = _me$options5$ticks.padding;\n\n      var labelSizes = me._getLabelSizes();\n\n      var tickAndPadding = tl + padding;\n      var widest = labelSizes.widest.width;\n      var textAlign;\n      var x;\n\n      if (position === 'left') {\n        if (mirror) {\n          textAlign = 'left';\n          x = me.right + padding;\n        } else {\n          x = me.right - tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = me.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          textAlign = 'right';\n          x = me.left + padding;\n        } else {\n          x = me.left + tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = me.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n\n      return {\n        textAlign: textAlign,\n        x: x\n      };\n    }\n  }, {\n    key: \"_computeLabelArea\",\n    value: function _computeLabelArea() {\n      var me = this;\n\n      if (me.options.ticks.mirror) {\n        return;\n      }\n\n      var chart = me.chart;\n      var position = me.options.position;\n\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: me.left,\n          bottom: chart.height,\n          right: me.right\n        };\n      }\n\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: me.top,\n          left: 0,\n          bottom: me.bottom,\n          right: chart.width\n        };\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var ctx = this.ctx,\n          backgroundColor = this.options.backgroundColor,\n          left = this.left,\n          top = this.top,\n          width = this.width,\n          height = this.height;\n\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getLineWidthForValue\",\n    value: function getLineWidthForValue(value) {\n      var me = this;\n      var grid = me.options.grid;\n\n      if (!me._isVisible() || !grid.display) {\n        return 0;\n      }\n\n      var ticks = me.ticks;\n      var index = ticks.findIndex(function (t) {\n        return t.value === value;\n      });\n\n      if (index >= 0) {\n        var opts = grid.setContext(me.getContext(index));\n        return opts.lineWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid(chartArea) {\n      var me = this;\n      var grid = me.options.grid;\n      var ctx = me.ctx;\n\n      var items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n\n      var i, ilen;\n\n      var drawLine = function drawLine(p1, p2, style) {\n        if (!style.width || !style.color) {\n          return;\n        }\n\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          var item = items[i];\n\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {\n      var me = this;\n      var chart = me.chart,\n          ctx = me.ctx,\n          grid = me.options.grid;\n      var borderOpts = grid.setContext(me.getContext());\n      var axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n\n      if (!axisWidth) {\n        return;\n      }\n\n      var lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n      var borderValue = me._borderValue;\n      var x1, x2, y1, y2;\n\n      if (me.isHorizontal()) {\n        x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n\n      ctx.save();\n      ctx.lineWidth = borderOpts.borderWidth;\n      ctx.strokeStyle = borderOpts.borderColor;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels(chartArea) {\n      var me = this;\n      var optionTicks = me.options.ticks;\n\n      if (!optionTicks.display) {\n        return;\n      }\n\n      var ctx = me.ctx;\n\n      var area = me._computeLabelArea();\n\n      if (area) {\n        clipArea(ctx, area);\n      }\n\n      var items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n\n      var i, ilen;\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        var item = items[i];\n        var tickFont = item.font;\n        var label = item.label;\n\n        if (item.backdrop) {\n          ctx.fillStyle = item.backdrop.color;\n          ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n        }\n\n        var y = item.textOffset;\n        renderText(ctx, label, 0, y, tickFont, item);\n      }\n\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var ctx = this.ctx,\n          _this$options2 = this.options,\n          position = _this$options2.position,\n          title = _this$options2.title,\n          reverse = _this$options2.reverse;\n\n      if (!title.display) {\n        return;\n      }\n\n      var font = toFont(title.font);\n      var padding = toPadding(title.padding);\n      var align = title.align;\n      var offset = font.lineHeight / 2;\n\n      if (position === 'bottom') {\n        offset += padding.bottom;\n\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n\n      var _titleArgs = titleArgs(this, offset, position, align),\n          titleX = _titleArgs.titleX,\n          titleY = _titleArgs.titleY,\n          maxWidth = _titleArgs.maxWidth,\n          rotation = _titleArgs.rotation;\n\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      var me = this;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      me.drawBackground();\n      me.drawGrid(chartArea);\n      me.drawBorder();\n      me.drawTitle();\n      me.drawLabels(chartArea);\n    }\n  }, {\n    key: \"_layers\",\n    value: function _layers() {\n      var me = this;\n      var opts = me.options;\n      var tz = opts.ticks && opts.ticks.z || 0;\n      var gz = opts.grid && opts.grid.z || 0;\n\n      if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: function draw(chartArea) {\n            me.draw(chartArea);\n          }\n        }];\n      }\n\n      return [{\n        z: gz,\n        draw: function draw(chartArea) {\n          me.drawBackground();\n          me.drawGrid(chartArea);\n          me.drawTitle();\n        }\n      }, {\n        z: gz + 1,\n        draw: function draw() {\n          me.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: function draw(chartArea) {\n          me.drawLabels(chartArea);\n        }\n      }];\n    }\n  }, {\n    key: \"getMatchingVisibleMetas\",\n    value: function getMatchingVisibleMetas(type) {\n      var me = this;\n      var metas = me.chart.getSortedVisibleDatasetMetas();\n      var axisID = me.axis + 'AxisID';\n      var result = [];\n      var i, ilen;\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        var meta = metas[i];\n\n        if (meta[axisID] === me.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_resolveTickFontOptions\",\n    value: function _resolveTickFontOptions(index) {\n      var opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n  }, {\n    key: \"_maxDigits\",\n    value: function _maxDigits() {\n      var me = this;\n\n      var fontSize = me._resolveTickFontOptions(0).lineHeight;\n\n      return me.isHorizontal() ? me.width / fontSize / 0.7 : me.height / fontSize;\n    }\n  }]);\n\n  return Scale;\n}(Element);\n\nvar TypedRegistry = /*#__PURE__*/function () {\n  function TypedRegistry(type, scope, override) {\n    _classCallCheck(this, TypedRegistry);\n\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  _createClass(TypedRegistry, [{\n    key: \"isForType\",\n    value: function isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n  }, {\n    key: \"register\",\n    value: function register(item) {\n      var me = this;\n      var proto = Object.getPrototypeOf(item);\n      var parentScope;\n\n      if (isIChartComponent(proto)) {\n        parentScope = me.register(proto);\n      }\n\n      var items = me.items;\n      var id = item.id;\n      var scope = me.scope + '.' + id;\n\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n\n      if (id in items) {\n        return scope;\n      }\n\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n\n      if (me.override) {\n        defaults.override(item.id, item.overrides);\n      }\n\n      return scope;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.items[id];\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(item) {\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope;\n\n      if (id in items) {\n        delete items[id];\n      }\n\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }]);\n\n  return TypedRegistry;\n}();\n\nfunction registerDefaults(item, scope, parentScope) {\n  var itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(function (property) {\n    var propertyParts = property.split('.');\n    var sourceName = propertyParts.pop();\n    var sourceScope = [scope].concat(propertyParts).join('.');\n    var parts = routes[property].split('.');\n    var targetName = parts.pop();\n    var targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nvar Registry = /*#__PURE__*/function () {\n  function Registry() {\n    _classCallCheck(this, Registry);\n\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  _createClass(Registry, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this._each('register', args);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      this._each('unregister', args);\n    }\n  }, {\n    key: \"addControllers\",\n    value: function addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      this._each('register', args, this.controllers);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      this._each('register', args, this.elements);\n    }\n  }, {\n    key: \"addPlugins\",\n    value: function addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      this._each('register', args, this.plugins);\n    }\n  }, {\n    key: \"addScales\",\n    value: function addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      this._each('register', args, this.scales);\n    }\n  }, {\n    key: \"getController\",\n    value: function getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n  }, {\n    key: \"removeControllers\",\n    value: function removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      this._each('unregister', args, this.controllers);\n    }\n  }, {\n    key: \"removeElements\",\n    value: function removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n\n      this._each('unregister', args, this.elements);\n    }\n  }, {\n    key: \"removePlugins\",\n    value: function removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n\n      this._each('unregister', args, this.plugins);\n    }\n  }, {\n    key: \"removeScales\",\n    value: function removeScales() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n\n      this._each('unregister', args, this.scales);\n    }\n  }, {\n    key: \"_each\",\n    value: function _each(method, args, typedRegistry) {\n      var me = this;\n\n      _toConsumableArray(args).forEach(function (arg) {\n        var reg = typedRegistry || me._getRegistryForType(arg);\n\n        if (typedRegistry || reg.isForType(arg) || reg === me.plugins && arg.id) {\n          me._exec(method, reg, arg);\n        } else {\n          each(arg, function (item) {\n            var itemReg = typedRegistry || me._getRegistryForType(item);\n\n            me._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_exec\",\n    value: function _exec(method, registry, component) {\n      var camelMethod = _capitalize(method);\n\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n  }, {\n    key: \"_getRegistryForType\",\n    value: function _getRegistryForType(type) {\n      for (var i = 0; i < this._typedRegistries.length; i++) {\n        var reg = this._typedRegistries[i];\n\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n\n      return this.plugins;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(id, typedRegistry, type) {\n      var item = typedRegistry.get(id);\n\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n\n      return item;\n    }\n  }]);\n\n  return Registry;\n}();\n\nvar registry = new Registry();\n\nvar PluginService = /*#__PURE__*/function () {\n  function PluginService() {\n    _classCallCheck(this, PluginService);\n\n    this._init = [];\n  }\n\n  _createClass(PluginService, [{\n    key: \"notify\",\n    value: function notify(chart, hook, args, filter) {\n      var me = this;\n\n      if (hook === 'beforeInit') {\n        me._init = me._createDescriptors(chart, true);\n\n        me._notify(me._init, chart, 'install');\n      }\n\n      var descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n\n      var result = me._notify(descriptors, chart, hook, args);\n\n      if (hook === 'destroy') {\n        me._notify(descriptors, chart, 'stop');\n\n        me._notify(me._init, chart, 'uninstall');\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(descriptors, chart, hook, args) {\n      args = args || {};\n\n      var _iterator4 = _createForOfIteratorHelper(descriptors),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var descriptor = _step4.value;\n          var plugin = descriptor.plugin;\n          var method = plugin[hook];\n          var params = [chart, args, descriptor.options];\n\n          if (callback(method, params, plugin) === false && args.cancelable) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return true;\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n  }, {\n    key: \"_descriptors\",\n    value: function _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n\n      var descriptors = this._cache = this._createDescriptors(chart);\n\n      this._notifyStateChanges(chart);\n\n      return descriptors;\n    }\n  }, {\n    key: \"_createDescriptors\",\n    value: function _createDescriptors(chart, all) {\n      var config = chart && chart.config;\n      var options = valueOrDefault(config.options && config.options.plugins, {});\n      var plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n  }, {\n    key: \"_notifyStateChanges\",\n    value: function _notifyStateChanges(chart) {\n      var previousDescriptors = this._oldCache || [];\n      var descriptors = this._cache;\n\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.plugin.id === y.plugin.id;\n          });\n        });\n      };\n\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }]);\n\n  return PluginService;\n}();\n\nfunction allPlugins(config) {\n  var plugins = [];\n  var keys = Object.keys(registry.plugins.items);\n\n  for (var i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  var local = config.plugins || [];\n\n  for (var _i = 0; _i < local.length; _i++) {\n    var plugin = local[_i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n\n  return plugins;\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, plugins, options, all) {\n  var result = [];\n  var context = chart.getContext();\n\n  for (var i = 0; i < plugins.length; i++) {\n    var plugin = plugins[i];\n    var id = plugin.id;\n    var opts = getOpts(options[id], all);\n\n    if (opts === null) {\n      continue;\n    }\n\n    result.push({\n      plugin: plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, plugin, opts, context) {\n  var keys = config.pluginScopeKeys(plugin);\n  var scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  var datasetDefaults = defaults.datasets[type] || {};\n  var datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  var axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\n\nfunction mergeScaleConfig(config, options) {\n  var chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  var configScales = options.scales || {};\n  var chartIndexAxis = getIndexAxis(config.type, options);\n  var firstIDs = Object.create(null);\n  var scales = Object.create(null);\n  Object.keys(configScales).forEach(function (id) {\n    var scaleConf = configScales[id];\n    var axis = determineAxis(id, scaleConf);\n    var defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    var defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis: axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(function (dataset) {\n    var type = dataset.type || config.type;\n    var indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    var datasetDefaults = overrides[type] || {};\n    var defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(function (defaultID) {\n      var axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      var id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis: axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(function (key) {\n    var scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  var options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nvar keyCache = new Map();\nvar keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  var keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nvar addIfFound = function addIfFound(set, obj, key) {\n  var opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nvar Config = /*#__PURE__*/function () {\n  function Config(config) {\n    _classCallCheck(this, Config);\n\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  _createClass(Config, [{\n    key: \"type\",\n    get: function get() {\n      return this._config.type;\n    },\n    set: function set(type) {\n      this._config.type = type;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._config.data;\n    },\n    set: function set(data) {\n      this._config.data = initData(data);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._config.options;\n    },\n    set: function set(options) {\n      this._config.options = options;\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this._config.plugins;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._scopeCache.clear();\n\n      this._resolverCache.clear();\n    }\n  }, {\n    key: \"datasetScopeKeys\",\n    value: function datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, function () {\n        return [[\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetAnimationScopeKeys\",\n    value: function datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), function () {\n        return [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetElementScopeKeys\",\n    value: function datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), function () {\n        return [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']];\n      });\n    }\n  }, {\n    key: \"pluginScopeKeys\",\n    value: function pluginScopeKeys(plugin) {\n      var id = plugin.id;\n      var type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), function () {\n        return [[\"plugins.\".concat(id)].concat(_toConsumableArray(plugin.additionalOptionScopes || []))];\n      });\n    }\n  }, {\n    key: \"_cachedScopes\",\n    value: function _cachedScopes(mainScope, resetCache) {\n      var _scopeCache = this._scopeCache;\n\n      var cache = _scopeCache.get(mainScope);\n\n      if (!cache || resetCache) {\n        cache = new Map();\n\n        _scopeCache.set(mainScope, cache);\n      }\n\n      return cache;\n    }\n  }, {\n    key: \"getOptionScopes\",\n    value: function getOptionScopes(mainScope, keyLists, resetCache) {\n      var options = this.options,\n          type = this.type;\n\n      var cache = this._cachedScopes(mainScope, resetCache);\n\n      var cached = cache.get(keyLists);\n\n      if (cached) {\n        return cached;\n      }\n\n      var scopes = new Set();\n      keyLists.forEach(function (keys) {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(function (key) {\n            return addIfFound(scopes, mainScope, key);\n          });\n        }\n\n        keys.forEach(function (key) {\n          return addIfFound(scopes, options, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, overrides[type] || {}, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, defaults, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, descriptors, key);\n        });\n      });\n\n      var array = _toConsumableArray(scopes);\n\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n\n      return array;\n    }\n  }, {\n    key: \"chartOptionScopes\",\n    value: function chartOptionScopes() {\n      var options = this.options,\n          type = this.type;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type: type\n      }, defaults, descriptors];\n    }\n  }, {\n    key: \"resolveNamedOptions\",\n    value: function resolveNamedOptions(scopes, names, context) {\n      var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      var result = {\n        $shared: true\n      };\n\n      var _getResolver = getResolver(this._resolverCache, scopes, prefixes),\n          resolver = _getResolver.resolver,\n          subPrefixes = _getResolver.subPrefixes;\n\n      var options = resolver;\n\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        var subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n\n      var _iterator5 = _createForOfIteratorHelper(names),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var prop = _step5.value;\n          result[prop] = options[prop];\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"createResolver\",\n    value: function createResolver(scopes, context) {\n      var prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      var descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n\n      var _getResolver2 = getResolver(this._resolverCache, scopes, prefixes),\n          resolver = _getResolver2.resolver;\n\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }]);\n\n  return Config;\n}();\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  var cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  var cacheKey = prefixes.join();\n  var cached = cache.get(cacheKey);\n\n  if (!cached) {\n    var resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver: resolver,\n      subPrefixes: prefixes.filter(function (p) {\n        return !p.toLowerCase().includes('hover');\n      })\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nfunction needContext(proxy, names) {\n  var _descriptors2 = _descriptors(proxy),\n      isScriptable = _descriptors2.isScriptable,\n      isIndexable = _descriptors2.isIndexable;\n\n  var _iterator6 = _createForOfIteratorHelper(names),\n      _step6;\n\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var prop = _step6.value;\n\n      if (isScriptable(prop) && isFunction(proxy[prop]) || isIndexable(prop) && isArray(proxy[prop])) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n\n  return false;\n}\n\nvar version = \"3.2.1\";\nvar KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nvar instances = {};\n\nvar getChart = function getChart(key) {\n  var canvas = getCanvas(key);\n  return Object.values(instances).filter(function (c) {\n    return c.canvas === canvas;\n  }).pop();\n};\n\nvar Chart = /*#__PURE__*/function () {\n  function Chart(item, config) {\n    var _this5 = this;\n\n    _classCallCheck(this, Chart);\n\n    var me = this;\n    this.config = config = new Config(config);\n    var initialCanvas = getCanvas(item);\n    var existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n\n    var options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    var context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(function () {\n      return _this5.update('resize');\n    }, options.resizeDelay || 0);\n    instances[me.id] = me;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n\n    me._initialize();\n\n    if (me.attached) {\n      me.update();\n    }\n  }\n\n  _createClass(Chart, [{\n    key: \"aspectRatio\",\n    get: function get() {\n      var _this$options3 = this.options,\n          aspectRatio = _this$options3.aspectRatio,\n          maintainAspectRatio = _this$options3.maintainAspectRatio,\n          width = this.width,\n          height = this.height,\n          _aspectRatio = this._aspectRatio;\n\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n\n      return height ? width / height : null;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.config.data;\n    },\n    set: function set(data) {\n      this.config.data = data;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(options) {\n      this.config.options = options;\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize() {\n      var me = this;\n      me.notifyPlugins('beforeInit');\n\n      if (me.options.responsive) {\n        me.resize();\n      } else {\n        retinaScale(me, me.options.devicePixelRatio);\n      }\n\n      me.bindEvents();\n      me.notifyPlugins('afterInit');\n      return me;\n    }\n  }, {\n    key: \"_initializePlatform\",\n    value: function _initializePlatform(canvas, config) {\n      if (config.platform) {\n        return new config.platform();\n      } else if (!isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return new BasicPlatform();\n      }\n\n      return new DomPlatform();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      animator.stop(this);\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width: width,\n          height: height\n        };\n      }\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(width, height) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n      var newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      var oldRatio = me.currentDevicePixelRatio;\n      var newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n\n      if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\n        return;\n      }\n\n      me.width = newSize.width;\n      me.height = newSize.height;\n      me._aspectRatio = me.aspectRatio;\n      retinaScale(me, newRatio, true);\n      me.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [me, newSize], me);\n\n      if (me.attached) {\n        if (me._doResize()) {\n          me.render();\n        }\n      }\n    }\n  }, {\n    key: \"ensureScalesHaveIDs\",\n    value: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      each(scalesOptions, function (axisOptions, axisID) {\n        axisOptions.id = axisID;\n      });\n    }\n  }, {\n    key: \"buildOrUpdateScales\",\n    value: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scaleOpts = options.scales;\n      var scales = me.scales;\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n      var items = [];\n\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(function (id) {\n          var scaleOptions = scaleOpts[id];\n          var axis = determineAxis(id, scaleOptions);\n          var isRadial = axis === 'r';\n          var isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n\n      each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var axis = determineAxis(id, scaleOptions);\n        var scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          var scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.init(scaleOptions, options);\n      });\n      each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, function (scale) {\n        layouts.configure(me, scale, scale.options);\n        layouts.addBox(me, scale);\n      });\n    }\n  }, {\n    key: \"_updateMetasetIndex\",\n    value: function _updateMetasetIndex(meta, index) {\n      var metasets = this._metasets;\n      var oldIndex = meta.index;\n\n      if (oldIndex !== index) {\n        metasets[oldIndex] = metasets[index];\n        metasets[index] = meta;\n        meta.index = index;\n      }\n    }\n  }, {\n    key: \"_updateMetasets\",\n    value: function _updateMetasets() {\n      var me = this;\n      var metasets = me._metasets;\n      var numData = me.data.datasets.length;\n      var numMeta = metasets.length;\n\n      if (numMeta > numData) {\n        for (var i = numData; i < numMeta; ++i) {\n          me._destroyDatasetMeta(i);\n        }\n\n        metasets.splice(numData, numMeta - numData);\n      }\n\n      me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n  }, {\n    key: \"_removeUnreferencedMetasets\",\n    value: function _removeUnreferencedMetasets() {\n      var me = this;\n      var metasets = me._metasets,\n          datasets = me.data.datasets;\n\n      if (metasets.length > datasets.length) {\n        delete me._stacks;\n      }\n\n      metasets.forEach(function (meta, index) {\n        if (datasets.filter(function (x) {\n          return x === meta._dataset;\n        }).length === 0) {\n          me._destroyDatasetMeta(index);\n        }\n      });\n    }\n  }, {\n    key: \"buildOrUpdateControllers\",\n    value: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      var datasets = me.data.datasets;\n      var i, ilen;\n\n      me._removeUnreferencedMetasets();\n\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        var dataset = datasets[i];\n        var meta = me.getDatasetMeta(i);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me._destroyDatasetMeta(i);\n\n          meta = me.getDatasetMeta(i);\n        }\n\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n        meta.order = dataset.order || 0;\n\n        me._updateMetasetIndex(meta, i);\n\n        meta.label = '' + dataset.label;\n        meta.visible = me.isDatasetVisible(i);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = registry.getController(type);\n          var _defaults$datasets$ty = defaults.datasets[type],\n              datasetElementType = _defaults$datasets$ty.datasetElementType,\n              dataElementType = _defaults$datasets$ty.dataElementType;\n          Object.assign(ControllerClass.prototype, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(me, i);\n          newControllers.push(meta.controller);\n        }\n      }\n\n      me._updateMetasets();\n\n      return newControllers;\n    }\n  }, {\n    key: \"_resetElements\",\n    value: function _resetElements() {\n      var me = this;\n      each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElements();\n\n      this.notifyPlugins('reset');\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var config = me.config;\n      config.update();\n      me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n      each(me.scales, function (scale) {\n        layouts.removeBox(me, scale);\n      });\n      var animsDisabled = me._animationsDisabled = !me.options.animation;\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      var existingEvents = new Set(Object.keys(me._listeners));\n      var newEvents = new Set(me.options.events);\n\n      if (!setsEqual(existingEvents, newEvents)) {\n        me.unbindEvents();\n        me.bindEvents();\n      }\n\n      me._plugins.invalidate();\n\n      if (me.notifyPlugins('beforeUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var newControllers = me.buildOrUpdateControllers();\n      me.notifyPlugins('beforeElementsUpdate');\n      var minPadding = 0;\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n        var _me$getDatasetMeta = me.getDatasetMeta(i),\n            controller = _me$getDatasetMeta.controller;\n\n        var reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n\n      me._minPadding = minPadding;\n\n      me._updateLayout(minPadding);\n\n      if (!animsDisabled) {\n        each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me._updateDatasets(mode);\n\n      me.notifyPlugins('afterUpdate', {\n        mode: mode\n      });\n\n      me._layers.sort(compare2Level('z', '_idx'));\n\n      if (me._lastEvent) {\n        me._eventHandler(me._lastEvent, true);\n      }\n\n      me.render();\n    }\n  }, {\n    key: \"_updateLayout\",\n    value: function _updateLayout(minPadding) {\n      var me = this;\n\n      if (me.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      layouts.update(me, me.width, me.height, minPadding);\n      var area = me.chartArea;\n      var noArea = area.width <= 0 || area.height <= 0;\n      me._layers = [];\n      each(me.boxes, function (box) {\n        var _me$_layers;\n\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n\n        if (box.configure) {\n          box.configure();\n        }\n\n        (_me$_layers = me._layers).push.apply(_me$_layers, _toConsumableArray(box._layers()));\n      }, me);\n\n      me._layers.forEach(function (item, index) {\n        item._idx = index;\n      });\n\n      me.notifyPlugins('afterLayout');\n    }\n  }, {\n    key: \"_updateDatasets\",\n    value: function _updateDatasets(mode) {\n      var me = this;\n      var isFunction = typeof mode === 'function';\n\n      if (me.notifyPlugins('beforeDatasetsUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me._updateDataset(i, isFunction ? mode({\n          datasetIndex: i\n        }) : mode);\n      }\n\n      me.notifyPlugins('afterDatasetsUpdate', {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"_updateDataset\",\n    value: function _updateDataset(index, mode) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        mode: mode,\n        cancelable: true\n      };\n\n      if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n\n      meta.controller._update(mode);\n\n      args.cancelable = false;\n      me.notifyPlugins('afterDatasetUpdate', args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var me = this;\n\n      if (me.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      if (animator.has(me)) {\n        if (me.attached && !animator.running(me)) {\n          animator.start(me);\n        }\n      } else {\n        me.draw();\n        onAnimationsComplete({\n          chart: me\n        });\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var i;\n\n      if (me._resizeBeforeDraw) {\n        var _me$_resizeBeforeDraw = me._resizeBeforeDraw,\n            width = _me$_resizeBeforeDraw.width,\n            height = _me$_resizeBeforeDraw.height;\n\n        me._resize(width, height);\n\n        me._resizeBeforeDraw = null;\n      }\n\n      me.clear();\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (me.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var layers = me._layers;\n\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(me.chartArea);\n      }\n\n      me._drawDatasets();\n\n      for (; i < layers.length; ++i) {\n        layers[i].draw(me.chartArea);\n      }\n\n      me.notifyPlugins('afterDraw');\n    }\n  }, {\n    key: \"_getSortedDatasetMetas\",\n    value: function _getSortedDatasetMetas(filterVisible) {\n      var me = this;\n      var metasets = me._sortedMetasets;\n      var result = [];\n      var i, ilen;\n\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        var meta = metasets[i];\n\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getSortedVisibleDatasetMetas\",\n    value: function getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n  }, {\n    key: \"_drawDatasets\",\n    value: function _drawDatasets() {\n      var me = this;\n\n      if (me.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var metasets = me.getSortedVisibleDatasetMetas();\n\n      for (var i = metasets.length - 1; i >= 0; --i) {\n        me._drawDataset(metasets[i]);\n      }\n\n      me.notifyPlugins('afterDatasetsDraw');\n    }\n  }, {\n    key: \"_drawDataset\",\n    value: function _drawDataset(meta) {\n      var me = this;\n      var ctx = me.ctx;\n      var clip = meta._clip;\n      var area = me.chartArea;\n      var args = {\n        meta: meta,\n        index: meta.index,\n        cancelable: true\n      };\n\n      if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n      meta.controller.draw();\n      unclipArea(ctx);\n      args.cancelable = false;\n      me.notifyPlugins('afterDatasetDraw', args);\n    }\n  }, {\n    key: \"getElementsAtEventForMode\",\n    value: function getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n\n      return [];\n    }\n  }, {\n    key: \"getDatasetMeta\",\n    value: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n      var metasets = me._metasets;\n      var meta = metasets.filter(function (x) {\n        return x && x._dataset === dataset;\n      }).pop();\n\n      if (!meta) {\n        meta = metasets[datasetIndex] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n      }\n\n      return meta;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = {\n        chart: this,\n        type: 'chart'\n      });\n    }\n  }, {\n    key: \"getVisibleDatasetCount\",\n    value: function getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n  }, {\n    key: \"isDatasetVisible\",\n    value: function isDatasetVisible(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n\n      if (!dataset) {\n        return false;\n      }\n\n      var meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n  }, {\n    key: \"setDatasetVisibility\",\n    value: function setDatasetVisibility(datasetIndex, visible) {\n      var meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n  }, {\n    key: \"toggleDataVisibility\",\n    value: function toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"getDataVisibility\",\n    value: function getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"_updateDatasetVisibility\",\n    value: function _updateDatasetVisibility(datasetIndex, visible) {\n      var me = this;\n      var mode = visible ? 'show' : 'hide';\n      var meta = me.getDatasetMeta(datasetIndex);\n\n      var anims = meta.controller._resolveAnimations(undefined, mode);\n\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible: visible\n      });\n      me.update(function (ctx) {\n        return ctx.datasetIndex === datasetIndex ? mode : undefined;\n      });\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(datasetIndex) {\n      this._updateDatasetVisibility(datasetIndex, false);\n    }\n  }, {\n    key: \"show\",\n    value: function show(datasetIndex) {\n      this._updateDatasetVisibility(datasetIndex, true);\n    }\n  }, {\n    key: \"_destroyDatasetMeta\",\n    value: function _destroyDatasetMeta(datasetIndex) {\n      var me = this;\n      var meta = me._metasets && me._metasets[datasetIndex];\n\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n\n        delete me._metasets[datasetIndex];\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var me = this;\n      var canvas = me.canvas,\n          ctx = me.ctx;\n      var i, ilen;\n      me.stop();\n      animator.remove(me);\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n\n      me.config.clearCache();\n\n      if (canvas) {\n        me.unbindEvents();\n        clearCanvas(canvas, ctx);\n        me.platform.releaseContext(ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      me.notifyPlugins('destroy');\n      delete instances[me.id];\n    }\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      var _this$canvas;\n\n      return (_this$canvas = this.canvas).toDataURL.apply(_this$canvas, arguments);\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n      var platform = me.platform;\n\n      var _add = function _add(type, listener) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      };\n\n      var _remove = function _remove(type, listener) {\n        if (listeners[type]) {\n          platform.removeEventListener(me, type, listener);\n          delete listeners[type];\n        }\n      };\n\n      var listener = function listener(e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n\n        me._eventHandler(e);\n      };\n\n      each(me.options.events, function (type) {\n        return _add(type, listener);\n      });\n\n      if (me.options.responsive) {\n        listener = function listener(width, height) {\n          if (me.canvas) {\n            me.resize(width, height);\n          }\n        };\n\n        var detached;\n\n        var attached = function attached() {\n          _remove('attach', attached);\n\n          me.attached = true;\n          me.resize();\n\n          _add('resize', listener);\n\n          _add('detach', detached);\n        };\n\n        detached = function detached() {\n          me.attached = false;\n\n          _remove('resize', listener);\n\n          _add('attach', attached);\n        };\n\n        if (platform.isAttached(me.canvas)) {\n          attached();\n        } else {\n          detached();\n        }\n      } else {\n        me.attached = true;\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      me._listeners = {};\n      each(listeners, function (listener, type) {\n        me.platform.removeEventListener(me, type, listener);\n      });\n    }\n  }, {\n    key: \"updateHoverStyle\",\n    value: function updateHoverStyle(items, mode, enabled) {\n      var prefix = enabled ? 'set' : 'remove';\n      var meta, item, i, ilen;\n\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        var controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements) {\n      var me = this;\n      var lastActive = me._active || [];\n      var active = activeElements.map(function (_ref) {\n        var datasetIndex = _ref.datasetIndex,\n            index = _ref.index;\n        var meta = me.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(active, lastActive);\n\n      if (changed) {\n        me._active = active;\n\n        me._updateHoverStyles(active, lastActive);\n      }\n    }\n  }, {\n    key: \"notifyPlugins\",\n    value: function notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n  }, {\n    key: \"_updateHoverStyles\",\n    value: function _updateHoverStyles(active, lastActive, replay) {\n      var me = this;\n      var hoverOptions = me.options.hover;\n\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.datasetIndex === y.datasetIndex && x.index === y.index;\n          });\n        });\n      };\n\n      var deactivated = diff(lastActive, active);\n      var activated = replay ? active : diff(active, lastActive);\n\n      if (deactivated.length) {\n        me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n\n      if (activated.length && hoverOptions.mode) {\n        me.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n  }, {\n    key: \"_eventHandler\",\n    value: function _eventHandler(e, replay) {\n      var _this6 = this;\n\n      var me = this;\n      var args = {\n        event: e,\n        replay: replay,\n        cancelable: true\n      };\n\n      var eventFilter = function eventFilter(plugin) {\n        return (plugin.options.events || _this6.options.events).includes(e.type);\n      };\n\n      if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n\n      var changed = me._handleEvent(e, replay);\n\n      args.cancelable = false;\n      me.notifyPlugins('afterEvent', args, eventFilter);\n\n      if (changed || args.changed) {\n        me.render();\n      }\n\n      return me;\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e, replay) {\n      var me = this;\n      var _me$_active = me._active,\n          lastActive = _me$_active === void 0 ? [] : _me$_active,\n          options = me.options;\n      var hoverOptions = options.hover;\n      var useFinalPosition = replay;\n      var active = [];\n      var changed = false;\n      var lastEvent = null;\n\n      if (e.type !== 'mouseout') {\n        active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n        lastEvent = e.type === 'click' ? me._lastEvent : e;\n      }\n\n      me._lastEvent = null;\n\n      if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n        callback(options.onHover, [e, active, me], me);\n\n        if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n          callback(options.onClick, [e, active, me], me);\n        }\n      }\n\n      changed = !_elementsEqual(active, lastActive);\n\n      if (changed || replay) {\n        me._active = active;\n\n        me._updateHoverStyles(active, lastActive, replay);\n      }\n\n      me._lastEvent = lastEvent;\n      return changed;\n    }\n  }]);\n\n  return Chart;\n}();\n\nvar invalidatePlugins = function invalidatePlugins() {\n  return each(Chart.instances, function (chart) {\n    return chart._plugins.invalidate();\n  });\n};\n\nvar enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable: enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable: enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable: enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable: enumerable,\n    value: registry\n  },\n  version: {\n    enumerable: enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable: enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.add.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.remove.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element) {\n  var startAngle = element.startAngle,\n      endAngle = element.endAngle,\n      pixelMargin = element.pixelMargin,\n      x = element.x,\n      y = element.y,\n      outerRadius = element.outerRadius,\n      innerRadius = element.innerRadius;\n  var angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  var o = toRadiusCorners(arc.options.borderRadius);\n  var halfThickness = (outerRadius - innerRadius) / 2;\n  var innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  var computeOuterLimit = function computeOuterLimit(val) {\n    var outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n\nfunction pathArc(ctx, element) {\n  var x = element.x,\n      y = element.y,\n      startAngle = element.startAngle,\n      endAngle = element.endAngle,\n      pixelMargin = element.pixelMargin;\n  var outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  var innerRadius = element.innerRadius + pixelMargin;\n\n  var _parseBorderRadius$ = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle),\n      outerStart = _parseBorderRadius$.outerStart,\n      outerEnd = _parseBorderRadius$.outerEnd,\n      innerStart = _parseBorderRadius$.innerStart,\n      innerEnd = _parseBorderRadius$.innerEnd;\n\n  var outerStartAdjustedRadius = outerRadius - outerStart;\n  var outerEndAdjustedRadius = outerRadius - outerEnd;\n  var outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  var outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  var innerStartAdjustedRadius = innerRadius + innerStart;\n  var innerEndAdjustedRadius = innerRadius + innerEnd;\n  var innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  var innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n\n  if (outerEnd > 0) {\n    var pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n\n  var p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n\n  if (innerEnd > 0) {\n    var _pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n\n    ctx.arc(_pCenter.x, _pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n\n  if (innerStart > 0) {\n    var _pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n\n    ctx.arc(_pCenter2.x, _pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n\n  var p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n\n  if (outerStart > 0) {\n    var _pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n\n    ctx.arc(_pCenter3.x, _pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element) {\n  if (element.fullCircles) {\n    element.endAngle = element.startAngle + TAU;\n    pathArc(ctx, element);\n\n    for (var i = 0; i < element.fullCircles; ++i) {\n      ctx.fill();\n    }\n  }\n\n  if (!isNaN(element.circumference)) {\n    element.endAngle = element.startAngle + element.circumference % TAU;\n  }\n\n  pathArc(ctx, element);\n  ctx.fill();\n}\n\nfunction drawFullCircleBorders(ctx, element, inner) {\n  var x = element.x,\n      y = element.y,\n      startAngle = element.startAngle,\n      endAngle = element.endAngle,\n      pixelMargin = element.pixelMargin;\n  var outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  var innerRadius = element.innerRadius + pixelMargin;\n  var i;\n\n  if (inner) {\n    element.endAngle = element.startAngle + TAU;\n    clipArc(ctx, element);\n    element.endAngle = endAngle;\n\n    if (element.endAngle === element.startAngle) {\n      element.endAngle += TAU;\n      element.fullCircles--;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\n\nfunction drawBorder(ctx, element) {\n  var options = element.options;\n  var inner = options.borderAlign === 'inner';\n\n  if (!options.borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n\n  if (inner) {\n    clipArc(ctx, element);\n  }\n\n  pathArc(ctx, element);\n  ctx.stroke();\n}\n\nvar ArcElement = /*#__PURE__*/function (_Element2) {\n  _inherits(ArcElement, _Element2);\n\n  var _super12 = _createSuper(ArcElement);\n\n  function ArcElement(cfg) {\n    var _this7;\n\n    _classCallCheck(this, ArcElement);\n\n    _this7 = _super12.call(this);\n    _this7.options = undefined;\n    _this7.circumference = undefined;\n    _this7.startAngle = undefined;\n    _this7.endAngle = undefined;\n    _this7.innerRadius = undefined;\n    _this7.outerRadius = undefined;\n    _this7.pixelMargin = 0;\n    _this7.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this7), cfg);\n    }\n\n    return _this7;\n  }\n\n  _createClass(ArcElement, [{\n    key: \"inRange\",\n    value: function inRange(chartX, chartY, useFinalPosition) {\n      var point = this.getProps(['x', 'y'], useFinalPosition);\n\n      var _getAngleFromPoint = getAngleFromPoint(point, {\n        x: chartX,\n        y: chartY\n      }),\n          angle = _getAngleFromPoint.angle,\n          distance = _getAngleFromPoint.distance;\n\n      var _this$getProps2 = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n          startAngle = _this$getProps2.startAngle,\n          endAngle = _this$getProps2.endAngle,\n          innerRadius = _this$getProps2.innerRadius,\n          outerRadius = _this$getProps2.outerRadius,\n          circumference = _this$getProps2.circumference;\n\n      var betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n      var withinRadius = distance >= innerRadius && distance <= outerRadius;\n      return betweenAngles && withinRadius;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius'], useFinalPosition),\n          x = _this$getProps3.x,\n          y = _this$getProps3.y,\n          startAngle = _this$getProps3.startAngle,\n          endAngle = _this$getProps3.endAngle,\n          innerRadius = _this$getProps3.innerRadius,\n          outerRadius = _this$getProps3.outerRadius;\n\n      var halfAngle = (startAngle + endAngle) / 2;\n      var halfRadius = (innerRadius + outerRadius) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n  }, {\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var me = this;\n      var options = me.options;\n      var offset = options.offset || 0;\n      me.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      me.fullCircles = Math.floor(me.circumference / TAU);\n\n      if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n        return;\n      }\n\n      ctx.save();\n\n      if (offset && me.circumference < TAU) {\n        var halfAngle = (me.startAngle + me.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n      }\n\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      drawArc(ctx, me);\n      drawBorder(ctx, me);\n      ctx.restore();\n    }\n  }]);\n\n  return ArcElement;\n}(Element);\n\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options) {\n  var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var count = points.length;\n  var _params$start = params.start,\n      paramsStart = _params$start === void 0 ? 0 : _params$start,\n      _params$end = params.end,\n      paramsEnd = _params$end === void 0 ? count - 1 : _params$end;\n  var segmentStart = segment.start,\n      segmentEnd = segment.end;\n  var start = Math.max(paramsStart, segmentStart);\n  var end = Math.min(paramsEnd, segmentEnd);\n  var outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count: count,\n    start: start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  var points = line.points,\n      options = line.options;\n\n  var _pathVars = pathVars(points, segment, params),\n      count = _pathVars.count,\n      start = _pathVars.start,\n      loop = _pathVars.loop,\n      ilen = _pathVars.ilen;\n\n  var lineMethod = getLineMethod(options);\n\n  var _ref2 = params || {},\n      _ref2$move = _ref2.move,\n      move = _ref2$move === void 0 ? true : _ref2$move,\n      reverse = _ref2.reverse;\n\n  var i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  var points = line.points;\n\n  var _pathVars2 = pathVars(points, segment, params),\n      count = _pathVars2.count,\n      start = _pathVars2.start,\n      ilen = _pathVars2.ilen;\n\n  var _ref3 = params || {},\n      _ref3$move = _ref3.move,\n      move = _ref3$move === void 0 ? true : _ref3$move,\n      reverse = _ref3.reverse;\n\n  var avgX = 0;\n  var countX = 0;\n  var i, point, prevX, minY, maxY, lastY;\n\n  var pointIndex = function pointIndex(index) {\n    return (start + (reverse ? ilen - index : index)) % count;\n  };\n\n  var drawX = function drawX() {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    var x = point.x;\n    var y = point.y;\n    var truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  var opts = line.options;\n  var borderDash = opts.borderDash && opts.borderDash.length;\n  var useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  var path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  var segments = line.segments,\n      options = line.options;\n\n  var segmentMethod = _getSegmentMethod(line);\n\n  var _iterator7 = _createForOfIteratorHelper(segments),\n      _step7;\n\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var segment = _step7.value;\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n\n      if (segmentMethod(ctx, line, segment, {\n        start: start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n\n      ctx.stroke();\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n}\n\nvar usePath2D = typeof Path2D === 'function';\n\nfunction _draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nvar LineElement = /*#__PURE__*/function (_Element3) {\n  _inherits(LineElement, _Element3);\n\n  var _super13 = _createSuper(LineElement);\n\n  function LineElement(cfg) {\n    var _this8;\n\n    _classCallCheck(this, LineElement);\n\n    _this8 = _super13.call(this);\n    _this8.animated = true;\n    _this8.options = undefined;\n    _this8._loop = undefined;\n    _this8._fullLoop = undefined;\n    _this8._path = undefined;\n    _this8._points = undefined;\n    _this8._segments = undefined;\n    _this8._decimated = false;\n    _this8._pointsUpdated = false;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this8), cfg);\n    }\n\n    return _this8;\n  }\n\n  _createClass(LineElement, [{\n    key: \"updateControlPoints\",\n    value: function updateControlPoints(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n        var loop = options.spanGaps ? me._loop : me._fullLoop;\n\n        _updateBezierControlPoints(me._points, options, chartArea, loop);\n\n        me._pointsUpdated = true;\n      }\n    }\n  }, {\n    key: \"points\",\n    get: function get() {\n      return this._points;\n    },\n    set: function set(points) {\n      var me = this;\n      me._points = points;\n      delete me._segments;\n      delete me._path;\n      me._pointsUpdated = false;\n    }\n  }, {\n    key: \"segments\",\n    get: function get() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      var segments = this.segments;\n      var points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      var segments = this.segments;\n      var points = this.points;\n      var count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point, property) {\n      var me = this;\n      var options = me.options;\n      var value = point[property];\n      var points = me.points;\n\n      var segments = _boundSegments(me, {\n        property: property,\n        start: value,\n        end: value\n      });\n\n      if (!segments.length) {\n        return;\n      }\n\n      var result = [];\n\n      var _interpolate = _getInterpolationMethod(options);\n\n      var i, ilen;\n\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        var _segments$i = segments[i],\n            start = _segments$i.start,\n            end = _segments$i.end;\n        var p1 = points[start];\n        var p2 = points[end];\n\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n\n        var t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n        var interpolated = _interpolate(p1, p2, t, options.stepped);\n\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n\n      return result.length === 1 ? result[0] : result;\n    }\n  }, {\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, segment, params) {\n      var segmentMethod = _getSegmentMethod(this);\n\n      return segmentMethod(ctx, this, segment, params);\n    }\n  }, {\n    key: \"path\",\n    value: function path(ctx, start, count) {\n      var me = this;\n      var segments = me.segments;\n\n      var segmentMethod = _getSegmentMethod(me);\n\n      var loop = me._loop;\n      start = start || 0;\n      count = count || me.points.length - start;\n\n      var _iterator8 = _createForOfIteratorHelper(segments),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var segment = _step8.value;\n          loop &= segmentMethod(ctx, me, segment, {\n            start: start,\n            end: start + count - 1\n          });\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n\n      return !!loop;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, chartArea, start, count) {\n      var me = this;\n      var options = me.options || {};\n      var points = me.points || [];\n\n      if (!points.length || !options.borderWidth) {\n        return;\n      }\n\n      ctx.save();\n\n      _draw(ctx, me, start, count);\n\n      ctx.restore();\n\n      if (me.animated) {\n        me._pointsUpdated = false;\n        me._path = undefined;\n      }\n    }\n  }]);\n\n  return LineElement;\n}(Element);\n\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'fill';\n  }\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  var options = el.options;\n\n  var _el$getProps = el.getProps([axis], useFinalPosition),\n      value = _el$getProps[axis];\n\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nvar PointElement = /*#__PURE__*/function (_Element4) {\n  _inherits(PointElement, _Element4);\n\n  var _super14 = _createSuper(PointElement);\n\n  function PointElement(cfg) {\n    var _this9;\n\n    _classCallCheck(this, PointElement);\n\n    _this9 = _super14.call(this);\n    _this9.options = undefined;\n    _this9.parsed = undefined;\n    _this9.skip = undefined;\n    _this9.stop = undefined;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this9), cfg);\n    }\n\n    return _this9;\n  }\n\n  _createClass(PointElement, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var options = this.options;\n\n      var _this$getProps4 = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps4.x,\n          y = _this$getProps4.y;\n\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps5 = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps5.x,\n          y = _this$getProps5.y;\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"size\",\n    value: function size(options) {\n      options = options || this.options || {};\n      var radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      var borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var me = this;\n      var options = me.options;\n\n      if (me.skip || options.radius < 0.1) {\n        return;\n      }\n\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, me.x, me.y);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var options = this.options || {};\n      return options.radius + options.hitRadius;\n    }\n  }]);\n\n  return PointElement;\n}(Element);\n\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  var _bar$getProps = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition),\n      x = _bar$getProps.x,\n      y = _bar$getProps.y,\n      base = _bar$getProps.base,\n      width = _bar$getProps.width,\n      height = _bar$getProps.height;\n\n  var left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\n\nfunction parseBorderSkipped(bar) {\n  var edge = bar.options.borderSkipped;\n  var res = {};\n\n  if (!edge) {\n    return res;\n  }\n\n  edge = bar.horizontal ? parseEdge(edge, 'left', 'right', bar.base > bar.x) : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  var value = bar.options.borderWidth;\n  var skip = parseBorderSkipped(bar);\n  var o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  var _bar$getProps2 = bar.getProps(['enableBorderRadius']),\n      enableBorderRadius = _bar$getProps2.enableBorderRadius;\n\n  var value = bar.options.borderRadius;\n  var o = toTRBLCorners(value);\n  var maxR = Math.min(maxW, maxH);\n  var skip = parseBorderSkipped(bar);\n  var enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  var bounds = getBarBounds(bar);\n  var width = bounds.right - bounds.left;\n  var height = bounds.bottom - bounds.top;\n  var border = parseBorderWidth(bar, width / 2, height / 2);\n  var radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius: radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction _inRange(bar, x, y, useFinalPosition) {\n  var skipX = x === null;\n  var skipY = y === null;\n  var skipBoth = skipX && skipY;\n  var bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nvar BarElement = /*#__PURE__*/function (_Element5) {\n  _inherits(BarElement, _Element5);\n\n  var _super15 = _createSuper(BarElement);\n\n  function BarElement(cfg) {\n    var _this10;\n\n    _classCallCheck(this, BarElement);\n\n    _this10 = _super15.call(this);\n    _this10.options = undefined;\n    _this10.horizontal = undefined;\n    _this10.base = undefined;\n    _this10.width = undefined;\n    _this10.height = undefined;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this10), cfg);\n    }\n\n    return _this10;\n  }\n\n  _createClass(BarElement, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options;\n\n      var _boundingRects = boundingRects(this),\n          inner = _boundingRects.inner,\n          outer = _boundingRects.outer;\n\n      var addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, outer);\n        ctx.clip();\n        addRectPath(ctx, inner);\n        ctx.fillStyle = options.borderColor;\n        ctx.fill('evenodd');\n      }\n\n      ctx.beginPath();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      return _inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return _inRange(this, mouseX, null, useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return _inRange(this, null, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps6 = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition),\n          x = _this$getProps6.x,\n          y = _this$getProps6.y,\n          base = _this$getProps6.base,\n          horizontal = _this$getProps6.horizontal;\n\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }]);\n\n  return BarElement;\n}(Element);\n\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  var samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  var decimated = [];\n  var bucketWidth = (count - 2) / (samples - 2);\n  var sampledIndex = 0;\n  var endIndex = start + count - 1;\n  var a = start;\n  var i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    var avgX = 0;\n    var avgY = 0;\n    var j = void 0;\n    var avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    var avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    var rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    var rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var _data$a = data[a],\n        pointAx = _data$a.x,\n        pointAy = _data$a.y;\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  var avgX = 0;\n  var countX = 0;\n  var i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  var decimated = [];\n  var endIndex = start + count - 1;\n  var xMin = data[start].x;\n  var xMax = data[endIndex].x;\n  var dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    var truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      var lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        var intermediateIndex1 = Math.min(minIndex, maxIndex);\n        var intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex1]), {}, {\n            x: avgX\n          }));\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex2]), {}, {\n            x: avgX\n          }));\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    var data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(function (dataset) {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  var pointCount = points.length;\n  var start = 0;\n  var count;\n  var iScale = meta.iScale;\n\n  var _iScale$getUserBounds2 = iScale.getUserBounds(),\n      min = _iScale$getUserBounds2.min,\n      max = _iScale$getUserBounds2.max,\n      minDefined = _iScale$getUserBounds2.minDefined,\n      maxDefined = _iScale$getUserBounds2.maxDefined;\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start: start,\n    count: count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: function beforeElementsUpdate(chart, args, options) {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    var availableWidth = chart.width;\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      var _data = dataset._data,\n          indexAxis = dataset.indexAxis;\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (meta.type !== 'line') {\n        return;\n      }\n\n      var xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      var _getStartAndCountOfVi2 = getStartAndCountOfVisiblePointsSimplified(meta, data),\n          start = _getStartAndCountOfVi2.start,\n          count = _getStartAndCountOfVi2.count;\n\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function get() {\n            return this._decimated;\n          },\n          set: function set(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      var decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n  destroy: function destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  var meta = chart.getDatasetMeta(index);\n  var visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction parseFillOption(line) {\n  var options = line.options;\n  var fillOption = options.fill;\n  var fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction decodeFill(line, index, count) {\n  var fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  var target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\n\nfunction computeLinearBoundary(source) {\n  var _source$scale = source.scale,\n      scale = _source$scale === void 0 ? {} : _source$scale,\n      fill = source.fill;\n  var target = null;\n  var horizontal;\n\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n\n  return null;\n}\n\nvar simpleArc = /*#__PURE__*/function () {\n  function simpleArc(opts) {\n    _classCallCheck(this, simpleArc);\n\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  _createClass(simpleArc, [{\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, bounds, opts) {\n      var x = this.x,\n          y = this.y,\n          radius = this.radius;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point) {\n      var x = this.x,\n          y = this.y,\n          radius = this.radius;\n      var angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle: angle\n      };\n    }\n  }]);\n\n  return simpleArc;\n}();\n\nfunction computeCircularBoundary(source) {\n  var scale = source.scale,\n      fill = source.fill;\n  var options = scale.options;\n  var length = scale.getLabels().length;\n  var target = [];\n  var start = options.reverse ? scale.max : scale.min;\n  var end = options.reverse ? scale.min : scale.max;\n  var i, center, value;\n\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction computeBoundary(source) {\n  var scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction pointsFromSegments(boundary, line) {\n  var _ref4 = boundary || {},\n      _ref4$x = _ref4.x,\n      x = _ref4$x === void 0 ? null : _ref4$x,\n      _ref4$y = _ref4.y,\n      y = _ref4$y === void 0 ? null : _ref4$y;\n\n  var linePoints = line.points;\n  var points = [];\n  line.segments.forEach(function (segment) {\n    var first = linePoints[segment.start];\n    var last = linePoints[segment.end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y: y\n      });\n      points.push({\n        x: last.x,\n        y: y\n      });\n    } else if (x !== null) {\n      points.push({\n        x: x,\n        y: first.y\n      });\n      points.push({\n        x: x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction buildStackLine(source) {\n  var chart = source.chart,\n      scale = source.scale,\n      index = source.index,\n      line = source.line;\n  var points = [];\n  var segments = line.segments;\n  var sourcePoints = line.points;\n  var linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n\n    for (var j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points: points,\n    options: {}\n  });\n}\n\nvar isLineAndNotInHideAnimation = function isLineAndNotInHideAnimation(meta) {\n  return meta.type === 'line' && !meta.hidden;\n};\n\nfunction getLinesBelow(chart, index) {\n  var below = [];\n  var metas = chart.getSortedVisibleDatasetMetas();\n\n  for (var i = 0; i < metas.length; i++) {\n    var meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  var postponed = [];\n\n  for (var j = 0; j < linesBelow.length; j++) {\n    var line = linesBelow[j];\n\n    var _findPoint = findPoint(line, sourcePoint, 'x'),\n        first = _findPoint.first,\n        last = _findPoint.last,\n        point = _findPoint.point;\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push.apply(points, postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  var point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  var pointValue = point[property];\n  var segments = line.segments;\n  var linePoints = line.points;\n  var first = false;\n  var last = false;\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var firstValue = linePoints[segment.start][property];\n    var lastValue = linePoints[segment.end][property];\n\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first: first,\n    last: last,\n    point: point\n  };\n}\n\nfunction getTarget(source) {\n  var chart = source.chart,\n      fill = source.fill,\n      line = source.line;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n\n  var boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return createBoundaryLine(boundary, line);\n}\n\nfunction createBoundaryLine(boundary, line) {\n  var points = [];\n  var _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points: points,\n    options: {\n      tension: 0\n    },\n    _loop: _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  var start = first[property];\n  var end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property: property,\n    start: start,\n    end: end\n  };\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _segments(line, target, property) {\n  var segments = line.segments;\n  var points = line.points;\n  var tpoints = target.points;\n  var parts = [];\n\n  var _iterator9 = _createForOfIteratorHelper(segments),\n      _step9;\n\n  try {\n    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n      var segment = _step9.value;\n      var bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[segment.start],\n          end: points[segment.end]\n        });\n        continue;\n      }\n\n      var targetSegments = _boundSegments(target, bounds);\n\n      var _iterator10 = _createForOfIteratorHelper(targetSegments),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var tgt = _step10.value;\n          var subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n          var fillSources = _boundSegment(segment, points, subBounds);\n\n          var _iterator11 = _createForOfIteratorHelper(fillSources),\n              _step11;\n\n          try {\n            for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n              var fillSource = _step11.value;\n              parts.push({\n                source: fillSource,\n                target: tgt,\n                start: _defineProperty({}, property, _getEdge(bounds, subBounds, 'start', Math.max)),\n                end: _defineProperty({}, property, _getEdge(bounds, subBounds, 'end', Math.min))\n              });\n            }\n          } catch (err) {\n            _iterator11.e(err);\n          } finally {\n            _iterator11.f();\n          }\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n    }\n  } catch (err) {\n    _iterator9.e(err);\n  } finally {\n    _iterator9.f();\n  }\n\n  return parts;\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  var _scale$chart$chartAre = scale.chart.chartArea,\n      top = _scale$chart$chartAre.top,\n      bottom = _scale$chart$chartAre.bottom;\n\n  var _ref5 = bounds || {},\n      property = _ref5.property,\n      start = _ref5.start,\n      end = _ref5.end;\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  var interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nfunction _fill(ctx, cfg) {\n  var line = cfg.line,\n      target = cfg.target,\n      property = cfg.property,\n      color = cfg.color,\n      scale = cfg.scale;\n\n  var segments = _segments(line, target, property);\n\n  var _iterator12 = _createForOfIteratorHelper(segments),\n      _step12;\n\n  try {\n    for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n      var _step12$value = _step12.value,\n          src = _step12$value.source,\n          tgt = _step12$value.target,\n          start = _step12$value.start,\n          end = _step12$value.end;\n      var _src$style = src.style;\n      _src$style = _src$style === void 0 ? {} : _src$style;\n      var _src$style$background = _src$style.backgroundColor,\n          backgroundColor = _src$style$background === void 0 ? color : _src$style$background;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, getBounds(property, start, end));\n      ctx.beginPath();\n      var lineLoop = !!line.pathSegment(ctx, src);\n\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      var targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      var loop = lineLoop && targetLoop;\n\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  } catch (err) {\n    _iterator12.e(err);\n  } finally {\n    _iterator12.f();\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  var line = cfg.line,\n      target = cfg.target,\n      above = cfg.above,\n      below = cfg.below,\n      area = cfg.area,\n      scale = cfg.scale;\n  var property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n\n    _fill(ctx, {\n      line: line,\n      target: target,\n      color: above,\n      scale: scale,\n      property: property\n    });\n\n    ctx.restore();\n    ctx.save();\n\n    _clip(ctx, target, area.bottom);\n  }\n\n  _fill(ctx, {\n    line: line,\n    target: target,\n    color: below,\n    scale: scale,\n    property: property\n  });\n\n  ctx.restore();\n}\n\nfunction drawfill(ctx, source, area) {\n  var target = getTarget(source);\n  var line = source.line,\n      scale = source.scale,\n      axis = source.axis;\n  var lineOpts = line.options;\n  var fillOption = lineOpts.fill;\n  var color = lineOpts.backgroundColor;\n\n  var _ref6 = fillOption || {},\n      _ref6$above = _ref6.above,\n      above = _ref6$above === void 0 ? color : _ref6$above,\n      _ref6$below = _ref6.below,\n      below = _ref6$below === void 0 ? color : _ref6$below;\n\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line: line,\n      target: target,\n      above: above,\n      below: below,\n      area: area,\n      scale: scale,\n      axis: axis\n    });\n    unclipArea(ctx);\n  }\n}\n\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, _args, options) {\n    var count = (chart.data.datasets || []).length;\n    var sources = [];\n    var meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart: chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line: line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw: function beforeDraw(chart, _args, options) {\n    var draw = options.drawTime === 'beforeDraw';\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    var area = chart.chartArea;\n\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area);\n\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    var metasets = chart.getSortedVisibleDatasetMetas();\n\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args, options) {\n    var source = args.meta.$filler;\n\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nvar getBoxSize = function getBoxSize(labelOpts, fontSize) {\n  var _labelOpts$boxHeight = labelOpts.boxHeight,\n      boxHeight = _labelOpts$boxHeight === void 0 ? fontSize : _labelOpts$boxHeight,\n      _labelOpts$boxWidth = labelOpts.boxWidth,\n      boxWidth = _labelOpts$boxWidth === void 0 ? fontSize : _labelOpts$boxWidth;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth: boxWidth,\n    boxHeight: boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nvar itemsEqual = function itemsEqual(a, b) {\n  return a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n};\n\nvar Legend = /*#__PURE__*/function (_Element6) {\n  _inherits(Legend, _Element6);\n\n  var _super16 = _createSuper(Legend);\n\n  function Legend(config) {\n    var _this11;\n\n    _classCallCheck(this, Legend);\n\n    _this11 = _super16.call(this);\n    _this11._added = false;\n    _this11.legendHitBoxes = [];\n    _this11._hoveredItem = null;\n    _this11.doughnutMode = false;\n    _this11.chart = config.chart;\n    _this11.options = config.options;\n    _this11.ctx = config.ctx;\n    _this11.legendItems = undefined;\n    _this11.columnSizes = undefined;\n    _this11.lineWidths = undefined;\n    _this11.maxHeight = undefined;\n    _this11.maxWidth = undefined;\n    _this11.top = undefined;\n    _this11.bottom = undefined;\n    _this11.left = undefined;\n    _this11.right = undefined;\n    _this11.height = undefined;\n    _this11.width = undefined;\n    _this11._margins = undefined;\n    _this11.position = undefined;\n    _this11.weight = undefined;\n    _this11.fullSize = undefined;\n    return _this11;\n  }\n\n  _createClass(Legend, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me._margins = margins;\n      me.setDimensions();\n      me.buildLabels();\n      me.fit();\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight;\n        me.top = 0;\n        me.bottom = me.height;\n      }\n    }\n  }, {\n    key: \"buildLabels\",\n    value: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort(function (a, b) {\n          return labelOpts.sort(a, b, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var options = me.options,\n          ctx = me.ctx;\n\n      if (!options.display) {\n        me.width = me.height = 0;\n        return;\n      }\n\n      var labelOpts = options.labels;\n      var labelFont = toFont(labelOpts.font);\n      var fontSize = labelFont.size;\n\n      var titleHeight = me._computeTitleHeight();\n\n      var _getBoxSize = getBoxSize(labelOpts, fontSize),\n          boxWidth = _getBoxSize.boxWidth,\n          itemHeight = _getBoxSize.itemHeight;\n\n      var width, height;\n      ctx.font = labelFont.string;\n\n      if (me.isHorizontal()) {\n        width = me.maxWidth;\n        height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = me.maxHeight;\n        width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      }\n\n      me.width = Math.min(width, options.maxWidth || me.maxWidth);\n      me.height = Math.min(height, options.maxHeight || me.maxHeight);\n    }\n  }, {\n    key: \"_fitRows\",\n    value: function _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      var me = this;\n      var ctx = me.ctx,\n          maxWidth = me.maxWidth,\n          padding = me.options.labels.padding;\n      var hitboxes = me.legendHitBoxes = [];\n      var lineWidths = me.lineWidths = [0];\n      var lineHeight = itemHeight + padding;\n      var totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      var row = -1;\n      var top = -lineHeight;\n      me.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n\n        hitboxes[i] = {\n          left: 0,\n          top: top,\n          row: row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n  }, {\n    key: \"_fitCols\",\n    value: function _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n      var me = this;\n      var ctx = me.ctx,\n          maxHeight = me.maxHeight,\n          padding = me.options.labels.padding;\n      var hitboxes = me.legendHitBoxes = [];\n      var columnSizes = me.columnSizes = [];\n      var heightLimit = maxHeight - titleHeight;\n      var totalWidth = padding;\n      var currentColWidth = 0;\n      var currentColHeight = 0;\n      var left = 0;\n      var top = 0;\n      var col = 0;\n      me.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n        if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          top = 0;\n          currentColWidth = currentColHeight = 0;\n        }\n\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += fontSize + padding;\n        hitboxes[i] = {\n          left: left,\n          top: top,\n          col: col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        top += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n  }, {\n    key: \"adjustHitBoxes\",\n    value: function adjustHitBoxes() {\n      var me = this;\n\n      if (!me.options.display) {\n        return;\n      }\n\n      var titleHeight = me._computeTitleHeight();\n\n      var hitboxes = me.legendHitBoxes,\n          _me$options6 = me.options,\n          align = _me$options6.align,\n          padding = _me$options6.labels.padding;\n\n      if (this.isHorizontal()) {\n        var row = 0;\n\n        var left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n\n        var _iterator13 = _createForOfIteratorHelper(hitboxes),\n            _step13;\n\n        try {\n          for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n            var hitbox = _step13.value;\n\n            if (row !== hitbox.row) {\n              row = hitbox.row;\n              left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n            }\n\n            hitbox.top += me.top + titleHeight + padding;\n            hitbox.left = left;\n            left += hitbox.width + padding;\n          }\n        } catch (err) {\n          _iterator13.e(err);\n        } finally {\n          _iterator13.f();\n        }\n      } else {\n        var col = 0;\n\n        var top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n\n        var _iterator14 = _createForOfIteratorHelper(hitboxes),\n            _step14;\n\n        try {\n          for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n            var _hitbox = _step14.value;\n\n            if (_hitbox.col !== col) {\n              col = _hitbox.col;\n              top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n            }\n\n            _hitbox.top = top;\n            _hitbox.left += me.left + padding;\n            top += _hitbox.height + padding;\n          }\n        } catch (err) {\n          _iterator14.e(err);\n        } finally {\n          _iterator14.f();\n        }\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n\n      if (me.options.display) {\n        var ctx = me.ctx;\n        clipArea(ctx, me);\n\n        me._draw();\n\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var me = this;\n      var opts = me.options,\n          columnSizes = me.columnSizes,\n          lineWidths = me.lineWidths,\n          ctx = me.ctx;\n      var align = opts.align,\n          labelOpts = opts.labels;\n      var defaultColor = defaults.color;\n      var rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n      var labelFont = toFont(labelOpts.font);\n      var fontColor = labelOpts.color,\n          padding = labelOpts.padding;\n      var fontSize = labelFont.size;\n      var halfFontSize = fontSize / 2;\n      var cursor;\n      me.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n\n      var _getBoxSize2 = getBoxSize(labelOpts, fontSize),\n          boxWidth = _getBoxSize2.boxWidth,\n          boxHeight = _getBoxSize2.boxHeight,\n          itemHeight = _getBoxSize2.itemHeight;\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n\n        ctx.save();\n        var lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n        if (labelOpts.usePointStyle) {\n          var drawOptions = {\n            radius: boxWidth * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          var centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          var centerY = y + halfFontSize;\n          drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n          var yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          var xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          var borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n\n          if (Object.values(borderRadius).some(function (v) {\n            return v !== 0;\n          })) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n\n          ctx.fill();\n\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: legendItem.textAlign\n        });\n      };\n\n      var isHorizontal = me.isHorizontal();\n\n      var titleHeight = this._computeTitleHeight();\n\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n          y: me.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + padding,\n          y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n\n      overrideTextDirection(me.ctx, opts.textDirection);\n      var lineHeight = itemHeight + padding;\n      me.legendItems.forEach(function (legendItem, i) {\n        ctx.strokeStyle = legendItem.fontColor || fontColor;\n        ctx.fillStyle = legendItem.fontColor || fontColor;\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        var width = boxWidth + fontSize / 2 + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n        rtlHelper.setWidth(me.width);\n\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > me.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > me.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n        }\n\n        var realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n        fillText(rtlHelper.x(x), y, legendItem);\n\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(me.ctx, opts.textDirection);\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var me = this;\n      var opts = me.options;\n      var titleOpts = opts.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n\n      if (!titleOpts.display) {\n        return;\n      }\n\n      var rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n      var ctx = me.ctx;\n      var position = titleOpts.position;\n      var halfFontSize = titleFont.size / 2;\n      var topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      var y;\n      var left = me.left;\n      var maxWidth = me.width;\n\n      if (this.isHorizontal()) {\n        maxWidth = Math.max.apply(Math, _toConsumableArray(me.lineWidths));\n        y = me.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n      } else {\n        var maxHeight = me.columnSizes.reduce(function (acc, size) {\n          return Math.max(acc, size.height);\n        }, 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n      }\n\n      var x = _alignStartEnd(position, left, left + maxWidth);\n\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n  }, {\n    key: \"_computeTitleHeight\",\n    value: function _computeTitleHeight() {\n      var titleOpts = this.options.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n  }, {\n    key: \"_getLegendItemAt\",\n    value: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n\n      var hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (e.type === 'mousemove') {\n        var previous = me._hoveredItem;\n        var sameItem = itemsEqual(previous, hoveredItem);\n\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, me], me);\n        }\n\n        me._hoveredItem = hoveredItem;\n\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, me], me);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, me], me);\n      }\n    }\n  }]);\n\n  return Legend;\n}(Element);\n\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start: function start(chart, _args, options) {\n    var legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate: function afterUpdate(chart) {\n    var legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick: function onClick(e, legendItem, legend) {\n      var index = legendItem.datasetIndex;\n      var ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      boxWidth: 40,\n      padding: 10,\n      generateLabels: function generateLabels(chart) {\n        var datasets = chart.data.datasets;\n        var _chart$legend$options = chart.legend.options.labels,\n            usePointStyle = _chart$legend$options.usePointStyle,\n            pointStyle = _chart$legend$options.pointStyle,\n            textAlign = _chart$legend$options.textAlign,\n            color = _chart$legend$options.color;\n        return chart._getSortedDatasetMetas().map(function (meta) {\n          var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          var borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return !name.startsWith('on');\n    },\n    labels: {\n      _scriptable: function _scriptable(name) {\n        return !['generateLabels', 'filter', 'sort'].includes(name);\n      }\n    }\n  }\n};\n\nvar Title = /*#__PURE__*/function (_Element7) {\n  _inherits(Title, _Element7);\n\n  var _super17 = _createSuper(Title);\n\n  function Title(config) {\n    var _this12;\n\n    _classCallCheck(this, Title);\n\n    _this12 = _super17.call(this);\n    _this12.chart = config.chart;\n    _this12.options = config.options;\n    _this12.ctx = config.ctx;\n    _this12._padding = undefined;\n    _this12.top = undefined;\n    _this12.bottom = undefined;\n    _this12.left = undefined;\n    _this12.right = undefined;\n    _this12.width = undefined;\n    _this12.height = undefined;\n    _this12.position = undefined;\n    _this12.weight = undefined;\n    _this12.fullSize = undefined;\n    return _this12;\n  }\n\n  _createClass(Title, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight) {\n      var me = this;\n      var opts = me.options;\n      me.left = 0;\n      me.top = 0;\n\n      if (!opts.display) {\n        me.width = me.height = me.right = me.bottom = 0;\n        return;\n      }\n\n      me.width = me.right = maxWidth;\n      me.height = me.bottom = maxHeight;\n      var lineCount = isArray(opts.text) ? opts.text.length : 1;\n      me._padding = toPadding(opts.padding);\n\n      var textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n\n      if (me.isHorizontal()) {\n        me.height = textSize;\n      } else {\n        me.width = textSize;\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n  }, {\n    key: \"_drawArgs\",\n    value: function _drawArgs(offset) {\n      var top = this.top,\n          left = this.left,\n          bottom = this.bottom,\n          right = this.right,\n          options = this.options;\n      var align = options.align;\n      var rotation = 0;\n      var maxWidth, titleX, titleY;\n\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n\n        maxWidth = bottom - top;\n      }\n\n      return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (!opts.display) {\n        return;\n      }\n\n      var fontOpts = toFont(opts.font);\n      var lineHeight = fontOpts.lineHeight;\n      var offset = lineHeight / 2 + me._padding.top;\n\n      var _me$_drawArgs = me._drawArgs(offset),\n          titleX = _me$_drawArgs.titleX,\n          titleY = _me$_drawArgs.titleY,\n          maxWidth = _me$_drawArgs.maxWidth,\n          rotation = _me$_drawArgs.rotation;\n\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }]);\n\n  return Title;\n}(Element);\n\nfunction createTitle(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start: function start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop: function stop(chart) {\n    var titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar positioners = {\n  average: function average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest: function nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  var element = item.element,\n      datasetIndex = item.datasetIndex,\n      index = item.index;\n  var controller = chart.getDatasetMeta(datasetIndex).controller;\n\n  var _controller$getLabelA = controller.getLabelAndValue(index),\n      label = _controller$getLabelA.label,\n      value = _controller$getLabelA.value;\n\n  return {\n    chart: chart,\n    label: label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex: datasetIndex,\n    element: element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  var ctx = tooltip._chart.ctx;\n  var body = tooltip.body,\n      footer = tooltip.footer,\n      title = tooltip.title;\n  var boxWidth = options.boxWidth,\n      boxHeight = options.boxHeight;\n  var bodyFont = toFont(options.bodyFont);\n  var titleFont = toFont(options.titleFont);\n  var footerFont = toFont(options.footerFont);\n  var titleLineCount = title.length;\n  var footerLineCount = footer.length;\n  var bodyLineItemCount = body.length;\n  var padding = toPadding(options.padding);\n  var height = padding.height;\n  var width = 0;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    var bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  var widthPadding = 0;\n\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 : 0;\n  each(body, function (bodyItem) {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  var y = size.y,\n      height = size.height;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  var x = size.x,\n      width = size.width;\n  var caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  var x = size.x,\n      width = size.width;\n  var chartWidth = chart.width,\n      _chart$chartArea = chart.chartArea,\n      left = _chart$chartArea.left,\n      right = _chart$chartArea.right;\n  var xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  var yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign: yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  var x = size.x,\n      width = size.width;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  var y = size.y,\n      height = size.height;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  var caretSize = options.caretSize,\n      caretPadding = options.caretPadding,\n      cornerRadius = options.cornerRadius;\n  var xAlign = alignment.xAlign,\n      yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var radiusAndPadding = cornerRadius + caretPadding;\n  var x = alignX(size, xAlign);\n  var y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  var padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip: tooltip,\n    tooltipItems: tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  var override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nvar Tooltip = /*#__PURE__*/function (_Element8) {\n  _inherits(Tooltip, _Element8);\n\n  var _super18 = _createSuper(Tooltip);\n\n  function Tooltip(config) {\n    var _this13;\n\n    _classCallCheck(this, Tooltip);\n\n    _this13 = _super18.call(this);\n    _this13.opacity = 0;\n    _this13._active = [];\n    _this13._chart = config._chart;\n    _this13._eventPosition = undefined;\n    _this13._size = undefined;\n    _this13._cachedAnimations = undefined;\n    _this13._tooltipItems = [];\n    _this13.$animations = undefined;\n    _this13.$context = undefined;\n    _this13.options = config.options;\n    _this13.dataPoints = undefined;\n    _this13.title = undefined;\n    _this13.beforeBody = undefined;\n    _this13.body = undefined;\n    _this13.afterBody = undefined;\n    _this13.footer = undefined;\n    _this13.xAlign = undefined;\n    _this13.yAlign = undefined;\n    _this13.x = undefined;\n    _this13.y = undefined;\n    _this13.height = undefined;\n    _this13.width = undefined;\n    _this13.caretX = undefined;\n    _this13.caretY = undefined;\n    _this13.labelColors = undefined;\n    _this13.labelPointStyles = undefined;\n    _this13.labelTextColors = undefined;\n    return _this13;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations() {\n      var me = this;\n      var cached = me._cachedAnimations;\n\n      if (cached) {\n        return cached;\n      }\n\n      var chart = me._chart;\n      var options = me.options.setContext(me.getContext());\n      var opts = options.enabled && chart.options.animation && options.animations;\n      var animations = new Animations(me._chart, opts);\n\n      if (opts._cacheable) {\n        me._cachedAnimations = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      var me = this;\n      return me.$context || (me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(context, options) {\n      var me = this;\n      var callbacks = options.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n      var title = callbacks.title.apply(me, [context]);\n      var afterTitle = callbacks.afterTitle.apply(me, [context]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n  }, {\n    key: \"getBeforeBody\",\n    value: function getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody(tooltipItems, options) {\n      var me = this;\n      var callbacks = options.callbacks;\n      var bodyItems = [];\n      each(tooltipItems, function (context) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        var scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n        pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n        pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n  }, {\n    key: \"getAfterBody\",\n    value: function getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getFooter\",\n    value: function getFooter(tooltipItems, options) {\n      var me = this;\n      var callbacks = options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n      var footer = callbacks.footer.apply(me, [tooltipItems]);\n      var afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n  }, {\n    key: \"_createItems\",\n    value: function _createItems(options) {\n      var me = this;\n      var active = me._active;\n      var data = me._chart.data;\n      var labelColors = [];\n      var labelPointStyles = [];\n      var labelTextColors = [];\n      var tooltipItems = [];\n      var i, len;\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(me._chart, active[i]));\n      }\n\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter(function (element, index, array) {\n          return options.filter(element, index, array, data);\n        });\n      }\n\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return options.itemSort(a, b, data);\n        });\n      }\n\n      each(tooltipItems, function (context) {\n        var scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(scoped.labelColor.call(me, context));\n        labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n        labelTextColors.push(scoped.labelTextColor.call(me, context));\n      });\n      me.labelColors = labelColors;\n      me.labelPointStyles = labelPointStyles;\n      me.labelTextColors = labelTextColors;\n      me.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n  }, {\n    key: \"update\",\n    value: function update(changed, replay) {\n      var me = this;\n      var options = me.options.setContext(me.getContext());\n      var active = me._active;\n      var properties;\n      var tooltipItems = [];\n\n      if (!active.length) {\n        if (me.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        var position = positioners[options.position].call(me, active, me._eventPosition);\n        tooltipItems = me._createItems(options);\n        me.title = me.getTitle(tooltipItems, options);\n        me.beforeBody = me.getBeforeBody(tooltipItems, options);\n        me.body = me.getBody(tooltipItems, options);\n        me.afterBody = me.getAfterBody(tooltipItems, options);\n        me.footer = me.getFooter(tooltipItems, options);\n        var size = me._size = getTooltipSize(me, options);\n        var positionAndSize = Object.assign({}, position, size);\n        var alignment = determineAlignment(me._chart, options, positionAndSize);\n        var backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n\n      me._tooltipItems = tooltipItems;\n      me.$context = undefined;\n\n      if (properties) {\n        me._resolveAnimations().update(me, properties);\n      }\n\n      if (changed && options.external) {\n        options.external.call(me, {\n          chart: me._chart,\n          tooltip: me,\n          replay: replay\n        });\n      }\n    }\n  }, {\n    key: \"drawCaret\",\n    value: function drawCaret(tooltipPoint, ctx, size, options) {\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n  }, {\n    key: \"getCaretPosition\",\n    value: function getCaretPosition(tooltipPoint, size, options) {\n      var xAlign = this.xAlign,\n          yAlign = this.yAlign;\n      var cornerRadius = options.cornerRadius,\n          caretSize = options.caretSize;\n      var ptX = tooltipPoint.x,\n          ptY = tooltipPoint.y;\n      var width = size.width,\n          height = size.height;\n      var x1, x2, x3, y1, y2, y3;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n\n        y3 = y1;\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle(pt, ctx, options) {\n      var me = this;\n      var title = me.title;\n      var length = title.length;\n      var titleFont, titleSpacing, i;\n\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n        pt.x = getAlignedX(me, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_drawColorBox\",\n    value: function _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      var me = this;\n      var labelColors = me.labelColors[i];\n      var labelPointStyle = me.labelPointStyles[i];\n      var boxHeight = options.boxHeight,\n          boxWidth = options.boxWidth;\n      var bodyFont = toFont(options.bodyFont);\n      var colorX = getAlignedX(me, 'left', options);\n      var rtlColorX = rtlHelper.x(colorX);\n      var yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      var colorY = pt.y + yOffSet;\n\n      if (options.usePointStyle) {\n        var drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        var centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        var centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        var outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n        var innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n        var borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n        if (Object.values(borderRadius).some(function (v) {\n          return v !== 0;\n        })) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n\n      ctx.fillStyle = me.labelTextColors[i];\n    }\n  }, {\n    key: \"drawBody\",\n    value: function drawBody(pt, ctx, options) {\n      var me = this;\n      var body = me.body;\n      var bodySpacing = options.bodySpacing,\n          bodyAlign = options.bodyAlign,\n          displayColors = options.displayColors,\n          boxHeight = options.boxHeight,\n          boxWidth = options.boxWidth;\n      var bodyFont = toFont(options.bodyFont);\n      var bodyLineHeight = bodyFont.lineHeight;\n      var xLinePadding = 0;\n      var rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n\n      var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      var bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(me.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + 1 : boxWidth + 2 : 0;\n\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = me.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n\n        if (displayColors && lines.length) {\n          me._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n\n        each(bodyItem.after, fillLineOfText);\n      }\n\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(me.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n  }, {\n    key: \"drawFooter\",\n    value: function drawFooter(pt, ctx, options) {\n      var me = this;\n      var footer = me.footer;\n      var length = footer.length;\n      var footerFont, i;\n\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n        pt.x = getAlignedX(me, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground(pt, ctx, tooltipSize, options) {\n      var xAlign = this.xAlign,\n          yAlign = this.yAlign;\n      var x = pt.x,\n          y = pt.y;\n      var width = tooltipSize.width,\n          height = tooltipSize.height;\n      var radius = options.cornerRadius;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"_updateAnimationTarget\",\n    value: function _updateAnimationTarget(options) {\n      var me = this;\n      var chart = me._chart;\n      var anims = me.$animations;\n      var animX = anims && anims.x;\n      var animY = anims && anims.y;\n\n      if (animX || animY) {\n        var position = positioners[options.position].call(me, me._active, me._eventPosition);\n\n        if (!position) {\n          return;\n        }\n\n        var size = me._size = getTooltipSize(me, options);\n        var positionAndSize = Object.assign({}, position, me._size);\n        var alignment = determineAlignment(chart, options, positionAndSize);\n        var point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n        if (animX._to !== point.x || animY._to !== point.y) {\n          me.xAlign = alignment.xAlign;\n          me.yAlign = alignment.yAlign;\n          me.width = size.width;\n          me.height = size.height;\n          me.caretX = position.x;\n          me.caretY = position.y;\n\n          me._resolveAnimations().update(me, point);\n        }\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var me = this;\n      var options = me.options.setContext(me.getContext());\n      var opacity = me.opacity;\n\n      if (!opacity) {\n        return;\n      }\n\n      me._updateAnimationTarget(options);\n\n      var tooltipSize = {\n        width: me.width,\n        height: me.height\n      };\n      var pt = {\n        x: me.x,\n        y: me.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      var padding = toPadding(options.padding);\n      var hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        me.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        me.drawTitle(pt, ctx, options);\n        me.drawBody(pt, ctx, options);\n        me.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements, eventPosition) {\n      var me = this;\n      var lastActive = me._active;\n      var active = activeElements.map(function (_ref7) {\n        var datasetIndex = _ref7.datasetIndex,\n            index = _ref7.index;\n\n        var meta = me._chart.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(lastActive, active);\n\n      var positionChanged = me._positionChanged(active, eventPosition);\n\n      if (changed || positionChanged) {\n        me._active = active;\n        me._eventPosition = eventPosition;\n        me.update(true);\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, replay) {\n      var me = this;\n      var options = me.options;\n      var lastActive = me._active || [];\n      var changed = false;\n      var active = [];\n\n      if (e.type !== 'mouseout') {\n        active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n        if (options.reverse) {\n          active.reverse();\n        }\n      }\n\n      var positionChanged = me._positionChanged(active, e);\n\n      changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n      if (changed) {\n        me._active = active;\n\n        if (options.enabled || options.external) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true, replay);\n        }\n      }\n\n      return changed;\n    }\n  }, {\n    key: \"_positionChanged\",\n    value: function _positionChanged(active, e) {\n      var caretX = this.caretX,\n          caretY = this.caretY,\n          options = this.options;\n      var position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }]);\n\n  return Tooltip;\n}(Element);\n\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners: positioners,\n  afterInit: function afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options: options\n      });\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset: function reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw: function afterDraw(chart) {\n    var tooltip = chart.tooltip;\n    var args = {\n      tooltip: tooltip\n    };\n\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (chart.tooltip) {\n      var useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: function boxHeight(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    boxWidth: function boxWidth(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title: function title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n          var labels = item.chart.data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label: function label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n\n        var label = tooltipItem.dataset.label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        var value = tooltipItem.formattedValue;\n\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle: function labelPointStyle(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'filter' && name !== 'itemSort' && name !== 'external';\n    },\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nvar addIfString = function addIfString(labels, raw, index) {\n  return typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\n};\n\nfunction findOrAddLabel(labels, raw, index) {\n  var first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n\n  var last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nvar validIndex = function validIndex(index, max) {\n  return index === null ? null : _limitValue(Math.round(index), 0, max);\n};\n\nvar CategoryScale = /*#__PURE__*/function (_Scale) {\n  _inherits(CategoryScale, _Scale);\n\n  var _super19 = _createSuper(CategoryScale);\n\n  function CategoryScale(cfg) {\n    var _this14;\n\n    _classCallCheck(this, CategoryScale);\n\n    _this14 = _super19.call(this, cfg);\n    _this14._startValue = undefined;\n    _this14._valueRange = 0;\n    return _this14;\n  }\n\n  _createClass(CategoryScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n\n      var labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n      return validIndex(index, labels.length - 1);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n\n      var _me$getUserBounds2 = me.getUserBounds(),\n          minDefined = _me$getUserBounds2.minDefined,\n          maxDefined = _me$getUserBounds2.maxDefined;\n\n      var _me$getMinMax = me.getMinMax(true),\n          min = _me$getMinMax.min,\n          max = _me$getMinMax.max;\n\n      if (me.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n\n        if (!maxDefined) {\n          max = me.getLabels().length - 1;\n        }\n      }\n\n      me.min = min;\n      me.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var offset = me.options.offset;\n      var ticks = [];\n      var labels = me.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      me._startValue = me.min - (offset ? 0.5 : 0);\n\n      for (var value = min; value <= max; value++) {\n        ticks.push({\n          value: value\n        });\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var me = this;\n      var labels = me.getLabels();\n\n      if (value >= 0 && value < labels.length) {\n        return labels[value];\n      }\n\n      return value;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n\n      _get(_getPrototypeOf(CategoryScale.prototype), \"configure\", this).call(this);\n\n      if (!me.isHorizontal()) {\n        me._reversePixels = !me._reversePixels;\n      }\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var me = this;\n\n      if (typeof value !== 'number') {\n        value = me.parse(value);\n      }\n\n      return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n    }\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var me = this;\n      var ticks = me.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return me.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.bottom;\n    }\n  }]);\n\n  return CategoryScale;\n}(Scale);\n\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  var ticks = [];\n  var MIN_SPACING = 1e-14;\n  var step = generationOptions.step,\n      min = generationOptions.min,\n      max = generationOptions.max,\n      precision = generationOptions.precision,\n      count = generationOptions.count,\n      maxTicks = generationOptions.maxTicks,\n      maxDigits = generationOptions.maxDigits,\n      horizontal = generationOptions.horizontal;\n  var unit = step || 1;\n  var maxSpaces = maxTicks - 1;\n  var rmin = dataRange.min,\n      rmax = dataRange.max;\n  var minDefined = !isNullOrUndef(min);\n  var maxDefined = !isNullOrUndef(max);\n  var countDefined = !isNullOrUndef(count);\n  var minSpacing = (rmax - rmin) / maxDigits;\n  var spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  var factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  niceMin = Math.floor(rmin / spacing) * spacing;\n  niceMax = Math.ceil(rmax / spacing) * spacing;\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  factor = Math.pow(10, isNullOrUndef(precision) ? _decimalPlaces(spacing) : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  var j = 0;\n\n  if (minDefined) {\n    ticks.push({\n      value: min\n    });\n\n    if (niceMin <= min) {\n      j++;\n    }\n\n    if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, minSpacing * (horizontal ? ('' + min).length : 1))) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n\n  if (maxDefined) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, minSpacing * (horizontal ? ('' + max).length : 1))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nvar LinearScaleBase = /*#__PURE__*/function (_Scale2) {\n  _inherits(LinearScaleBase, _Scale2);\n\n  var _super20 = _createSuper(LinearScaleBase);\n\n  function LinearScaleBase(cfg) {\n    var _this15;\n\n    _classCallCheck(this, LinearScaleBase);\n\n    _this15 = _super20.call(this, cfg);\n    _this15.start = undefined;\n    _this15.end = undefined;\n    _this15._startValue = undefined;\n    _this15._endValue = undefined;\n    _this15._valueRange = 0;\n    return _this15;\n  }\n\n  _createClass(LinearScaleBase, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n\n      return +raw;\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var me = this;\n      var _me$options7 = me.options,\n          beginAtZero = _me$options7.beginAtZero,\n          stacked = _me$options7.stacked;\n\n      var _me$getUserBounds3 = me.getUserBounds(),\n          minDefined = _me$getUserBounds3.minDefined,\n          maxDefined = _me$getUserBounds3.maxDefined;\n\n      var min = me.min,\n          max = me.max;\n\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n\n      if (beginAtZero || stacked) {\n        var minSign = sign(min);\n        var maxSign = sign(max);\n\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n\n      if (min === max) {\n        setMax(max + 1);\n\n        if (!beginAtZero) {\n          setMin(min - 1);\n        }\n      }\n\n      me.min = min;\n      me.max = max;\n    }\n  }, {\n    key: \"getTickLimit\",\n    value: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var maxTicksLimit = tickOpts.maxTicksLimit,\n          stepSize = tickOpts.stepSize;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: me._maxDigits(),\n        horizontal: me.isHorizontal()\n      };\n      var dataRange = me._range || me;\n      var ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, me, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var ticks = me.ticks;\n      var start = me.min;\n      var end = me.max;\n\n      _get(_getPrototypeOf(LinearScaleBase.prototype), \"configure\", this).call(this);\n\n      if (me.options.offset && ticks.length) {\n        var offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n\n      me._startValue = start;\n      me._endValue = end;\n      me._valueRange = end - start;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale);\n    }\n  }]);\n\n  return LinearScaleBase;\n}(Scale);\n\nvar LinearScale = /*#__PURE__*/function (_LinearScaleBase) {\n  _inherits(LinearScale, _LinearScaleBase);\n\n  var _super21 = _createSuper(LinearScale);\n\n  function LinearScale() {\n    _classCallCheck(this, LinearScale);\n\n    return _super21.apply(this, arguments);\n  }\n\n  _createClass(LinearScale, [{\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n\n      var _me$getMinMax2 = me.getMinMax(true),\n          min = _me$getMinMax2.min,\n          max = _me$getMinMax2.max;\n\n      me.min = isNumberFinite(min) ? min : 0;\n      me.max = isNumberFinite(max) ? max : 1;\n      me.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      var tickFont = me._resolveTickFontOptions(0);\n\n      return Math.ceil(me.height / tickFont.lineHeight);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }]);\n\n  return LinearScale;\n}(LinearScaleBase);\n\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  var remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\n\nfunction generateTicks(generationOptions, dataRange) {\n  var endExp = Math.floor(log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var ticks = [];\n  var tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  var exp = Math.floor(log10(tickVal));\n  var significand = Math.floor(tickVal / Math.pow(10, exp));\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  var lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\n\nvar LogarithmicScale = /*#__PURE__*/function (_Scale3) {\n  _inherits(LogarithmicScale, _Scale3);\n\n  var _super22 = _createSuper(LogarithmicScale);\n\n  function LogarithmicScale(cfg) {\n    var _this16;\n\n    _classCallCheck(this, LogarithmicScale);\n\n    _this16 = _super22.call(this, cfg);\n    _this16.start = undefined;\n    _this16.end = undefined;\n    _this16._startValue = undefined;\n    _this16._valueRange = 0;\n    return _this16;\n  }\n\n  _createClass(LogarithmicScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      var value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n\n      var _me$getMinMax3 = me.getMinMax(true),\n          min = _me$getMinMax3.min,\n          max = _me$getMinMax3.max;\n\n      me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n      if (me.options.beginAtZero) {\n        me._zero = true;\n      }\n\n      me.handleTickRangeOptions();\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var me = this;\n\n      var _me$getUserBounds4 = me.getUserBounds(),\n          minDefined = _me$getUserBounds4.minDefined,\n          maxDefined = _me$getUserBounds4.maxDefined;\n\n      var min = me.min;\n      var max = me.max;\n\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n\n      var exp = function exp(v, m) {\n        return Math.pow(10, Math.floor(log10(v)) + m);\n      };\n\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(exp(min, -1));\n          setMax(exp(max, +1));\n        }\n      }\n\n      if (min <= 0) {\n        setMin(exp(max, -1));\n      }\n\n      if (max <= 0) {\n        setMax(exp(min, +1));\n      }\n\n      if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n        setMin(exp(min, -1));\n      }\n\n      me.min = min;\n      me.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var generationOptions = {\n        min: me._userMin,\n        max: me._userMax\n      };\n      var ticks = generateTicks(generationOptions, me);\n\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, me, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var start = me.min;\n\n      _get(_getPrototypeOf(LogarithmicScale.prototype), \"configure\", this).call(this);\n\n      me._startValue = log10(start);\n      me._valueRange = log10(me.max) - log10(start);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var me = this;\n\n      if (value === undefined || value === 0) {\n        value = me.min;\n      }\n\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n\n      return me.getPixelForDecimal(value === me.min ? 0 : (log10(value) - me._startValue) / me._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      var decimal = me.getDecimalForPixel(pixel);\n      return Math.pow(10, me._startValue + decimal * me._valueRange);\n    }\n  }]);\n\n  return LogarithmicScale;\n}(Scale);\n\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  var tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    var padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  var furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  var furthestAngles = {};\n  var i, textSize, pointPosition;\n  var labelSizes = [];\n  var padding = [];\n  var valueCount = scale.getLabels().length;\n\n  for (i = 0; i < valueCount; i++) {\n    var _opts = scale.options.pointLabels.setContext(scale.getContext(i));\n\n    padding[i] = _opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    var plFont = toFont(_opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    var angleRadians = scale.getIndexAngle(i);\n    var angle = toDegrees(angleRadians);\n    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n\n  scale._pointLabelItems = [];\n  var opts = scale.options;\n  var tickBackdropHeight = getTickBackdropHeight(opts);\n  var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n  for (i = 0; i < valueCount; i++) {\n    var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n\n    var _angle = toDegrees(scale.getIndexAngle(i));\n\n    var size = labelSizes[i];\n    adjustPointPositionForLabelHeight(_angle, size, pointLabelPosition);\n    var textAlign = getTextAlignForAngle(_angle);\n    var left = void 0;\n\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - size.w / 2;\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n\n    var right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign: textAlign,\n      left: left,\n      top: pointLabelPosition.y,\n      right: right,\n      bottom: pointLabelPosition.y + size.h\n    };\n  }\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= textSize.h / 2;\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  var ctx = scale.ctx,\n      pointLabels = scale.options.pointLabels;\n\n  for (var i = labelCount - 1; i >= 0; i--) {\n    var optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    var plFont = toFont(optsAtIndex.font);\n    var _scale$_pointLabelIte = scale._pointLabelItems[i],\n        x = _scale$_pointLabelIte.x,\n        y = _scale$_pointLabelIte.y,\n        textAlign = _scale$_pointLabelIte.textAlign,\n        left = _scale$_pointLabelIte.left,\n        top = _scale$_pointLabelIte.top,\n        right = _scale$_pointLabelIte.right,\n        bottom = _scale$_pointLabelIte.bottom;\n    var backdropColor = optsAtIndex.backdropColor;\n\n    if (!isNullOrUndef(backdropColor)) {\n      var padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  var ctx = scale.ctx;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    var pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (var i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  var ctx = scale.ctx;\n  var circular = gridLineOpts.circular;\n  var color = gridLineOpts.color,\n      lineWidth = gridLineOpts.lineWidth;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\n\nvar RadialLinearScale = /*#__PURE__*/function (_LinearScaleBase2) {\n  _inherits(RadialLinearScale, _LinearScaleBase2);\n\n  var _super23 = _createSuper(RadialLinearScale);\n\n  function RadialLinearScale(cfg) {\n    var _this17;\n\n    _classCallCheck(this, RadialLinearScale);\n\n    _this17 = _super23.call(this, cfg);\n    _this17.xCenter = undefined;\n    _this17.yCenter = undefined;\n    _this17.drawingArea = undefined;\n    _this17._pointLabels = [];\n    _this17._pointLabelItems = [];\n    return _this17;\n  }\n\n  _createClass(RadialLinearScale, [{\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var me = this;\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n\n      var _me$getMinMax4 = me.getMinMax(false),\n          min = _me$getMinMax4.min,\n          max = _me$getMinMax4.max;\n\n      me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      me.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var me = this;\n      LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n      me._pointLabels = me.getLabels().map(function (value, index) {\n        var label = callback(me.options.pointLabels.callback, [value, index], me);\n        return label || label === 0 ? label : '';\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n  }, {\n    key: \"_setReductions\",\n    value: function _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    }\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    }\n  }, {\n    key: \"getIndexAngle\",\n    value: function getIndexAngle(index) {\n      var angleMultiplier = TAU / this.getLabels().length;\n      var startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n  }, {\n    key: \"getDistanceFromCenterForValue\",\n    value: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    }\n  }, {\n    key: \"getValueForDistanceFromCenter\",\n    value: function getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n\n      var me = this;\n      var scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n      return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n    }\n  }, {\n    key: \"getPointPosition\",\n    value: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var angle = me.getIndexAngle(index) - HALF_PI;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n        angle: angle\n      };\n    }\n  }, {\n    key: \"getPointPositionForValue\",\n    value: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n  }, {\n    key: \"getBasePosition\",\n    value: function getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n  }, {\n    key: \"getPointLabelPosition\",\n    value: function getPointLabelPosition(index) {\n      var _this$_pointLabelItem = this._pointLabelItems[index],\n          left = _this$_pointLabelItem.left,\n          top = _this$_pointLabelItem.top,\n          right = _this$_pointLabelItem.right,\n          bottom = _this$_pointLabelItem.bottom;\n      return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      };\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var me = this;\n      var _me$options8 = me.options,\n          backgroundColor = _me$options8.backgroundColor,\n          circular = _me$options8.grid.circular;\n\n      if (backgroundColor) {\n        var ctx = me.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n      var angleLines = opts.angleLines,\n          grid = opts.grid;\n      var labelCount = me.getLabels().length;\n      var i, offset, position;\n\n      if (opts.pointLabels.display) {\n        drawPointLabels(me, labelCount);\n      }\n\n      if (grid.display) {\n        me.ticks.forEach(function (tick, index) {\n          if (index !== 0) {\n            offset = me.getDistanceFromCenterForValue(tick.value);\n            var optsAtIndex = grid.setContext(me.getContext(index - 1));\n            drawRadiusLine(me, optsAtIndex, offset, labelCount);\n          }\n        });\n      }\n\n      if (angleLines.display) {\n        ctx.save();\n\n        for (i = me.getLabels().length - 1; i >= 0; i--) {\n          var optsAtIndex = angleLines.setContext(me.getContext(i));\n          var color = optsAtIndex.color,\n              lineWidth = optsAtIndex.lineWidth;\n\n          if (!lineWidth || !color) {\n            continue;\n          }\n\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n          position = me.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(me.xCenter, me.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {}\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n\n      if (!tickOpts.display) {\n        return;\n      }\n\n      var startAngle = me.getIndexAngle(0);\n      var offset, width;\n      ctx.save();\n      ctx.translate(me.xCenter, me.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      me.ticks.forEach(function (tick, index) {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n\n        var optsAtIndex = tickOpts.setContext(me.getContext(index));\n        var tickFont = toFont(optsAtIndex.font);\n        offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n\n        if (optsAtIndex.showLabelBackdrop) {\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          var padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {}\n  }]);\n\n  return RadialLinearScale;\n}(LinearScaleBase);\n\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback: function callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction _parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  var adapter = scale._adapter;\n  var _scale$_parseOpts = scale._parseOpts,\n      parser = _scale$_parseOpts.parser,\n      round = _scale$_parseOpts.round,\n      isoWeekday = _scale$_parseOpts.isoWeekday;\n  var value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var interval = INTERVALS[UNITS[i]];\n    var factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (var i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    var unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = _lookup(timestamps, time),\n        lo = _lookup2.lo,\n        hi = _lookup2.hi;\n\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  var adapter = scale._adapter;\n  var first = +adapter.startOf(ticks[0].value, majorUnit);\n  var last = ticks[ticks.length - 1].value;\n  var major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  var ticks = [];\n  var map = {};\n  var ilen = values.length;\n  var i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value: value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nvar TimeScale = /*#__PURE__*/function (_Scale4) {\n  _inherits(TimeScale, _Scale4);\n\n  var _super24 = _createSuper(TimeScale);\n\n  function TimeScale(props) {\n    var _this18;\n\n    _classCallCheck(this, TimeScale);\n\n    _this18 = _super24.call(this, props);\n    _this18._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    _this18._unit = 'day';\n    _this18._majorUnit = undefined;\n    _this18._offsets = {};\n    _this18._normalized = false;\n    _this18._parseOpts = undefined;\n    return _this18;\n  }\n\n  _createClass(TimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts, opts) {\n      var time = scaleOpts.time || (scaleOpts.time = {});\n      var adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n\n      _get(_getPrototypeOf(TimeScale.prototype), \"init\", this).call(this, scaleOpts);\n\n      this._normalized = opts.normalized;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n\n      return _parse(this, raw);\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      _get(_getPrototypeOf(TimeScale.prototype), \"beforeLayout\", this).call(this);\n\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n      var options = me.options;\n      var adapter = me._adapter;\n      var unit = options.time.unit || 'day';\n\n      var _me$getUserBounds5 = me.getUserBounds(),\n          min = _me$getUserBounds5.min,\n          max = _me$getUserBounds5.max,\n          minDefined = _me$getUserBounds5.minDefined,\n          maxDefined = _me$getUserBounds5.maxDefined;\n\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n\n      if (!minDefined || !maxDefined) {\n        _applyBounds(me._getLabelBounds());\n\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(me.getMinMax(false));\n        }\n      }\n\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      me.min = Math.min(min, max - 1);\n      me.max = Math.max(min + 1, max);\n    }\n  }, {\n    key: \"_getLabelBounds\",\n    value: function _getLabelBounds() {\n      var arr = this.getLabelTimestamps();\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var options = me.options;\n      var timeOpts = options.time;\n      var tickOpts = options.ticks;\n      var timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        me.min = me._userMin || timestamps[0];\n        me.max = me._userMax || timestamps[timestamps.length - 1];\n      }\n\n      var min = me.min;\n      var max = me.max;\n\n      var ticks = _filterBetween(timestamps, min, max);\n\n      me._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min)) : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n      me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined : determineMajorUnit(me._unit);\n      me.initOffsets(timestamps);\n\n      if (options.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    }\n  }, {\n    key: \"initOffsets\",\n    value: function initOffsets(timestamps) {\n      var me = this;\n      var start = 0;\n      var end = 0;\n      var first, last;\n\n      if (me.options.offset && timestamps.length) {\n        first = me.getDecimalForValue(timestamps[0]);\n\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n\n        last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n\n      var limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      me._offsets = {\n        start: start,\n        end: end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var me = this;\n      var adapter = me._adapter;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n      var stepSize = valueOrDefault(timeOpts.stepSize, 1);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var hasWeekday = isNumber(weekday) || weekday === true;\n      var ticks = {};\n      var first = min;\n      var time, count;\n\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n\n      var timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n\n      return Object.keys(ticks).sort(function (a, b) {\n        return a - b;\n      }).map(function (x) {\n        return +x;\n      });\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var me = this;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n  }, {\n    key: \"_tickFormatFunction\",\n    value: function _tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var unit = me._unit;\n      var majorUnit = me._majorUnit;\n      var minorFormat = unit && formats[unit];\n      var majorFormat = majorUnit && formats[majorUnit];\n      var tick = ticks[index];\n      var major = majorUnit && majorFormat && tick && tick.major;\n\n      var label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n\n      var formatter = options.ticks.callback;\n      return formatter ? callback(formatter, [label, index, ticks], me) : label;\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      var me = this;\n      return value === null ? NaN : (value - me.min) / (me.max - me.min);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var me = this;\n      var offsets = me._offsets;\n      var pos = me.getDecimalForValue(value);\n      return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      var offsets = me._offsets;\n      var pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return me.min + pos * (me.max - me.min);\n    }\n  }, {\n    key: \"_getLabelSize\",\n    value: function _getLabelSize(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n\n      var tickFontSize = me._resolveTickFontOptions(0).size;\n\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n  }, {\n    key: \"_getLabelCapacity\",\n    value: function _getLabelCapacity(exampleTime) {\n      var me = this;\n      var timeOpts = me.options.time;\n      var displayFormats = timeOpts.displayFormats;\n      var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n      var exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n\n      var size = me._getLabelSize(exampleLabel);\n\n      var capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n  }, {\n    key: \"getDataTimestamps\",\n    value: function getDataTimestamps() {\n      var me = this;\n      var timestamps = me._cache.data || [];\n      var i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var metas = me.getMatchingVisibleMetas();\n\n      if (me._normalized && metas.length) {\n        return me._cache.data = metas[0].controller.getAllParsedValues(me);\n      }\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n      }\n\n      return me._cache.data = me.normalize(timestamps);\n    }\n  }, {\n    key: \"getLabelTimestamps\",\n    value: function getLabelTimestamps() {\n      var me = this;\n      var timestamps = me._cache.labels || [];\n      var i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var labels = me.getLabels();\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(_parse(me, labels[i]));\n      }\n\n      return me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }]);\n\n  return TimeScale;\n}(Scale);\n\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  var prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    var result = _lookup(table, val);\n\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n\n  var span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nvar TimeSeriesScale = /*#__PURE__*/function (_TimeScale) {\n  _inherits(TimeSeriesScale, _TimeScale);\n\n  var _super25 = _createSuper(TimeSeriesScale);\n\n  function TimeSeriesScale(props) {\n    var _this19;\n\n    _classCallCheck(this, TimeSeriesScale);\n\n    _this19 = _super25.call(this, props);\n    _this19._table = [];\n    _this19._maxIndex = undefined;\n    return _this19;\n  }\n\n  _createClass(TimeSeriesScale, [{\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var me = this;\n\n      var timestamps = me._getTimestampsForTable();\n\n      me._table = me.buildLookupTable(timestamps);\n      me._maxIndex = me._table.length - 1;\n\n      _get(_getPrototypeOf(TimeSeriesScale.prototype), \"initOffsets\", this).call(this, timestamps);\n    }\n  }, {\n    key: \"buildLookupTable\",\n    value: function buildLookupTable(timestamps) {\n      var me = this;\n      var min = me.min,\n          max = me.max;\n\n      if (!timestamps.length) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n\n      var items = [min];\n      var i, ilen, curr;\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n\n        if (curr > min && curr < max) {\n          items.push(curr);\n        }\n      }\n\n      items.push(max);\n      return items;\n    }\n  }, {\n    key: \"_getTimestampsForTable\",\n    value: function _getTimestampsForTable() {\n      var me = this;\n      var timestamps = me._cache.all || [];\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var data = me.getDataTimestamps();\n      var label = me.getLabelTimestamps();\n\n      if (data.length && label.length) {\n        timestamps = me.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n\n      timestamps = me._cache.all = timestamps;\n      return timestamps;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      var me = this;\n      var offsets = me._offsets;\n      var pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index) ? index / me._maxIndex : me.getDecimalForValue(value);\n      return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return interpolate(this._table, value) / this._maxIndex;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      var offsets = me._offsets;\n      var decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(me._table, decimal * this._maxIndex, true);\n    }\n  }]);\n\n  return TimeSeriesScale;\n}(TimeScale);\n\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nvar registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"sources":["C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/node_modules/chart.js/dist/chart.esm.js"],"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","i","isObject","b","isArray","d","defaults","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","defined","s","sign","j","isNullOrUndef","k","clipArea","m","unclipArea","_","_arrayUnique","t","toRadians","n","toPercentage","o","toDimension","T","TAU","p","formatNumber","q","_angleBetween","H","HALF_PI","P","PI","w","isNumber","x","_limitValue","y","_lookupByKey","z","getRelativePosition$1","A","_isPointInArea","B","_rlookupByKey","C","toPadding","D","each","E","getMaximumSize","F","_getParentNode","G","readUsedSize","I","throttled","J","supportsEventListenerOptions","K","log10","L","_factorize","M","finiteOrDefault","N","callback","O","_addGrace","Q","toDegrees","R","_measureText","S","_int16Range","U","_alignPixel","V","renderText","W","toFont","X","_toLeftRightCenter","Y","_alignStartEnd","Z","overrides","$","merge","a0","_capitalize","a1","descriptors","a2","isFunction","a3","_attachContext","a4","_createResolver","a5","_descriptors","a6","mergeIf","a7","uid","a8","debounce","a9","retinaScale","aa","clearCanvas","ab","setsEqual","ac","_elementsEqual","ad","getAngleFromPoint","ae","_readValueToProps","af","_updateBezierControlPoints","ag","_computeSegments","ah","_boundSegments","ai","_steppedInterpolation","aj","_bezierInterpolation","ak","_pointInLine","al","_steppedLineTo","am","_bezierCurveTo","an","drawPoint","ao","addRoundedRectPath","ap","toTRBL","aq","toTRBLCorners","ar","_boundSegment","as","_normalizeAngle","at","getRtlAdapter","au","overrideTextDirection","av","_textX","aw","restoreTextDirection","ax","noop","ay","distanceBetweenPoints","az","_setMinAndMaxByKey","aA","niceNum","aB","almostWhole","aC","almostEquals","aD","_decimalPlaces","aE","_longestText","aF","_filterBetween","aG","_lookup","Animator","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","me","call","window","_update","_refresh","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_notify","charts","get","complete","progress","set","event","cb","_getAnims","push","reduce","acc","cur","max","_duration","cancel","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","active","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","has","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","_animateOptions","value","update","size","assign","add","anim","wait","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","create","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","initialize","linkScales","_stacked","addElements","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","range","parsedValue","NaN","canStack","otherScale","_getOtherScale","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","clip","getMaxOverflow","elements","area","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","_cacheable","sharedOptions","_animationsDisabled","_resolveAnimations","getStyle","getSharedOptions","_setStyle","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","arguments","prototype","getAllScaleValues","_cache","$bar","metas","concat","getAllParsedValues","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","BarController","iAxisKey","vAxisKey","obj","bars","reset","base","getBasePixel","horizontal","isHorizontal","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","enableBorderRadius","center","height","width","updateElement","last","val","isNaN","indexOf","_getStacks","_startPixel","_endPixel","_getStackCount","grouped","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","_getStackIndex","rects","interaction","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","getPixelForDecimal","skip","radius","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","_getRotationExtents","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","hidden","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","stop","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","controllers","__proto__","abstract","Error","DateAdapter","format","timestamp","amount","unit","weekday","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","v1","wrapBoxes","boxes","layoutBoxes","setLayoutDims","layouts","params","layout","fullSize","availableWidth","hBoxMaxHeight","vBoxMaxWidth","availableHeight","buildLayoutBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","placeBoxes","userPadding","padding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","canvas","listener","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","addEventListener","removeListener","removeEventListener","fromNativeEvent","native","createAttachObserver","container","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","args","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","Element","getProps","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","diff","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","getMinMax","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","pixel","decimal","getBaseValue","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","save","fillRect","restore","findIndex","_computeGridLineItems","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","_computeLabelArea","_computeLabelItems","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","TypedRegistry","scope","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","register","registerDefaults","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","getPlugin","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","getResolver","resolver","subPrefixes","needContext","subResolver","descriptorDefaults","resolverCache","includes","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","Chart","initialCanvas","existingChart","chartOptionScopes","platform","_initializePlatform","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","console","error","listen","_initialize","maintainAspectRatio","responsive","bindEvents","OffscreenCanvas","_resize","_resizeBeforeDraw","newSize","oldRatio","newRatio","getDevicePixelRatio","onResize","render","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","getScale","init","hasUpdated","oldIndex","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","_updateMetasetIndex","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","animsDisabled","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","events","unbindEvents","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","setDatasetVisibility","_updateDatasetVisibility","_destroy","remove","releaseContext","toDataURL","_add","_remove","detached","isAttached","prefix","activeElements","lastActive","_updateHoverStyles","notify","replay","hoverOptions","hover","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","lastEvent","getElementsAtEventForMode","onHover","invalidatePlugins","enumerable","defineProperties","unregister","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","betweenAngles","withinRadius","halfAngle","halfRadius","translate","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","hoverRadius","pointStyle","getBarBounds","bar","half","parseBorderSkipped","borderSkipped","parseEdge","swap","startEnd","orig","v2","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","configurable","destroy","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","findPoint","interpolate","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","hitbox","_draw","defaultColor","rtlHelper","rtl","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","leftForLtr","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","_getLegendItemAt","sameItem","onLeave","plugin_legend","_element","adjustHitBoxes","afterEvent","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","createTitle","titleBlock","plugin_title","positioners","average","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","radiusAndPadding","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","MIN_SPACING","step","precision","maxTicks","maxDigits","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","stepSize","computeTickLimit","getTickLimit","numericGeneratorOptions","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","adjustPointPositionForLabelHeight","getTextAlignForAngle","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","scaledDistance","distanceFromCenter","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","_parseOpts","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","limit","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","formatter","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_maxIndex","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"mappings":"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","sourcesContent":["/*!\n * Chart.js v3.2.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as renderText, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[meta.vScale.id][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (me._data !== data) {\n      if (me._data) {\n        unlistenArrayEvents(me._data, me);\n        clearStacks(me._cachedMeta);\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const numMeta = me._cachedMeta.data.length;\n    const numData = me._data.length;\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._insertElements(this.getDataset().data.length - count, count);\n  }\n  _onDataPop() {\n    this._removeElements(this._cachedMeta.data.length - 1, 1);\n  }\n  _onDataShift() {\n    this._removeElements(0, 1);\n  }\n  _onDataSplice(start, count) {\n    this._removeElements(start, count);\n    this._insertElements(start, arguments.length - 2);\n  }\n  _onDataUnshift() {\n    this._insertElements(0, arguments.length);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (me.index === stack._top || me.index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    clipArea(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    unclipArea(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\n      const properties = {\n        x,\n        y,\n        skip: isNaN(x) || isNaN(y)\n      };\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed.y);\n      const x = properties.x = xScale.getPixelForValue(parsed.x, i);\n      const y = properties.y = reset || nullData ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\n      properties.skip = isNaN(x) || isNaN(y) || nullData;\n      properties.stop = i > 0 && (parsed.x - prevParsed.x) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = width - padding.width;\n    const availableHeight = height - padding.height;\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n    for (i = 0; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return me.isHorizontal() ? me.width / fontSize / 0.7 : me.height / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.2.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const oldRatio = me.currentDevicePixelRatio;\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\n      return;\n    }\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    retinaScale(me, newRatio, true);\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasetIndex(meta, index) {\n    const metasets = this._metasets;\n    const oldIndex = meta.index;\n    if (oldIndex !== index) {\n      metasets[oldIndex] = metasets[index];\n      metasets[index] = meta;\n      meta.index = index;\n    }\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      me._updateMetasetIndex(meta, i);\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents)) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    clipArea(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    unclipArea(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = metasets[datasetIndex] = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    let listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n    if (me.options.responsive) {\n      listener = (width, height) => {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n      let detached;\n      const attached = () => {\n        _remove('attach', attached);\n        me.attached = true;\n        me.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = () => {\n        me.attached = false;\n        _remove('resize', listener);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    } else {\n      me.attached = true;\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    if (!listeners) {\n      return;\n    }\n    me._listeners = {};\n    each(listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element) {\n  const {startAngle, endAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element) {\n  if (element.fullCircles) {\n    element.endAngle = element.startAngle + TAU;\n    pathArc(ctx, element);\n    for (let i = 0; i < element.fullCircles; ++i) {\n      ctx.fill();\n    }\n  }\n  if (!isNaN(element.circumference)) {\n    element.endAngle = element.startAngle + element.circumference % TAU;\n  }\n  pathArc(ctx, element);\n  ctx.fill();\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    element.endAngle = element.startAngle + TAU;\n    clipArc(ctx, element);\n    element.endAngle = endAngle;\n    if (element.endAngle === element.startAngle) {\n      element.endAngle += TAU;\n      element.fullCircles--;\n    }\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element);\n  }\n  pathArc(ctx, element);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    const offset = options.offset || 0;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = Math.floor(me.circumference / TAU);\n    if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    if (offset && me.circumference < TAU) {\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, me);\n    drawBorder(ctx, me);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach((segment) => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + (fontSize / 2) + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {step, min, max, precision, count, maxTicks, maxDigits, horizontal} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / maxDigits;\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  niceMin = Math.floor(rmin / spacing) * spacing;\n  niceMax = Math.ceil(rmax / spacing) * spacing;\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  factor = Math.pow(10, isNullOrUndef(precision) ? _decimalPlaces(spacing) : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    ticks.push({value: min});\n    if (niceMin <= min) {\n      j++;\n    }\n    if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, minSpacing * (horizontal ? ('' + min).length : 1))) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, minSpacing * (horizontal ? ('' + max).length : 1))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero, stacked} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero || stacked) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal()\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    if (me.isHorizontal()) {\n      return Math.ceil(me.width / 40);\n    }\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(me.height / tickFont.lineHeight);\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - (size.w / 2);\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h,\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= (textSize.h / 2);\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {min, max} = me;\n    if (!timestamps.length) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index)\n      ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"]},"metadata":{},"sourceType":"module"}