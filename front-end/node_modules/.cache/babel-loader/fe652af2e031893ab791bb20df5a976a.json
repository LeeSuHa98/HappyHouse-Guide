{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uBC15\\uC131\\uD604\\\\Documents\\\\GitHub\\\\HappyHouse-Guide\\\\front-end\\\\src\\\\source\\\\ReadCommunity.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import '../Css/test.css'; import DeleteReply from './DeleteReply.js'; import\n// CreateReply from './CreateReply.js';\n\nimport $ from 'jquery';\nimport { Button, Col, Container, Form, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Modal, ModalHeader, Row, Table } from 'reactstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReadCommunity(props) {\n  _s();\n\n  const [_id, set_id] = useState(props._id);\n  const [userId, setUserId] = useState(props);\n  const [writeDate, setWriteDate] = useState();\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const [reply, setReply] = useState(); //댓글작성내용\n\n  const [modalInput, setModalInput] = useState(\"default\");\n  const [tableData, setTableData] = useState(); //댓글 목록 조회\n\n  const [isReadOnly, setIsReadOnly] = useState(true); //댓글 수정활성화\n\n  const [modalCreateReply, setModalCreateReply] = useState(false);\n  const [modalDeleteReply, setModalDeleteReply] = useState(false);\n\n  const toggleCreateReply = () => setModalCreateReply(!modalCreateReply);\n\n  const toggleDeleteReply = () => setModalDeleteReply(!modalDeleteReply);\n\n  let replyArrays = []; //댓글 목록 테이블\n\n  function setReplyArrays(newArrays) {\n    replyArrays = newArrays;\n  }\n\n  const renderInput = (replyArray, index) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"hidden\",\n        value: replyArray.postId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: replyArray.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: replyArray.usreId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: replyArray.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"text-nowrap\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"createReplyButton\",\n          children: \"댓글\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"deleteReplyButton\",\n          children: \"삭제\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this) // <td className=\"text-nowrap\"><Button className={\"deleteReplyButton\"}\n    // color={\"primary\"} >{\"수정\"}</Button></td>\n    ; //<h1>props.activityHistoryCode : {activityHistoryCode}</h1>\n  }; //댓글 목록 조회시 보일것 (댓글작성자, 댓글내용, 댓글 작성날짜)\n\n\n  const handlePostIdOnChange = e => {\n    e.preventDefault();\n    setPostId(e.target.value);\n  };\n\n  const handleReplyOnChange = e => {\n    e.preventDefault();\n    setReply(e.target.value);\n  };\n\n  const handleWriterIdOnChange = e => {\n    e.preventDefault();\n    setWriterId(e.target.value);\n  };\n\n  const handleWriteDateOnChange = e => {\n    e.preventDefault();\n    setWriteDate(e.target.value);\n  };\n\n  const handleTitleOnChange = e => {\n    e.preventDefault();\n    setTitle(e.target.value);\n  };\n\n  const handleContentOnChange = e => {\n    e.preventDefault();\n    setContent(e.target.value);\n  };\n\n  const toggleIsReadOnly = () => {\n    setIsReadOnly(!isReadOnly);\n  };\n\n  const readCommunity = () => {\n    var form = {\n      _id: _id\n    };\n    axios.post('/happyhouse/communities', form).then(res => {\n      setUserId(res.data.userId);\n      setWriteDate(res.data.writeDate);\n      setTitle(res.data.title);\n      setContent(res.data.content);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  function getReplyList(form) {\n    var form = new FormData(); // form.append(\"postId\", postId);\n\n    axios.post('/community/readReply', form).then(response => {\n      setReplyArrays(response.data);\n      setTableData(replyArrays.map(renderInput));\n    });\n  }\n\n  const updatePost = () => {\n    var form = new FormData();\n    form.append(\"postId\", postId);\n    form.append(\"title\", title);\n    form.append(\"content\", content);\n    axios.post('/community/updatePost', form, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }).then(response => {\n      window.location.reload();\n    });\n  };\n\n  const createReply = () => {\n    var form = new FormData();\n    form.append('userToken', localStorage.getItem(\"userToken\"));\n    form.append('postId', postId);\n    form.append('reply', reply);\n    axios.post(\"/community/createReply\", form, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }).then(response => {\n      window.location.reload();\n    });\n  };\n\n  const deletePost = () => {\n    var form = new FormData();\n    form.append('postId', postId);\n    axios.post(\"/community/deletePost\", form, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }).then(response => {\n      window.location.reload();\n    });\n  };\n\n  $(function () {\n    $(\".deleteReply\").off(\"click\");\n    $(\".deleteReplyButton\").on(\"click\", function () {\n      var postButton = $(this);\n      var tr = postButton.parent().parent();\n      var td = tr.children();\n      console.log(\"row데이터 : \" + tr.eq(0).text());\n      setModalInput(td.eq(0).val());\n      toggleDeleteReply();\n    });\n    $(\".createReply\").off(\"click\");\n    $(\".createReplyButton\").on(\"click\", function () {\n      var postButton = $(this);\n      var tr = postButton.parent().parent();\n      var td = tr.children();\n      console.log(\"row데이터 : \" + tr.eq(0).text());\n      setModalInput(td.eq(0).val());\n      toggleCreateReply();\n    });\n  });\n  useEffect(() => {\n    var form = new FormData();\n    form.append(\"id\", localStorage.getItem('id'));\n    readCommunity(); //게시글 상세조회\n\n    getReplyList(form); //댓글 목록조회\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"li\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"community-block\",\n        id: \"second\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"header\",\n          className: \"readCommunity\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"[3]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            class: \"houseInfo\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                id: \"a\",\n                children: \"\\uC791\\uC131\\uC790\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                id: \"a\",\n                children: \"\\uC791\\uC131\\uC77C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"community-content\",\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleIsReadOnly,\n      children: \"\\uC218\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"hidden\",\n      color: \"primary\",\n      onClick: updatePost,\n      children: \"\\uC644\\uB8CC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      onClick: deletePost,\n      style: {\n        float: 'right'\n      },\n      children: \"\\uC0AD\\uC81C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-nowrap\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uB313\\uAE00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC791\\uC131\\uC790\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uB0B4\\uC6A9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tableData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n        addonType: \"prepend\",\n        children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n          children: \"\\uB313\\uAE00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"textarea\",\n        name: \"content\",\n        placeholder: \"\\uB313\\uAE00\",\n        onChange: handleReplyOnChange,\n        value: reply\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn btn-primary btn-block w-25\",\n      color: \"primary\",\n      style: {\n        float: 'right'\n      },\n      type: \"post\",\n      onClick: createReply,\n      children: \"댓글작성\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ReadCommunity, \"FooCvRZYH15aW2Tb6jB/Q9N1v/Q=\");\n\n_c = ReadCommunity;\nexport default ReadCommunity;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadCommunity\");","map":{"version":3,"sources":["C:/Users/박성현/Documents/GitHub/HappyHouse-Guide/front-end/src/source/ReadCommunity.js"],"names":["React","useEffect","useState","$","Button","Col","Container","Form","FormGroup","Input","InputGroup","InputGroupAddon","InputGroupText","Modal","ModalHeader","Row","Table","axios","ReadCommunity","props","_id","set_id","userId","setUserId","writeDate","setWriteDate","title","setTitle","content","setContent","reply","setReply","modalInput","setModalInput","tableData","setTableData","isReadOnly","setIsReadOnly","modalCreateReply","setModalCreateReply","modalDeleteReply","setModalDeleteReply","toggleCreateReply","toggleDeleteReply","replyArrays","setReplyArrays","newArrays","renderInput","replyArray","index","postId","usreId","handlePostIdOnChange","e","preventDefault","setPostId","target","value","handleReplyOnChange","handleWriterIdOnChange","setWriterId","handleWriteDateOnChange","handleTitleOnChange","handleContentOnChange","toggleIsReadOnly","readCommunity","form","post","then","res","data","catch","error","console","log","getReplyList","FormData","response","map","updatePost","append","headers","window","location","reload","createReply","localStorage","getItem","deletePost","off","on","postButton","tr","parent","td","children","eq","text","val","float"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\n// import '../Css/test.css'; import DeleteReply from './DeleteReply.js'; import\r\n// CreateReply from './CreateReply.js';\r\nimport $ from 'jquery';\r\nimport {\r\n    Button,\r\n    Col,\r\n    Container,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    Modal,\r\n    ModalHeader,\r\n    Row,\r\n    Table\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nfunction ReadCommunity(props) {\r\n\r\n    const [_id, set_id] = useState(props._id);\r\n    const [userId, setUserId] = useState(props);\r\n    const [writeDate, setWriteDate] = useState();\r\n    const [title, setTitle] = useState();\r\n    const [content, setContent] = useState(); \r\n\r\n    const [reply, setReply] = useState(); //댓글작성내용\r\n    const [modalInput, setModalInput] = useState(\"default\");\r\n    const [tableData, setTableData] = useState(); //댓글 목록 조회\r\n    const [isReadOnly, setIsReadOnly] = useState(true); //댓글 수정활성화\r\n\r\n    const [modalCreateReply, setModalCreateReply] = useState(false);\r\n    const [modalDeleteReply, setModalDeleteReply] = useState(false);\r\n\r\n    const toggleCreateReply = () => setModalCreateReply(!modalCreateReply);\r\n    const toggleDeleteReply = () => setModalDeleteReply(!modalDeleteReply);\r\n\r\n    let replyArrays = []; //댓글 목록 테이블\r\n    function setReplyArrays(newArrays) {\r\n        replyArrays = newArrays;\r\n    }\r\n    const renderInput = (replyArray, index) => {\r\n\r\n        return (\r\n\r\n            <tr key={index}>\r\n                <Input type=\"hidden\" value={replyArray.postId}></Input>\r\n                <td>{replyArray.title}</td>\r\n                <td>{replyArray.usreId}</td>\r\n                <td>{replyArray.content}</td>\r\n                <td className=\"text-nowrap\">\r\n                    <Button className={\"createReplyButton\"}>{\"댓글\"}</Button>\r\n                    <Button className={\"deleteReplyButton\"}>{\"삭제\"}</Button>\r\n                </td>\r\n            </tr>\r\n\r\n            // <td className=\"text-nowrap\"><Button className={\"deleteReplyButton\"}\r\n            // color={\"primary\"} >{\"수정\"}</Button></td>\r\n        ) //<h1>props.activityHistoryCode : {activityHistoryCode}</h1>\r\n    } //댓글 목록 조회시 보일것 (댓글작성자, 댓글내용, 댓글 작성날짜)\r\n\r\n    const handlePostIdOnChange = (e) => {\r\n        e.preventDefault();\r\n        setPostId(e.target.value);\r\n    }\r\n    const handleReplyOnChange = (e) => {\r\n        e.preventDefault();\r\n        setReply(e.target.value);\r\n    }\r\n    const handleWriterIdOnChange = (e) => {\r\n        e.preventDefault();\r\n        setWriterId(e.target.value);\r\n    }\r\n    const handleWriteDateOnChange = (e) => {\r\n        e.preventDefault();\r\n        setWriteDate(e.target.value);\r\n    }\r\n    const handleTitleOnChange = (e) => {\r\n        e.preventDefault();\r\n        setTitle(e.target.value);\r\n    }\r\n    const handleContentOnChange = (e) => {\r\n        e.preventDefault();\r\n        setContent(e.target.value);\r\n    }\r\n\r\n    const toggleIsReadOnly = () => {\r\n        setIsReadOnly(!isReadOnly);\r\n    }\r\n\r\n \r\n    const readCommunity = () => {\r\n        \r\n        var form={\r\n            _id : _id            \r\n        };\r\n        axios.post('/happyhouse/communities', form).then((res) => {\r\n            \r\n            setUserId(res.data.userId);\r\n            setWriteDate(res.data.writeDate);\r\n            setTitle(res.data.title);\r\n            setContent(res.data.content);          \r\n        }).catch(function (error){\r\n            console.log(error);            \r\n        })\r\n    }\r\n\r\n\r\n    function getReplyList(form) {\r\n        var form = new FormData;\r\n\r\n       // form.append(\"postId\", postId);\r\n        axios\r\n            .post('/community/readReply', form)\r\n            .then((response) => {\r\n\r\n                setReplyArrays(response.data);\r\n                setTableData(replyArrays.map(renderInput));\r\n            });\r\n    }\r\n    const updatePost = () => {\r\n        var form = new FormData;\r\n\r\n        form.append(\"postId\", postId);\r\n        form.append(\"title\", title);\r\n        form.append(\"content\", content);\r\n\r\n        axios\r\n            .post('/community/updatePost', form, {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data'\r\n                }\r\n            })\r\n            .then((response) => {\r\n                window\r\n                    .location\r\n                    .reload();\r\n            })\r\n    }\r\n    const createReply = () => {\r\n        var form = new FormData;\r\n        form.append('userToken', localStorage.getItem(\"userToken\"));\r\n        form.append('postId', postId);\r\n        form.append('reply', reply);\r\n        axios\r\n            .post(\"/community/createReply\", form, {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data'\r\n                }\r\n            })\r\n            .then((response) => {\r\n\r\n                window\r\n                    .location\r\n                    .reload();\r\n\r\n            })\r\n    }\r\n\r\n    const deletePost = () => {\r\n        var form = new FormData;\r\n\r\n        form.append('postId', postId);\r\n\r\n        axios\r\n            .post(\"/community/deletePost\", form, {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data'\r\n                }\r\n            })\r\n            .then((response) => {\r\n\r\n                window\r\n                    .location\r\n                    .reload();\r\n\r\n            })\r\n    }\r\n\r\n    $(function () {\r\n\r\n        $(\".deleteReply\").off(\"click\")\r\n        $(\".deleteReplyButton\").on(\"click\", function () {\r\n\r\n            var postButton = $(this);\r\n\r\n            var tr = postButton\r\n                .parent()\r\n                .parent();\r\n            var td = tr.children();\r\n            console.log(\"row데이터 : \" + tr.eq(0).text());\r\n            setModalInput(td.eq(0).val());\r\n            toggleDeleteReply();\r\n        })\r\n\r\n        $(\".createReply\").off(\"click\")\r\n        $(\".createReplyButton\").on(\"click\", function () {\r\n\r\n            var postButton = $(this);\r\n\r\n            var tr = postButton\r\n                .parent()\r\n                .parent();\r\n            var td = tr.children();\r\n            console.log(\"row데이터 : \" + tr.eq(0).text());\r\n            setModalInput(td.eq(0).val());\r\n            toggleCreateReply();\r\n        })\r\n    })\r\n    useEffect(() => {\r\n        var form = new FormData;\r\n        form.append(\"id\", localStorage.getItem('id'));\r\n        readCommunity(); //게시글 상세조회\r\n        getReplyList(form); //댓글 목록조회\r\n    }, [])\r\n    return (\r\n        <div className=\"container\">\r\n            <li className=\"li\">\r\n\r\n                <div class=\"community-block\" id=\"second\">\r\n                    <div id=\"header\" className={\"readCommunity\"}>\r\n                        <h4>[3]</h4>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <table class=\"houseInfo\">\r\n                            <tr>\r\n                                <td id=\"a\">작성자</td>\r\n                                <td>3</td>\r\n                                <td id=\"a\">작성일</td>\r\n                                <td>3</td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <div class=\"community-content\">\r\n                        3\r\n                    </div>\r\n\r\n                </div>\r\n            </li>\r\n\r\n            <Button onClick={toggleIsReadOnly}>수정</Button>\r\n            <Button type=\"hidden\" color=\"primary\" onClick={updatePost}>완료</Button>\r\n            <Button\r\n                color=\"primary\"\r\n                onClick={deletePost}\r\n                style={{\r\n                    float: 'right'\r\n                }}>삭제</Button>\r\n\r\n            <hr></hr>\r\n\r\n            <Row>\r\n                {/*댓글 목록 테이블*/}\r\n                <Col>\r\n                    <Table>\r\n                        <thead className=\"text-nowrap\">\r\n                            <tr>\r\n                                <th>댓글</th>\r\n                                <th>작성자</th>\r\n                                <th>내용</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody >\r\n                            {tableData}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n            {/* <Modal isOpen={modalCreateReply}>\r\n                        <ModalHeader toggle={toggleCreateReply}>댓글 등록</ModalHeader>\r\n\r\n                         <CreateReply postId={modalInput}></CreateReply>\r\n            </Modal>\r\n            <Modal isOpen={modalDeleteReply}>\r\n                        <ModalHeader toggle={toggleDeleteReply}>댓글 삭제</ModalHeader>\r\n\r\n                         <DeleteReply postId={modalInput}></DeleteReply>\r\n            </Modal> */\r\n            }\r\n            <InputGroup>\r\n                <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>댓글</InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input\r\n                    type=\"textarea\"\r\n                    name=\"content\"\r\n                    placeholder=\"댓글\"\r\n                    onChange={handleReplyOnChange}\r\n                    value={reply}></Input>\r\n            </InputGroup>\r\n            <Button\r\n                className=\"btn btn-primary btn-block w-25\"\r\n                color={\"primary\"}\r\n                style={{\r\n                    float: 'right'\r\n                }}\r\n                type=\"post\"\r\n                onClick={createReply}>{\"댓글작성\"}</Button>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ReadCommunity;\r\n"]},"metadata":{},"sourceType":"module"}