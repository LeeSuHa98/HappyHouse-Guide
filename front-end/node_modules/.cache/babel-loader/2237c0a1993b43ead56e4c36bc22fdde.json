{"ast":null,"code":"import _classCallCheck from\"C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var MessageParser=/*#__PURE__*/function(){function MessageParser(actionProvider,state){_classCallCheck(this,MessageParser);this.actionProvider=actionProvider;this.state=state;}_createClass(MessageParser,[{key:\"parse\",value:function parse(message){console.log(message);var lowercase=message.toLowerCase();if(lowercase.includes(\"hello\")){this.actionProvider.greet();}if(lowercase.includes(\"서울오류 행복주택\")){this.actionProvider.answerAddress();}}}]);return MessageParser;}();export default MessageParser;","map":{"version":3,"sources":["C:/Users/kimseonjin/Documents/GitHub/HappyHouse-Guide/front-end/src/chatbot/MessageParser.js"],"names":["MessageParser","actionProvider","state","message","console","log","lowercase","toLowerCase","includes","greet","answerAddress"],"mappings":"6WAAMA,CAAAA,a,yBACF,uBAAYC,cAAZ,CAA4BC,KAA5B,CAAmC,qCACjC,KAAKD,cAAL,CAAsBA,cAAtB,CACA,KAAKC,KAAL,CAAaA,KAAb,CACD,C,+CAED,eAAMC,OAAN,CAAe,CACbC,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAEA,GAAMG,CAAAA,SAAS,CAAGH,OAAO,CAACI,WAAR,EAAlB,CAEA,GAAGD,SAAS,CAACE,QAAV,CAAmB,OAAnB,CAAH,CAA+B,CAC7B,KAAKP,cAAL,CAAoBQ,KAApB,GACD,CAED,GAAGH,SAAS,CAACE,QAAV,CAAmB,WAAnB,CAAH,CAAmC,CACjC,KAAKP,cAAL,CAAoBS,aAApB,GACD,CACF,C,6BAGH,cAAeV,CAAAA,aAAf","sourcesContent":["class MessageParser {\r\n    constructor(actionProvider, state) {\r\n      this.actionProvider = actionProvider;\r\n      this.state = state;\r\n    }\r\n  \r\n    parse(message) {\r\n      console.log(message);\r\n\r\n      const lowercase = message.toLowerCase();\r\n\r\n      if(lowercase.includes(\"hello\")){\r\n        this.actionProvider.greet();\r\n      }\r\n\r\n      if(lowercase.includes(\"서울오류 행복주택\")){\r\n        this.actionProvider.answerAddress();\r\n      }\r\n    }\r\n  }\r\n  \r\n  export default MessageParser;\r\n  "]},"metadata":{},"sourceType":"module"}